{"pageProps":{"postData":{"id":["drafts","intro_to_nix"],"path":"drafts/intro_to_nix","contentHtml":"<p>You should be using Nix as your loca package manager!  Nix is cross-platform and allows you to\ncreate reproducible environments.</p>\n<p>Tools like <code>homebrew</code> and <code>apt</code> modify configuration system wide and there isn't a great way to\nrollback an update that went wrong.</p>\n<p>Nix is all kinds of things, it is a configuration language, package manager, and an operating system\nbut I'm only talking about using as a package manager.</p>\n<p>So why would you use Nix over homebrew or apt?</p>\n<ul>\n<li>\n<p>It installs the packages in an isolated environment and then symlinks them in. Which means it is\nnon-destructive and you can easily revert and installs or upgrades you attempted.</p>\n</li>\n<li>\n<p>It keeps a log of the modifications youâ€™ve made and you can rollback to any version.</p>\n</li>\n<li>\n<p>Cross-platform so you can have the same environment on Linux and OSX.</p>\n</li>\n</ul>\n<p>The other great thing about Nix is there is a difference between packages installed because you\nwanted them and ones that were installed as a dependency.   This allows you to quickly look at\nwhich packages you've personally pulled in:</p>","category":"Linux","date":"2022-02-17T20:00:00-04:00","tags":["Linux"],"title":"Using Nix as your local package manager"}},"__N_SSG":true}