{"pageProps":{"postData":{"id":["2022","intro_to_asdf"],"path":"2022/intro_to_asdf","contentHtml":"<p><a href=\"https://asdf-vm.com/\">asdf</a> is a general purpose version manager that\ncan manage versions of most programming language runtimes through a set\nof plugins.</p>\n<p>With micro-services being all the rage and the ever changing landscape\nof the development world, it is rare to utilize a single version of\nlanguage runtime. Even when you want to upgrade from one to the other\nyou'll need both usable on your system at the same time.</p>\n<p>I've used tools like <code>pyenv</code> and <code>nvm</code> in the past when I needed to change\nversions depending on which project I'm contributing to. But with <code>asdf</code>\nyou have one tool to rule them all!</p>\n<h2>Getting Started</h2>\n<p>The first thing you need to do when working with <code>asdf</code> is grab the\nplugins for the languages you are interested in working with. You can list\nwhat plugins are available:</p>\n<pre><code class=\"hljs language-bash\">> asdf plugin list all\ngolang                       *https://github.com/kennyp/asdf-golang.git\ngolangci-lint                 https://github.com/hypnoglow/asdf-golangci-lint.git\nnodejs                       *https://github.com/asdf-vm/asdf-nodejs.git\npoetry                       *https://github.com/asdf-community/asdf-poetry.git\npython                       *https://github.com/danhper/asdf-python.git\nyarn                         *https://github.com/twuni/asdf-yarn.git\n</code></pre>\n<p>On the left will be the name of the plugin and on the right will be the repository\nwhere it lives.  It'll me marked with an asterisk if you already have it installed.</p>\n<p>To install a plugin you say <code>asdf plugin add &#x3C;plugin></code> to get it installed.  You can\nalso provide the repository where you want it pulled from, for example:</p>\n<pre><code class=\"hljs language-bash\">> asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n> asdf plugin add python https://github.com/danhper/asdf-python.git\n</code></pre>\n<p>This will not give you any version of those languages, it is only installing the\nplugin that knows how to work with those languages.   You are ready to pull down\nany versions you want at that point:</p>\n<pre><code class=\"hljs language-bash\">> asdf install nodejs 14.19.0\n> asdf install python 3.9.10\n</code></pre>\n<p>Once you have the versions installed you will be able to view them like this:</p>\n<pre><code class=\"hljs language-bash\">> asdf list\ngolang\n  1.17.7\nnodejs\n  --<span class=\"hljs-built_in\">help</span>\n  12.22.10\n  14.19.0\n  16.14.0\n  17.5.0\npoetry\n  1.1.13\npython\n  3.9.10\nyarn\n  1.22.17\n</code></pre>\n<h2>Using the installed languages</h2>\n<p>To activate a specific version of a language you have you have three options:</p>\n<h3>Make it global</h3>\n<p>You can make it global, meaning when you run the tool like <code>python</code> it'll use\nthis version for the system:</p>\n<pre><code class=\"hljs language-bash\">> asdf global python 3.9.10\n</code></pre>\n<h3>Make it local</h3>\n<p>You can make it local, which means it will generate a file in the current\ndirectory named <code>.tool-versions</code> and so whenever you change into a directory\nit will activate the versions defined in there.</p>\n<pre><code class=\"hljs language-bash\">> asdf <span class=\"hljs-built_in\">local</span> nodejs 12.22.10\n> <span class=\"hljs-built_in\">cat</span> .tool-versions \nnodejs 12.22.10\n</code></pre>\n<p>The great thing about this is you can commit that file to git and then anyone\nwho checks out the project and uses <code>asdf</code> will have the same versions activated!</p>\n<h3>Temporary</h3>\n<p>If you want to activate a version of a language temporarily you can swap to it\nfor the current shell:</p>\n<pre><code class=\"hljs language-bash\">> asdf shell golang 1.17.7\n> <span class=\"hljs-built_in\">env</span>|grep -i ASDF\nASDF_GOLANG_VERSION=1.17.7\n</code></pre>\n<p>It sets an environment variable that will have preference over the file. If you\never wonder what versions a directory is using you can run:</p>\n<pre><code class=\"hljs language-bash\">> asdf current\ngolang          ______          No version <span class=\"hljs-built_in\">set</span>. Run <span class=\"hljs-string\">\"asdf &#x3C;global|shell|local> golang &#x3C;version>\"</span>\nnodejs          12.22.10        .tool-versions\npoetry          ______          No version <span class=\"hljs-built_in\">set</span>. Run <span class=\"hljs-string\">\"asdf &#x3C;global|shell|local> poetry &#x3C;version>\"</span>\npython          3.9.10          .tool-versions\nyarn            1.22.17         .tool-versions\n</code></pre>\n<h2>Conclusion</h2>\n<p><a href=\"https://asdf-vm.com/\">asdf</a>  is an AWESOME tool to utilize if you find yourself using many\ndifferent languages or many different versions of the same language. You should check it out\nand see if it can improve your workflow.</p>\n<p>I made a video of me using the tool here:</p>\n<iframe width=\"854\" height=\"480\" src=\"https://www.youtube.com/embed/RTaqWRj-6Lg\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","category":"development","date":"2022-02-17T20:00:00-04:00","tags":["python","nodejs","golang","linux"],"title":"Use asdf to manage Python, NodeJS, GoLang and more!"}},"__N_SSG":true}