{"pageProps":{"postData":{"id":["2023","aws_from_scratch_apply_before_merge"],"path":"2023/aws_from_scratch_apply_before_merge","contentHtml":"<p>The two most popular workflows when using terraform are:</p>\n<ul>\n<li>\n<p><strong>Apply after Merge</strong>: This is the default for things like\n<a href=\"https://terraform.io\">terraform cloud</a> and most github actions.</p>\n</li>\n<li>\n<p><strong>Apply before Merge</strong>: This is the default for things like\n<a href=\"https://www.runatlantis.io/\">Atlantis</a>.</p>\n</li>\n</ul>\n<p>I don't like apply-after-merge.  There are a lot of ways where a <code>plan</code>\ncan succeed but an <code>apply</code> will fail and you end up with broken configuration\nin <code>main</code>.</p>\n<p>So in this article I'll show you how to implement <strong>apply-before-merge</strong> with\ngithub actions.</p>\n<p>If you haven't ready my <a href=\"/blog/2023/aws_from_scratch_root_account\">previous article</a>,\nit covers how to setup terraform cloud with apply after merge and bootstrap your AWS\naccount with terraform.  I will assume you have read that article going forward.</p>\n<h1>Repairing the bootstrap</h1>\n<p>With apply-before-merge we need to implement our how github actions rather than\nutilizing the terraform cloud webhooks.  So lets drop the VCS repo and usage of\nthe webhook from our github repository. Basically anything that references\n<code>github_oauth_client</code> can be removed because we will no longer be using OAuth\nwith Github for our CI/CD pipeline.</p>\n<pre><code class=\"hljs language-diff\"><span class=\"hljs-comment\">diff --git a/1-variables.tf b/1-variables.tf</span>\n<span class=\"hljs-comment\">index bf1f434..7109924 100644</span>\n<span class=\"hljs-comment\">--- a/1-variables.tf</span>\n<span class=\"hljs-comment\">+++ b/1-variables.tf</span>\n<span class=\"hljs-meta\">@@ -47,12 +47,6 @@</span> variable \"github_default_branch\" {\n   default     = \"main\"\n }\n \n<span class=\"hljs-deletion\">-variable \"github_oauth_client_id\" {</span>\n<span class=\"hljs-deletion\">-  description = \"The token for the TFC OAuth client shown under VCS providers\"</span>\n<span class=\"hljs-deletion\">-  type        = string</span>\n<span class=\"hljs-deletion\">-  default     = null</span>\n<span class=\"hljs-deletion\">-}</span>\n<span class=\"hljs-deletion\">-</span>\n variable \"aws_root_account_id\" {\n   description = \"The AWS root account we want to apply these changes to\"\n   type        = string\n<span class=\"hljs-comment\">diff --git a/4-tfc.tf b/4-tfc.tf</span>\n<span class=\"hljs-comment\">index a8217b7..9852228 100644</span>\n<span class=\"hljs-comment\">--- a/4-tfc.tf</span>\n<span class=\"hljs-comment\">+++ b/4-tfc.tf</span>\n<span class=\"hljs-meta\">@@ -77,31 +77,12 @@</span> resource \"aws_iam_role_policy_attachment\" \"tfc-access-attach\" {\n   policy_arn = aws_iam_policy.tfc-agent.arn\n }\n \n<span class=\"hljs-deletion\">-/* Fetch an oauth token from the client */</span>\n<span class=\"hljs-deletion\">-data \"tfe_oauth_client\" \"github\" {</span>\n<span class=\"hljs-deletion\">-  /* Don't fetch the client if we don't have the client_id */</span>\n<span class=\"hljs-deletion\">-  count           = var.github_oauth_client_id != null ? 1 : 0</span>\n<span class=\"hljs-deletion\">-  oauth_client_id = var.github_oauth_client_id</span>\n<span class=\"hljs-deletion\">-}</span>\n<span class=\"hljs-deletion\">-</span>\n resource \"tfe_workspace\" \"workspaces\" {\n   count        = length(var.tfc_workspaces)\n   name         = var.tfc_workspaces[count.index]\n   organization = tfe_organization.organization.name\n \n   working_directory = var.tfc_workspaces[count.index]\n<span class=\"hljs-deletion\">-</span>\n<span class=\"hljs-deletion\">-  /* This generates a webhook on the github repository so plans are triggered</span>\n<span class=\"hljs-deletion\">-  automatically.   We dynamically set the setting because we will not have the</span>\n<span class=\"hljs-deletion\">-  oauth client ID on first pass.</span>\n<span class=\"hljs-deletion\">-  */</span>\n<span class=\"hljs-deletion\">-  dynamic \"vcs_repo\" {</span>\n<span class=\"hljs-deletion\">-    for_each = var.github_oauth_client_id != null ? [var.github_oauth_client_id] : []</span>\n<span class=\"hljs-deletion\">-    content {</span>\n<span class=\"hljs-deletion\">-      identifier     = format(\"%s/%s\", var.github_organization, github_repository.repo.name)</span>\n<span class=\"hljs-deletion\">-      oauth_token_id = data.tfe_oauth_client.github[0].oauth_token_id</span>\n<span class=\"hljs-deletion\">-    }</span>\n<span class=\"hljs-deletion\">-  }</span>\n }\n \n /* These variables tell the agent to use dynamic credentials */\n<span class=\"hljs-comment\">diff --git a/settings.auto.tfvars.example b/settings.auto.tfvars.example</span>\n<span class=\"hljs-comment\">index 3327f02..79221c1 100644</span>\n<span class=\"hljs-comment\">--- a/settings.auto.tfvars.example</span>\n<span class=\"hljs-comment\">+++ b/settings.auto.tfvars.example</span>\n<span class=\"hljs-meta\">@@ -4,6 +4,5 @@</span> tfc_workspaces = [\n   \"root\"\n ]\n github_organization    = \"github-org\"\n<span class=\"hljs-deletion\">-github_oauth_client_id = \"oc-...\"</span>\n github_repo_name       = \"my-infra\"\n aws_root_account_id    =  \"888888888888\"\n</code></pre>\n<p>Once that is removed from your <code>infra-bootstrap</code> repository we need to create\na new github secret with a token for Github to be able to talk with TFC. Make\na new file called <code>5-github-actions.tf</code> with the following content:</p>\n<pre><code class=\"hljs language-hcl\"><span class=\"hljs-keyword\">data</span> <span class=\"hljs-string\">\"tfe_team\"</span> <span class=\"hljs-string\">\"owners\"</span> {\n  name         = <span class=\"hljs-string\">\"owners\"</span>\n  organization = tfe_organization.organization.name\n}\n\n<span class=\"hljs-keyword\">resource</span> <span class=\"hljs-string\">\"tfe_team_token\"</span> <span class=\"hljs-string\">\"github_actions_token\"</span> {\n  team_id = <span class=\"hljs-keyword\">data</span>.tfe_team.owners.id\n}\n\n<span class=\"hljs-keyword\">resource</span> <span class=\"hljs-string\">\"github_actions_secret\"</span> <span class=\"hljs-string\">\"tfe_secret\"</span> {\n  repository      = github_repository.repo.name\n  secret_name     = <span class=\"hljs-string\">\"TFE_TOKEN\"</span>\n  plaintext_value = tfe_team_token.github_actions_token.token\n}\n</code></pre>\n<p>Then you should <code>plan</code> and <code>apply</code> the change:</p>\n<pre><code class=\"hljs language-bash\">❯ terraform plan\n❯ terraform apply\n</code></pre>\n<p>The only change to the infrastructure should be to remove the VCS link and\nadding the secret:</p>\n<pre><code class=\"hljs language-diff\">  # tfe_workspace.workspaces[0] will be updated in-place\n  ~ resource \"tfe_workspace\" \"workspaces\" {\n        id                            = \"ws-K1M4tdXUUeASgmUR\"\n        name                          = \"root\"\n        # (20 unchanged attributes hidden)\n\n<span class=\"hljs-deletion\">-       vcs_repo {</span>\n<span class=\"hljs-deletion\">-           identifier         = \"sontek/sontek-infra\" -> null</span>\n<span class=\"hljs-deletion\">-           ingress_submodules = false -> null</span>\n<span class=\"hljs-deletion\">-           oauth_token_id     = \"ot-nMYJRbBb2SH9zCP7\" -> null</span>\n        }\n    }\n\n  # github_actions_secret.tfe_secret will be created\n<span class=\"hljs-addition\">+   resource \"github_actions_secret\" \"tfe_secret\" {</span>\n<span class=\"hljs-addition\">+       created_at      = (known after apply)</span>\n<span class=\"hljs-addition\">+       id              = (known after apply)</span>\n<span class=\"hljs-addition\">+       plaintext_value = (sensitive value)</span>\n<span class=\"hljs-addition\">+       repository      = \"sontek-infra\"</span>\n<span class=\"hljs-addition\">+       secret_name     = \"TFE_TOKEN\"</span>\n<span class=\"hljs-addition\">+       updated_at      = (known after apply)</span>\n    }\n\n  # tfe_team_token.github_actions_token will be created\n<span class=\"hljs-addition\">+   resource \"tfe_team_token\" \"github_actions_token\" {</span>\n<span class=\"hljs-addition\">+       id      = (known after apply)</span>\n<span class=\"hljs-addition\">+       team_id = \"team-...\"</span>\n<span class=\"hljs-addition\">+       token   = (sensitive value)</span>\n    }\n</code></pre>\n<h1>Github Actions</h1>\n<p>Now we need to connect the github actions to replace the plan and apply actions\nthat were being taken by the TFC webhook previously. All of these changes will\nbe in the <code>infra</code> repository that was generated from <code>bootstrap</code>.  We are done\nwith the bootstrap at this point.</p>\n<p>First, lets setup the <code>.github</code> folder, the end result we want is:</p>\n<pre><code class=\"hljs language-bash\">.github/\n└── workflows\n    ├── on-apply-finished.yml\n    ├── on-pull-request-labeled.yml\n    └── on-pull-request.yml\n</code></pre>\n<p>So create the folders:</p>\n<pre><code class=\"hljs language-bash\">❯ <span class=\"hljs-built_in\">mkdir</span> -p .github/workflows\n❯ terraform apply\n</code></pre>\n<h1>On Pull Request</h1>\n<p>The first slow we'll create is the <code>terraform plan</code> workflow which should be\nran whenever a pull request is opened. Create the file\n<code>.github/workflows/on-pull-request.yml</code> and put this content in it:</p>\n<pre><code class=\"hljs language-yml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">pr_build</span>\n\n<span class=\"hljs-attr\">on:</span>\n  <span class=\"hljs-attr\">pull_request:</span>\n    <span class=\"hljs-attr\">branches:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span>\n\n<span class=\"hljs-attr\">env:</span>\n  <span class=\"hljs-attr\">TERRAFORM_CLOUD_TOKENS:</span> <span class=\"hljs-string\">app.terraform.io=${{</span> <span class=\"hljs-string\">secrets.TFE_TOKEN</span> <span class=\"hljs-string\">}}</span>\n  <span class=\"hljs-attr\">GITHUB_TOKEN:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">secrets.GITHUB_TOKEN</span> <span class=\"hljs-string\">}}</span>\n\n<span class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\">terraform_validate:</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-22.04</span>\n    <span class=\"hljs-attr\">strategy:</span>\n      <span class=\"hljs-attr\">fail-fast:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">matrix:</span>\n        <span class=\"hljs-attr\">folder:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">root</span>\n    <span class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Checkout</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v3</span>\n\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">terraform</span> <span class=\"hljs-string\">validate</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">dflook/terraform-validate@v1</span>\n        <span class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n          <span class=\"hljs-attr\">workspace:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n\n  <span class=\"hljs-attr\">terraform_fmt:</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-22.04</span>\n    <span class=\"hljs-attr\">strategy:</span>\n      <span class=\"hljs-attr\">fail-fast:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">matrix:</span>\n        <span class=\"hljs-attr\">folder:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">root</span>\n    <span class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v3</span>\n\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">terraform</span> <span class=\"hljs-string\">fmt</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">dflook/terraform-fmt-check@v1</span>\n        <span class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n          <span class=\"hljs-attr\">workspace:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n\n  <span class=\"hljs-attr\">terraform_plan:</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-22.04</span>\n    <span class=\"hljs-attr\">permissions:</span>\n      <span class=\"hljs-attr\">contents:</span> <span class=\"hljs-string\">read</span>\n      <span class=\"hljs-attr\">pull-requests:</span> <span class=\"hljs-string\">write</span>\n    <span class=\"hljs-attr\">strategy:</span>\n      <span class=\"hljs-attr\">fail-fast:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">matrix:</span>\n        <span class=\"hljs-attr\">folder:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">root</span>\n    <span class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v3</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">terraform</span> <span class=\"hljs-string\">plan</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">dflook/terraform-plan@v1</span>\n        <span class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n          <span class=\"hljs-attr\">workspace:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n</code></pre>\n<p>This creates three jobs:</p>\n<ul>\n<li><strong>terraform_validate</strong>: This validates the terraform via <code>terraform validate</code>\ncommand to make sure that it is correct and doesn't have duplicate resources\nor anything like that.</li>\n<li><strong>terraform_fmt</strong>: This verifies that the terraform is well formatted by\nrunning the <code>terraform fmt</code> command.`</li>\n<li><strong>terraform_plan</strong>: This runs the <code>terraform</code> plan and comments on the PR a\ndiff of the changes for you to verify.</li>\n</ul>\n<p>To verify this is working, lets make a change to the infrastructure so that we\ncan see a plan executed. We can bring back the <code>SQS</code> resource we destroyed in\nthe previous article. Create a file called <code>root/2-sqs.tf</code>:</p>\n<pre><code class=\"hljs language-hcl\"><span class=\"hljs-keyword\">resource</span> <span class=\"hljs-string\">\"aws_sqs_queue\"</span> <span class=\"hljs-string\">\"example-sqs\"</span> {\n  name                      = <span class=\"hljs-string\">\"example-sqs\"</span>\n  message_retention_seconds = <span class=\"hljs-number\">86400</span>\n  receive_wait_time_seconds = <span class=\"hljs-number\">10</span>\n}\n</code></pre>\n<p>Lets push a branch and make a pull request to see the result so far:</p>\n<pre><code class=\"hljs language-bash\">❯ git add .github/ root/\n❯ git checkout -b apply-before-merge\n❯ git commit -m <span class=\"hljs-string\">\"Implemented on-pull-request\"</span>\n❯ git push origin <span class=\"hljs-built_in\">head</span>\n</code></pre>\n<p>After you make the pull request you should 3 checks on it and a comment that\nshows the plan:</p>\n<center>\n<img src=\"/images/posts/aws_apply_before_merge/github_comment.png\" width=\"400\">\n<img src=\"/images/posts/aws_apply_before_merge/github_checks.png\" width=\"400\">\n</center>\n<h1>Apply on Label</h1>\n<p>So now that the plan is working we need some way to <code>apply</code> the changes. I've\nfound the best way to do this is via a label rather than a comment because of\nthe way github actions work. Their event based actions like <code>on-comment</code> aren't\nexecuted in the context of a pull-request.</p>\n<p>Since we will be using a label to signal a plan is ready to be applied lets\ncreate a new file <code>.github/workflows/on-pull-request-labeled.yml</code> and provide\nthis content:</p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">pr_apply</span>\n\n<span class=\"hljs-attr\">on:</span>\n  <span class=\"hljs-attr\">pull_request:</span>\n    <span class=\"hljs-attr\">types:</span> [ <span class=\"hljs-string\">labeled</span> ]\n\n<span class=\"hljs-attr\">env:</span>\n  <span class=\"hljs-attr\">TERRAFORM_CLOUD_TOKENS:</span> <span class=\"hljs-string\">app.terraform.io=${{</span> <span class=\"hljs-string\">secrets.TFE_TOKEN</span> <span class=\"hljs-string\">}}</span>\n  <span class=\"hljs-attr\">GITHUB_TOKEN:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">secrets.GITHUB_TOKEN</span> <span class=\"hljs-string\">}}</span>\n\n<span class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\">terraform_apply:</span>\n    <span class=\"hljs-attr\">if:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">github.event.label.name</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'tfc-apply'</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-22.04</span>\n    <span class=\"hljs-attr\">permissions:</span>\n      <span class=\"hljs-attr\">contents:</span> <span class=\"hljs-string\">read</span>\n      <span class=\"hljs-attr\">pull-requests:</span> <span class=\"hljs-string\">write</span>\n    <span class=\"hljs-attr\">strategy:</span>\n      <span class=\"hljs-attr\">fail-fast:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">matrix:</span>\n        <span class=\"hljs-attr\">folder:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">root</span>\n    <span class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v3</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">dflook/terraform-apply@v1</span>\n        <span class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n          <span class=\"hljs-attr\">workspace:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">matrix.folder</span> <span class=\"hljs-string\">}}</span>\n</code></pre>\n<p>This will fire whenever a pull request is labeled with the <code>tfc-apply</code> label.\nIt will run the <code>apply</code> and update the previous plan comment to let you\nknow the status.</p>\n<center>\n<img src=\"/images/posts/aws_apply_before_merge/tfc_applying.png\" width=\"400\">\n<img src=\"/images/posts/aws_apply_before_merge/tfc_applying_comment.png\" width=\"400\">\n</center>\n<h1>Merge on Apply</h1>\n<p>One thing you'll notice is that the pull request stayed open even after the\ninfrastructure is applied and we don't want that. We want any changes that have\nmade it into the environment to be merged into <code>main</code> automatically. To do\nthis we'll create our final action.</p>\n<p>Create a new file <code>.github/workflows/on-apply-finished.yml</code> with this content:</p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">pr_merge</span>\n\n<span class=\"hljs-comment\"># Only trigger, when the build workflow succeeded</span>\n<span class=\"hljs-attr\">on:</span>\n  <span class=\"hljs-attr\">workflow_run:</span>\n    <span class=\"hljs-attr\">workflows:</span> [<span class=\"hljs-string\">pr_apply</span>]\n    <span class=\"hljs-attr\">types:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">completed</span>\n\n<span class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\">merge:</span>\n    <span class=\"hljs-attr\">if:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">github.event.workflow_run.conclusion</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'success'</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-22.04</span>\n    <span class=\"hljs-attr\">permissions:</span>\n      <span class=\"hljs-attr\">contents:</span> <span class=\"hljs-string\">write</span>\n      <span class=\"hljs-attr\">pull-requests:</span> <span class=\"hljs-string\">write</span>\n      <span class=\"hljs-attr\">checks:</span> <span class=\"hljs-string\">read</span>\n      <span class=\"hljs-attr\">statuses:</span> <span class=\"hljs-string\">read</span>\n      <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-string\">read</span>\n    <span class=\"hljs-attr\">outputs:</span>\n      <span class=\"hljs-attr\">pullRequestNumber:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">steps.workflow-run-info.outputs.pullRequestNumber</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Get information about the current run\"</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">potiuk/get-workflow-origin@v1_5</span>\n        <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">workflow-run-info</span>\n        <span class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\">token:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">secrets.GITHUB_TOKEN</span> <span class=\"hljs-string\">}}</span>\n          <span class=\"hljs-attr\">sourceRunId:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">github.event.workflow_run.id</span> <span class=\"hljs-string\">}}</span>\n\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">merge</span> <span class=\"hljs-string\">a</span> <span class=\"hljs-string\">pull</span> <span class=\"hljs-string\">request</span> <span class=\"hljs-string\">after</span> <span class=\"hljs-string\">terraform</span> <span class=\"hljs-string\">apply</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">sudo-bot/action-pull-request-merge@v1.2.0</span>\n        <span class=\"hljs-attr\">with:</span>\n            <span class=\"hljs-attr\">github-token:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">secrets.GITHUB_TOKEN</span> <span class=\"hljs-string\">}}</span>\n            <span class=\"hljs-attr\">number:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">steps.workflow-run-info.outputs.pullRequestNumber</span> <span class=\"hljs-string\">}}</span>\n</code></pre>\n<p>This will wait until the <code>pr_apply</code> job completes and as long as it was\nsuccessful it'll merge the branch!</p>\n<p><strong>NOTE</strong>: As I mentioned earlier, the event based actions do not run in the\ncontext of the pull request which means you cannot test changes to them during\nthe PR either.  You must merge the <code>on-apply-finished.yml</code> file to <code>main</code>\nbefore it starts working.</p>\n<h1>Branch Protection</h1>\n<p>The final step to the process is to make sure you go to your github settings\nand make sure these status checks are required before merging. Branch protection\nis a feature that will prevent merging changes into a branch unless all\nrequired checks are passing.</p>\n<p>Go to <code>Settings</code> -> <code>Branches</code> -> <code>Branch Protection</code> and add a branch\nprotection rule:</p>\n<center>\n<img src=\"/images/posts/aws_apply_before_merge/branch_protection.png\" width=\"500\">\n</center>\n<p>You want to enable the following settings:</p>\n<ul>\n<li><strong>Branch Name</strong>: main</li>\n<li>✅ Require a pull request before merging</li>\n<li>✅ Require status checks to pass before merging</li>\n</ul>\n<p>Then for <code>Status checks that are required.</code> select all of the ones we've\ncreated:</p>\n<center>\n<img src=\"/images/posts/aws_apply_before_merge/required_checks.png\" height=\"200\">\n</center>","category":"AWS","date":"2023-04-02T00:00:00Z","tags":["AWS","DevOps","SRE"],"title":"AWS From Scratch with Terraform - Apply before Merge with Github Actions"}},"__N_SSG":true}