{"pageProps":{"postData":{"id":["old","preparing_cloud_images_with_libvirt"],"path":"old/preparing_cloud_images_with_libvirt","contentHtml":"<p>This article will show you how to use libvirt to create base images that\ncan be uploaded to OpenStack.</p>\n<h1>Why would you want to do this?</h1>\n<p>Linux distributions like Fedora and Ubuntu already ship \"cloud\" images\nand most providers also have their own custom images for you to use, but\nI find it much more comforting to have full control of the software that\nis installed and I like the ability to easily apply new security patches\nto base images.</p>\n<p>I wouldn't use images to replace config management (CM) with something\nlike <a href=\"http://www.saltstack.com/\">Salt</a> or\n<a href=\"http://www.ansible.com/\">Ansible</a> but they are nice to give sane system\ndefaults in things like <code>grub.conf</code>, <code>sysctl.conf</code>, and shipping a Chef\nor Salt agent so that your CM engine can communicate with your server\nright away.</p>\n<h1>Setting up your environment</h1>\n<p>The first thing you need to do is get a minimal install disk for the\nLinux distribution you want to use. I prefer using Fedora netinst disks\nbut another popular option is Ubuntu Server.</p>\n<p>To get the latest Fedora here, you can choose \"netinst\" under Direct\nDownloads: <a href=\"http://fedoraproject.org/en/get-fedora-all\">http://fedoraproject.org/en/get-fedora-all</a></p>\n<p>To get the latest Ubuntu you can go here:\n<a href=\"http://www.ubuntu.com/download/server\">http://www.ubuntu.com/download/server</a></p>\n<p>Once you have acquired your distribution of choice you just need to\nverify that you have <code>virt-install</code> and <code>virt-viewer</code> installed:</p>\n<p>Fedora:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">yum</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">virt-install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">virt-viewer</span></span></code></pre></div>\n<p>Ubuntu:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">apt-get</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">virtinst</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">virt-viewer</span></span></code></pre></div>\n<p>If you prefer a graphical user interface, you may use <code>virt-manager</code>\ninstead, but I try to keep everything in the CLI; that way it can be\nrepeated easily.</p>\n<h1>Preparing your disk</h1>\n<p>Now that you have a base ISO and the tools necessary, let's get started\nby creating a disk to install the virtual server into. Resizing an image\nisn't an impossible task but it is much easier to choose a reasonably\nsized disk for the purpose it will be used for.</p>\n<p>I primarily use 8 GB disks -- that way we can fit all the system\ncomponents required as well as our own web applications. Any large files\nshould be placed in a SAN or something like Dreamhost's dreamobjects.</p>\n<p>The other big decision you must make upfront is what disk format you\nwant to use -- the trade-off is disk space vs performance. The two\nprimary formats are qcow2 (QEMU Copy on Write) and Raw. qcow2 is great\nif you have limited disk space and don't want to allocate the full 8 GB\nup front. Raw is preferred if you want the best performance.</p>\n<p>If you choose qcow2, you'll also need to make sure you have <code>qemu-img</code>:</p>\n<p>Fedora:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">yum</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">qemu-img</span></span></code></pre></div>\n<p>Ubuntu:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">apt-get</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">qemu-utils</span></span></code></pre></div>\n<p>Create a raw disk:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">fallocate</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-l</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">8192</span><span style=\"color: #96D0FF\">M</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">server.img</span></span></code></pre></div>\n<p>Create a qcow2 disk:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">qemu-img</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">create</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-f</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">qcow2</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">server.qcow2</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">8</span><span style=\"color: #96D0FF\">G</span></span></code></pre></div>\n<h1>Installing your distribution onto the disk</h1>\n<p>We will use the <code>virt-install</code> command to get the distribution installed\nonto the disk image.</p>\n<p>To install Fedora on a qcow2 disk image:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">virt-install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--name</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">base_server</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--ram</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">1024</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--cdrom=./Fedora-20-x86_64-netinst.iso</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">\\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">--disk </span><span style=\"color: #96D0FF\">path=./server.qcow2,format=qcow2</span></span></code></pre></div>\n<p>To install Ubuntu Server on a raw disk image:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">virt-install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--name</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">base_server</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--ram</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">1024</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--cdrom=./ubuntu-12.04.4-server-amd64.iso</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">\\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">--disk </span><span style=\"color: #96D0FF\">path=./server.img,format=raw</span></span></code></pre></div>\n<p>You should follow the standard install steps that you normally would\nwhen setting up your distribution. But here are some tips for each:</p>\n<p>Fedora:</p>\n<ul>\n<li>Choose minimal install -- by default it selects \"GNOME\".</li>\n</ul>\n<p>Ubuntu:</p>\n<ul>\n<li>\n<p>Be sure to select OpenSSH server -- it won't install it by\ndefault.</p>\n</li>\n<li>\n<p>On Ubuntu 12.04, there is a bug that makes it hang after running\n<code>fsck</code>. You will need to edit grub to get it to boot, hit _<a href=\"\">e</a> at\nthe boot prompt and add \"nomodeset\" on the linux line. You will\nknow that you need to do this if your boot hangs on fsck:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">fsck</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">from</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">util-linux</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">2.20</span><span style=\"color: #96D0FF\">.1</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">/dev/mapper/ubuntu--vg-root:</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">clean,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">57106</span><span style=\"color: #96D0FF\">/441504</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">files,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">286779</span><span style=\"color: #96D0FF\">/1764352</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">blocks</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">/dev/sda1:</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">clean,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">230</span><span style=\"color: #96D0FF\">/62248</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">files,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">39833</span><span style=\"color: #96D0FF\">/248832</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">blocks</span></span></code></pre></div>\n</li>\n</ul>\n<h1>Preparing image for openstack</h1>\n<p>To prepare a virtual machine for the cloud, you will need to install the\n<code>cloud-init</code> package, which allows the cloud providers to inject certain\nsystem settings when creating servers based on the image. These are\nthings like hostname and ssh keys.</p>\n<p>On Fedora:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">yum</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">cloud-init</span></span></code></pre></div>\n<p>On Ubuntu:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">apt-get</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">cloud-init</span></span></code></pre></div>\n<p>Then you need to just configure <code>cloud-init</code> by editing\n<code>/etc/cloud/cloud.cfg</code> and update the <code>datasources_list</code> section to\ninclude EC2. OpenStack uses EC2 metadata for <code>cloud-init</code>.</p>\n<p>You should also verify the user setting in this same config and define\nthe user you plan to use, it will be where the <code>authorized_keys</code> file is\nsetup for when the cloud provider injects your SSH key into the server.</p>\n<p><code>cloud-init</code> will not create the user for you, it will just assign the\nSSH keypair and reset the password. So make sure the user defined in\n<code>cloud.cfg</code> is also created on the system.</p>\n<p>Once you have your <code>cloud-init</code> settings the way you want them, just\nshutdown and run the <code>virt-sysprep</code> command.</p>\n<p>On the guest machine:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">shutdown</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-h</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">now</span></span></code></pre></div>\n<p>On the host machine:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">virt-sysprep</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-d</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">base_server</span></span></code></pre></div>\n<h1>Uploading your image to OpenStack</h1>\n<p>Using the glance API it is very straightforward to upload the image to\nOpenStack. Just run the following command:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">glance</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">image-create</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--name</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">base_server</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--disk-format=qcow2</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">\\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">--container-format=bare </span><span style=\"color: #6CB6FF\">--is-public=True</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--file</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">server.qcow2</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--progress</span></span></code></pre></div>\n<p>Once the image upload completes you will be able to use it immediately\nwithin nova. You can reference it by name or by the id from [glance\nimage-list]{.title-ref}.</p>\n<p>To create your first instance from the image:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">nova</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">boot</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--flavor</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">m1.tiny</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--image</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">base_server</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">--key-name</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">devops</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">\\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">--security-groups </span><span style=\"color: #96D0FF\">free_for_all</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">test_server</span></span></code></pre></div>\n<p>Obviously the security groups, key name, and flavors are based on your\ninstallation of OpenStack but can all easily be queried from the nova\nAPI:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">nova</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">flavor-list</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">nova</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">secgroup-list</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">nova</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">keypair-list</span></span></code></pre></div>\n<p>And you are done! You'll be able to re-use your new image as a base for\nall new instances you spin up in openstack!</p>","category":"DevOps","date":"2014-08-02T19:00:00-05:00","tags":["Linux"],"title":"Preparing custom images for OpenStack"}},"__N_SSG":true}