{"pageProps":{"postData":{"id":["old","convert_a_string_to_an_integer_in_python"],"path":"old/convert_a_string_to_an_integer_in_python","contentHtml":"<p>A fun interview question some developers like to ask is to have you\nconvert ascii characters to an integer without using built in methods\nlike string.atoi or int().</p>\n<p>So using python the obvious ways to convert a string to an integer are\nthese:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">int</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'1234'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">1234</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> string</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> string.atoi(</span><span style=\"color: #96D0FF\">'1234'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">1234</span></span></code></pre></div>\n<p>The interesting thing here is finding out where on the ascii character\ntable the number is. Luckily python has this already built in with the\nord method:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">help</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #6CB6FF\">...</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(c) </span><span style=\"color: #FF938A; font-style: italic\">-></span><span style=\"color: #ADBAC7\"> integer</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    Return the integer ordinal of a one</span><span style=\"color: #F47067\">-</span><span style=\"color: #ADBAC7\">character string.</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'1'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">49</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'2'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">50</span></span></code></pre></div>\n<p>You can see that the numbers are grouped together on the ascii table, so\nyou just have to grab '0' as the base and subtract the rest:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'1'</span><span style=\"color: #ADBAC7\">)</span><span style=\"color: #F47067\">-</span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'0'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">1</span></span></code></pre></div>\n<p>So if we have the string '1234', we can get each of the individual\nnumbers by looping over it:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> num_string </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'1234'</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> num_list </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> []</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> base </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'0'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">for</span><span style=\"color: #ADBAC7\"> num </span><span style=\"color: #F47067\">in</span><span style=\"color: #ADBAC7\"> num_string:</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">...</span><span style=\"color: #ADBAC7\">   num_list.append(</span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(num) </span><span style=\"color: #F47067\">-</span><span style=\"color: #ADBAC7\"> base)</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">...</span></span>\n<span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">print</span><span style=\"color: #ADBAC7\"> num_list</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">[</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #6CB6FF\">2</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #6CB6FF\">3</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #6CB6FF\">4</span><span style=\"color: #ADBAC7\">]</span></span></code></pre></div>\n<p>but now how to we combine all these together to get 1234? You can't\njust add them up because you'll just get 1+2+3+4 = 10.</p>\n<p>So, we have to get 1000 + 200 + 30 + 4, which is a simple problem to\nsolve. Its just number times 10 to the nth power, so the final solution\nis:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #ADBAC7\">num </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'1234'</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">new_num </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">0</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">base </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'0'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #F47067\">for</span><span style=\"color: #ADBAC7\"> i,n </span><span style=\"color: #F47067\">in</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">enumerate</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #6CB6FF\">reversed</span><span style=\"color: #ADBAC7\">(num)):</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">      new_num </span><span style=\"color: #F47067\">+=</span><span style=\"color: #ADBAC7\"> (</span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(n) </span><span style=\"color: #F47067\">-</span><span style=\"color: #ADBAC7\"> base) </span><span style=\"color: #F47067\">*</span><span style=\"color: #ADBAC7\"> (</span><span style=\"color: #6CB6FF\">10</span><span style=\"color: #F47067\">**</span><span style=\"color: #ADBAC7\">i)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">print</span><span style=\"color: #ADBAC7\"> new_num</span></span></code></pre></div>\n<p>This code is a little verbose though, lets make it a dirty nasty one\nliner!</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F47067\">>>></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">sum</span><span style=\"color: #ADBAC7\">([(</span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(n)</span><span style=\"color: #F47067\">-</span><span style=\"color: #6CB6FF\">ord</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'0'</span><span style=\"color: #ADBAC7\">)) </span><span style=\"color: #F47067\">*</span><span style=\"color: #ADBAC7\"> (</span><span style=\"color: #6CB6FF\">10</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">**</span><span style=\"color: #ADBAC7\"> i) </span><span style=\"color: #F47067\">for</span><span style=\"color: #ADBAC7\"> i,n </span><span style=\"color: #F47067\">in</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">enumerate</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #6CB6FF\">reversed</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #96D0FF\">'1234'</span><span style=\"color: #ADBAC7\">))])</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">1234</span></span></code></pre></div>","category":"Development","date":"2010-10-27T19:00:00-05:00","tags":["Python","Interviews"],"title":"Convert a string to an integer in Python"}},"__N_SSG":true}