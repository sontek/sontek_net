{"pageProps":{"postData":{"id":["2022","intro_to_just"],"path":"2022/intro_to_just","contentHtml":"<p>I believe every project should have a CLI built around the standard workflows of developing\non the project.  Things like:</p>\n<ul>\n<li>Install dependencies</li>\n<li>Run tests</li>\n<li>Run linter and formatters</li>\n<li>Build project</li>\n<li>Start / Stop the docker environment</li>\n</ul>\n<p>The reason I think this is important is because it makes a nice consistent and discoverable\nentrypoint for understanding how you should work in the project.   If you only provide the\ninstructions in the <code>README</code> then you have to remember to update those docs every time you\nadd a new command.  Those docs aren't easily testable either.</p>\n<p>Most of my career the command runner of choice for my projects as been <code>GNU Make</code> but it was\ndefinitely the wrong tool for the job.  It is a build tool that I bent into shape to work\nas a command runner for me.   These days I use the tool <a href=\"https://github.com/casey/just\">just</a>.</p>\n<h2>Intro to just</h2>\n<p><a href=\"https://github.com/casey/just\">Just</a> is a modern command runner with a similar syntax to <code>make</code>\nthat provides a nice way for building out your project CLI!  You create a file named <code>justfile</code>\nat the root of your project and then the basic syntax is:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"make\" data-theme=\"default\"><code data-language=\"make\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #DCBDFB\">help</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  @just --list</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #768390\"># My first command</span></span>\n<span data-line=\"\"><span style=\"color: #DCBDFB\">first</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  echo \"Any commands you want to run go here!\"</span></span></code></pre></div>\n<p>The first <code>help</code> line defines a command \"help\" for your CLI and it lists out all the other available\ncommans.  I always put this line first because <code>just</code> runs the first command in the file if a specific\ncommand isn't requested.  The output of this file looks like this:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">❯</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">just</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">Available</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">recipes:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #F69D50\">first</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #768390\"># My first command</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #F69D50\">help</span></span></code></pre></div>\n<p>Having help automatically generated is fantastic!  Its also really helpful that it adds the comment\nto the command so that each command is self-documenting.  If you run the <code>first</code> command you'll notice\nit also has a feature where it prints out the commands being ran so the user knows exactly what is\nhappening:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">❯</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">just</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">first</span></span>\n<span data-line=\"\"><span style=\"color: #6CB6FF\">echo</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">\"Any commands you want to run go here!\"</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">Any</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">commands</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">you</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">want</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">to</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">run</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">go</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">here!</span></span></code></pre></div>\n<p>This doesn't always make sense though, so you can quickly remove that behavior by putting an <code>@</code> in front\nof any of the commands, like I did for the <code>help</code> command above.  You can also declare dependencies if\nyou have re-usable parts of your workflow that many of your commands need.</p>\n<p>For example, you might want to check versions of things like <code>node</code> and <code>python</code> before running the install\nof their dependencies. So you could do something like:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"make\" data-theme=\"default\"><code data-language=\"make\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #DCBDFB\">help</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  @just --list</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">node_version := \"v17.6.0\"</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #768390\"># Verify system dependencies</span></span>\n<span data-line=\"\"><span style=\"color: #DCBDFB\">check-dependencies</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  @if [ ! \"</span><span style=\"color: #96D0FF\">$(</span><span style=\"color: #ADBAC7\">node --version</span><span style=\"color: #96D0FF\">)</span><span style=\"color: #ADBAC7\">\" = {{ node_version }} ]; \\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  then \\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #DCBDFB\">echo</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #DCBDFB\">\"Missing</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #DCBDFB\">node</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #DCBDFB\">version</span><span style=\"color: #ADBAC7\">: {{ node_version }}\"; </span><span style=\"color: #F47067\">\\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    exit 1; </span><span style=\"color: #F47067\">\\</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  fi</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #768390\"># Install frontend</span></span>\n<span data-line=\"\"><span style=\"color: #DCBDFB\">install</span><span style=\"color: #ADBAC7\">: check-dependencies</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  @echo \"yarn install\"</span></span></code></pre></div>\n<p>which ends up with a CLI that looks like this:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">❯</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">just</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">Available</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">recipes:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #F69D50\">check-dependencies</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #768390\"># Verify system dependencies</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #F69D50\">help</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #F69D50\">install</span><span style=\"color: #ADBAC7\">            </span><span style=\"color: #768390\"># Install frontend</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #F69D50\">❯</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">just</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">install</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">Missing</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">node</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">version:</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">v17.6.0</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">error:</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">Recipe</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">`</span><span style=\"color: #F69D50\">check-dependencies</span><span style=\"color: #96D0FF\">`</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F69D50\">failed</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">on</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">line</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">12</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">with</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">exit</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">code</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">1</span></span></code></pre></div>\n<p>This opens up a lot of possibilities! In the above <code>justfile</code> you'll notice I'm using a multi-line\ncommand but I have <code>\\</code> at the end of each line.  This is because <code>just</code> by default is going to run\neach new line in their own shell.   So this just makes all those lines run in the same shell.</p>\n<p>You do not have to use this syntax though.  Just is <code>polyglot</code> and can run commands from any language\nyou would like.</p>\n<h3>Polyglot</h3>\n<p>If you want to use a bash script as one of your commands, you can do so by adding a shebang at the top:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"make\" data-theme=\"default\"><code data-language=\"make\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #DCBDFB\">check-dependencies</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  </span><span style=\"color: #768390\">#!/usr/bin/env bash</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  set -euxo pipefail</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  if [ ! \"</span><span style=\"color: #96D0FF\">$(</span><span style=\"color: #ADBAC7\">node --version</span><span style=\"color: #96D0FF\">)</span><span style=\"color: #ADBAC7\">\" = {{ node_version }} ];</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  then</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #DCBDFB\">echo</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #DCBDFB\">\"Missing</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #DCBDFB\">node</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #DCBDFB\">version</span><span style=\"color: #ADBAC7\">: {{ node_version }}\"</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    exit 1</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  fi</span></span></code></pre></div>\n<p>Now the entire command is using a bash script to execute! This gets really interesting if you want to start\nusing things like python, so if you'd like to change the dependency checker above to python:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"python\" data-theme=\"default\"><code data-language=\"python\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #ADBAC7\">check</span><span style=\"color: #F47067\">-</span><span style=\"color: #ADBAC7\">dependencies:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  </span><span style=\"color: #768390\">#!/usr/bin/env python3</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  </span><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> subprocess</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  result </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> subprocess.run(</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    [</span><span style=\"color: #96D0FF\">'node'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #96D0FF\">'--version'</span><span style=\"color: #ADBAC7\">],</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #F69D50\">stdout</span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\">subprocess.</span><span style=\"color: #6CB6FF\">PIPE</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  )</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  </span><span style=\"color: #F47067\">if</span><span style=\"color: #ADBAC7\"> result </span><span style=\"color: #F47067\">!=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">\"</span><span style=\"color: #F47067\">{{</span><span style=\"color: #96D0FF\"> node_version </span><span style=\"color: #F47067\">}}</span><span style=\"color: #96D0FF\">\"</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #6CB6FF\">print</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #F47067\">f</span><span style=\"color: #96D0FF\">\"Missing node version: </span><span style=\"color: #F47067\">{{</span><span style=\"color: #96D0FF\"> node_version </span><span style=\"color: #F47067\">}}</span><span style=\"color: #96D0FF\">\"</span><span style=\"color: #ADBAC7\">)</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #6CB6FF\">exit</span><span style=\"color: #ADBAC7\">(</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">)</span></span></code></pre></div>\n<p>You can even tell <code>just</code> that you want to use a specific language for all commands!</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"\" data-theme=\"default\"><code data-language=\"\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #adbac7\">set shell := [\"python3\", \"-c\"]</span></span></code></pre></div>\n<p>This not only affects the commands you have in your recipe but also anything inside\nbackticks!  So something like:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"make\" data-theme=\"default\"><code data-language=\"make\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #ADBAC7\">`print(\"Rust is the best programming language\")`</span></span></code></pre></div>\n<p>It would run through python instead of the shell.</p>\n<h3>Enviornment Files</h3>\n<p>One of the other modern things <code>just</code> adds to your workflow is the ability to utilize dotenv\nfiles.  So for example if you want to define which port you launch your http server on, you can\ncreate a file called <code>.env</code>:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #ADBAC7\">WEBSERVER_PORT</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">9000</span></span></code></pre></div>\n<p>and then utilize it in your <code>justfile</code>:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"make\" data-theme=\"default\"><code data-language=\"make\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #ADBAC7\">set dotenv-load</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color: #DCBDFB\">http</span><span style=\"color: #ADBAC7\">:</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  @echo \"Starting webserver in current directory\"</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">  python3 -m http.server </span><span style=\"color: #6CB6FF\">$W</span><span style=\"color: #ADBAC7\">EBSERVER_PORT</span></span></code></pre></div>\n<p>When you run <code>just http</code> it'll launch the http server on port 9000.  One important line\nin this file is <code>set dotenv-load</code>, it will not load the <code>.env</code> file without you telling it to.</p>\n<h2>Don't use language specific scripts!</h2>\n<p>I'n not a fan of language specific command runners like <code>package.json</code> in the node community.</p>\n<p>It always frustrates me when I start working on a project that heavily uses <code>scripts</code> in their\npackage.json instead of using a real command runner. <code>json</code> is not a great format for writing\ndiscoverable CLI commands. For example if you wanted to write a <code>next.js</code> build script:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"json\" data-theme=\"default\"><code data-language=\"json\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #ADBAC7\">    </span><span style=\"color: #96D0FF\">\"scripts\"</span><span style=\"color: #ADBAC7\">: {</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">        </span><span style=\"color: #8DDB8C\">\"predeploy\"</span><span style=\"color: #ADBAC7\">: </span><span style=\"color: #96D0FF\">\"yarn build &#x26;&#x26; yarn export &#x26;&#x26; touch dist/.nojekyll &#x26;&#x26; echo sontek.net > dist/CNAME\"</span><span style=\"color: #ADBAC7\">,</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">        </span><span style=\"color: #8DDB8C\">\"deploy\"</span><span style=\"color: #ADBAC7\">: </span><span style=\"color: #96D0FF\">\"gh-pages -d dist -t true\"</span><span style=\"color: #ADBAC7\">,</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">        </span><span style=\"color: #8DDB8C\">\"build\"</span><span style=\"color: #ADBAC7\">: </span><span style=\"color: #96D0FF\">\"next build\"</span><span style=\"color: #ADBAC7\">,</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">        </span><span style=\"color: #8DDB8C\">\"export\"</span><span style=\"color: #ADBAC7\">: </span><span style=\"color: #96D0FF\">\"next export -o dist/\"</span><span style=\"color: #ADBAC7\">,</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">    },</span></span></code></pre></div>\n<p>Combining all those commands is really messy and not easily understandable through <code>yarn run</code>:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"bash\" data-theme=\"default\"><code data-language=\"bash\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #F69D50\">❯</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">yarn</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">run</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">yarn</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">run</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">v1.22.17</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">info</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">Commands</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">available</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">from</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">binary</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">scripts:</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">autoprefixer,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">browserslist,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">css-blank-pseudo,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">css-has-pseudo,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">css-prefers-color-scheme,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">cssesc,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">esparse,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">esvalidate,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">extract-zip,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">gh-pages,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">gh-pages-clean,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">js-yaml,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">loose-envify,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">nanoid,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">next,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">prettier,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">resolve,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">rimraf,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">semver,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">svgo,</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">uvu</span></span>\n<span data-line=\"\"><span style=\"color: #F69D50\">info</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">Project</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">commands</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">   </span><span style=\"color: #F69D50\">-</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">build</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">      </span><span style=\"color: #F69D50\">next</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">build</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">   </span><span style=\"color: #F69D50\">-</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">deploy</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">      </span><span style=\"color: #F69D50\">gh-pages</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-d</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">dist</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-t</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">true</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">   </span><span style=\"color: #F69D50\">-</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">export</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">      </span><span style=\"color: #F69D50\">next</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">export</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-o</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">dist/</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">   </span><span style=\"color: #F69D50\">-</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">predeploy</span></span>\n<span data-line=\"\"><span style=\"color: #ADBAC7\">      </span><span style=\"color: #F69D50\">yarn</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">build</span><span style=\"color: #ADBAC7\"> &#x26;&#x26; </span><span style=\"color: #F69D50\">yarn</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">export</span><span style=\"color: #ADBAC7\"> &#x26;&#x26; </span><span style=\"color: #F69D50\">touch</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">dist/.nojekyll</span><span style=\"color: #ADBAC7\"> &#x26;&#x26; </span><span style=\"color: #6CB6FF\">echo</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">sontek.net</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #F47067\">></span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">dist/CNAME</span></span></code></pre></div>\n<p>I'd much rather have this:</p>\n<div data-rehype-pretty-code-fragment=\"\"><pre class=\"github-dark-dimmed\" style=\"background-color: #22272e\" tabindex=\"0\" data-language=\"\" data-theme=\"default\"><code data-language=\"\" data-theme=\"default\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color: #adbac7\">❯ just</span></span>\n<span data-line=\"\"><span style=\"color: #adbac7\">Available recipes:</span></span>\n<span data-line=\"\"><span style=\"color: #adbac7\">    build       # Build frontend assets</span></span>\n<span data-line=\"\"><span style=\"color: #adbac7\">    deploy      # Deploy assets to cloudfront</span></span>\n<span data-line=\"\"><span style=\"color: #adbac7\">    export      # Export to static assets (no SSR)</span></span></code></pre></div>\n<h2>Conclusion</h2>\n<p><a href=\"https://github.com/casey/just\">Just</a> is a wonderful tool for building project specific CLIs without much effort. It is\na great replacement for <code>Make</code> if you are using it as a command runner and it has most of the features you'd need.</p>\n<p>I recommend adding a <code>justfile</code> to your projects today! If you'd like to see a real world example of how to use <code>just</code>,\nyou can check out the one I use to maintain my <a href=\"https://github.com/sontek/homies/blob/master/justfile\">home directory</a>!</p>","category":"Development","date":"2022-02-25T18:00:00-06:00","tags":["Linux"],"title":"Automate project workflows with the command runner Just!"}},"__N_SSG":true}